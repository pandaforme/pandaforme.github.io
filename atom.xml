<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Programming blog</title>
  
  <subtitle>This is a programming blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://pandaforme.github.io/"/>
  <updated>2018-05-25T03:55:13.569Z</updated>
  <id>https://pandaforme.github.io/</id>
  
  <author>
    <name>pandaforme</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[Java] Flow control in try catch finally</title>
    <link href="https://pandaforme.github.io/2018/05/25/Java-Flow-control-in-try-catch-finally/"/>
    <id>https://pandaforme.github.io/2018/05/25/Java-Flow-control-in-try-catch-finally/</id>
    <published>2018-05-25T03:35:00.000Z</published>
    <updated>2018-05-25T03:55:13.569Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5728;&#x6B63;&#x5E38;&#x60C5;&#x6CC1;&#x4E0B;&#xFF0C;&#x7576;&#x57F7;&#x884C;&#x5B8C; try &#x7684;&#x6700;&#x5F8C;&#x4E00;&#x884C;&#x6216;&#x662F;&#x8981;&#x628A;&#x63A7;&#x5236;&#x6B0A;&#x8F49;&#x4EA4;&#x7D66;&#x5B83;&#x7684;&#x547C;&#x53EB;&#x8005; (return &#x6216;&#x4E1F;&#x51FA; exception)&#x6642;&#xFF0C;&#x6703;&#x57F7;&#x884C; finally &#xFF0C;&#x7576; finally &#x57F7;&#x884C;&#x5B8C;&#x7562;&#xFF0C;&#x518D;&#x628A;&#x63A7;&#x5236;&#x6B0A;&#x8F49;&#x4EA4;&#x7D66; try&#x3002;</p><p>&#x4F46;&#x662F;&#x7576;&#x5728; finally &#x88E1;&#x9762;&#x5BEB;&#x4E0B; return, throw exception, continue, break &#x6703;&#x6C92;&#x6709;&#x8FA6;&#x6CD5;&#x628A;&#x63A7;&#x5236;&#x6B0A;&#x8F49;&#x4EA4;&#x7D66; try&#xFF0C;&#x9020;&#x6210;&#x4E0D;&#x53EF;&#x4EE5;&#x9810;&#x671F;&#x7684;&#x7D50;&#x679C;&#x3002;&#x6240;&#x4EE5;<strong>&#x5343;&#x842C;</strong>&#x4E0D;&#x8981;&#x5728; finally &#x88E1;&#x9762; return &#x6216;&#x4E1F;&#x51FA; exception&#xFF0C;&#x96D6;&#x7136;&#x73FE;&#x5728;&#x7684; IDE &#x90FD;&#x6703;&#x8070;&#x660E;&#x5230;&#x5E6B;&#x4F60;&#x6AA2;&#x67E5;&#x51FA;&#x4F86;&#x3002;</p><p>&#x4E3B;&#x8981;&#x539F;&#x56E0; try-finally &#x8F49;&#x6210; Java byte code &#x6642;&#x5019;&#xFF0C;finally &#x662F;&#x4E00;&#x500B;&#x526F;&#x7A0B;&#x5F0F;&#xFF0C;&#x7576; try &#x57F7;&#x884C;&#x5B8C;&#x7562;&#x6642;&#x5019;&#x5C31;&#x6703;&#x53BB;&#x547C;&#x53EB; finally &#x526F;&#x7A0B;&#x5F0F;&#x3002;&#x7576; finally &#x526F;&#x7A0B;&#x5F0F;&#x57F7;&#x884C;&#x5B8C;&#x7562;&#xFF0C;&#x6703;&#x8DF3;&#x5230; try &#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x4F4D;&#x7F6E;&#x3002;&#x4F46;&#x5728; finally &#x88E1;&#x9762;&#x52A0;&#x4E86;&#x9019;&#x4E9B;return, throw exception, continue, break&#xFF0C;&#x5B83;&#x5C31;&#x63D0;&#x524D;&#x8DF3;&#x51FA;&#x7A0B;&#x5F0F;&#x56DE;&#x4E0D;&#x5230;&#x6B63;&#x78BA;&#x7684;&#x4F4D;&#x7F6E;&#x3002;</p><p>&#x53E6;&#x5916;&#xFF0C;&#x7576; try &#x88E1;&#x9762;&#x5F37;&#x5236;&#x4E2D;&#x65B7; JVM &#x6216;&#x662F;&#x975E;&#x9810;&#x671F;&#x7684;&#x60C5;&#x6CC1;&#x767C;&#x751F;&#x63D0;&#x65E9;&#x7D50;&#x675F; (&#x9019;&#x88E1;&#x6240;&#x6307;&#x7684;&#x975E;&#x9810;&#x671F;&#x7684;&#x60C5;&#x6CC1;&#x4E0D;&#x662F;&#x4E1F;&#x51FA; exception&#xFF0C;&#x800C;&#x662F;&#x7576;&#x4E0B;&#x7684; thread &#x7A81;&#x7136;&#x6B7B;&#x6389;&#x6216;&#x662F; JVM &#x7A81;&#x7136;&#x6709;&#x554F;&#x984C;&#x9019;&#x985E;&#x7684;&#x3002;)&#xFF0C;finally &#x662F;&#x4E0D;&#x6703;&#x57F7;&#x884C;&#x7684;&#x3002;</p><h1 id="Try-finally-clause"><a href="#Try-finally-clause" class="headerlink" title="Try-finally clause"></a>Try-finally clause</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> {</span><br><span class="line">      <span class="comment">// Block of code with multiple exit points</span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">finally</span> {</span><br><span class="line">      <span class="comment">// Block of code that is always executed when the try block is exited,</span></span><br><span class="line">      <span class="comment">// no matter how the try block is exited</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a>Example 1</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>; </span><br><span class="line"><span class="keyword">try</span> { </span><br><span class="line">  i = i + <span class="number">1</span>; </span><br><span class="line">  System.out.println(i);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">finally</span>{</span><br><span class="line">  i = i + <span class="number">2</span>; </span><br><span class="line">  System.out.println(i);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//1</span></span><br><span class="line"><span class="comment">//3</span></span><br></pre></td></tr></table></figure><h1 id="Example-2"><a href="#Example-2" class="headerlink" title="Example 2"></a>Example 2</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>{</span><br><span class="line">  System.out.println(doSomeThing());</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">doSomeThing</span><span class="params">()</span></span>{</span><br><span class="line">  <span class="keyword">try</span> { </span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">finally</span>{</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//2</span></span><br></pre></td></tr></table></figure><h1 id="Example-3"><a href="#Example-3" class="headerlink" title="Example 3"></a>Example 3</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">    System.out.println(doSomeThing(<span class="keyword">true</span>));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">doSomeThing</span><span class="params">(<span class="keyword">boolean</span> bVal)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="keyword">if</span> (bVal) {</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    } <span class="keyword">finally</span> {</span><br><span class="line">        System.out.println(<span class="string">&quot;Got old fashioned.&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// Got old fashioned.</span></span><br><span class="line"><span class="comment">// 1</span></span><br></pre></td></tr></table></figure><h1 id="Example-4"><a href="#Example-4" class="headerlink" title="Example 4"></a>Example 4</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">    System.out.println(doSomeThing());</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">doSomeThing</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;from try&quot;</span>);</span><br><span class="line">    } <span class="keyword">finally</span> {</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;from finally&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// Exception in thread &quot;main&quot; java.lang.Exception: from finally</span></span><br></pre></td></tr></table></figure><h1 id="Example-5"><a href="#Example-5" class="headerlink" title="Example 5"></a>Example 5</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">  System.out.println(doSomeThing(<span class="keyword">true</span>));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">doSomeThing</span><span class="params">(<span class="keyword">boolean</span> bVal)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (<span class="keyword">true</span>) {</span><br><span class="line">      <span class="keyword">try</span> {</span><br><span class="line">          <span class="keyword">try</span> {</span><br><span class="line">              i = <span class="number">1</span>;</span><br><span class="line">          } <span class="keyword">finally</span> {    <span class="comment">// the first finally clause</span></span><br><span class="line">              i = <span class="number">2</span>;</span><br><span class="line">          }</span><br><span class="line">          i = <span class="number">3</span>;</span><br><span class="line">          <span class="keyword">return</span> i;    <span class="comment">// this never completes, because of the continue</span></span><br><span class="line">      } <span class="keyword">finally</span> {        <span class="comment">// the second finally clause</span></span><br><span class="line">          <span class="keyword">if</span> (i == <span class="number">3</span>) {</span><br><span class="line">              <span class="keyword">continue</span>; <span class="comment">// this continue overrides the return statement</span></span><br><span class="line">          }</span><br><span class="line">      }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="Example-6"><a href="#Example-6" class="headerlink" title="Example 6"></a>Example 6</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">    System.out.println(doSomeThing());</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">doSomeThing</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        System.exit(<span class="number">1</span>);</span><br><span class="line">    } <span class="keyword">finally</span> {</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;from finally&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// terminates JVM and doesn&apos;t execute finally block</span></span><br></pre></td></tr></table></figure><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://www.javaworld.com/article/2077609/core-java/try-finally-clauses-defined-and-demonstrated.html" target="_blank" rel="noopener">Try-finally clauses defined and demonstrated</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;#x5728;&amp;#x6B63;&amp;#x5E38;&amp;#x60C5;&amp;#x6CC1;&amp;#x4E0B;&amp;#xFF0C;&amp;#x7576;&amp;#x57F7;&amp;#x884C;&amp;#x5B8C; try &amp;#x7684;&amp;#x6700;&amp;#x5F8C;&amp;#x4E00;&amp;#x884C;&amp;#x6
      
    
    </summary>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>[Scala] The importance of recursion</title>
    <link href="https://pandaforme.github.io/2017/04/26/Scala-The-importance-of-recursion/"/>
    <id>https://pandaforme.github.io/2017/04/26/Scala-The-importance-of-recursion/</id>
    <published>2017-04-26T09:55:00.000Z</published>
    <updated>2017-05-13T16:20:49.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="&#x905E;&#x8FF4;"><a href="#&#x905E;&#x8FF4;" class="headerlink" title="&#x905E;&#x8FF4;"></a>&#x905E;&#x8FF4;</h1><p>&#x5728;functional programming&#x4E16;&#x754C;&#x4E2D;&#x662F;&#x4E0D;&#x51C6;&#x8A31;&#x6709;mutable&#x8B8A;&#x6578;&#xFF0C;&#x610F;&#x5473;&#x8457;&#x6211;&#x5011;&#x719F;&#x6089;&#x7684; <code>while</code>, <code>for</code> &#x8FF4;&#x5708;&#x90FD;&#x662F;&#x7981;&#x6B62;&#x4F7F;&#x7528;&#x3002;<br>&#x90A3;&#x6211;&#x5011;&#x61C9;&#x8A72;&#x600E;&#x9EBC;&#x8FA6;&#x5462;&#xFF1F; &#x9019;&#x908A;&#x6703;&#x8209;&#x500B;&#x6578;&#x500B;&#x4F8B;&#x5B50;&#xFF0C;&#x4F86;&#x89E3;&#x91CB;&#x662F;&#x900F;&#x904E;&#x905E;&#x8FF4;&#x65B9;&#x5F0F;&#x4F86;&#x5B8C;&#x6210; <code>while</code> &#x6216; <code>for</code> &#x8FF4;&#x5708;&#x3002;</p><h2 id="&#x5F9E;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x627E;&#x51FA;&#x6700;&#x5927;&#x503C;"><a href="#&#x5F9E;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x627E;&#x51FA;&#x6700;&#x5927;&#x503C;" class="headerlink" title="&#x5F9E;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x627E;&#x51FA;&#x6700;&#x5927;&#x503C;"></a>&#x5F9E;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x627E;&#x51FA;&#x6700;&#x5927;&#x503C;</h2><p>&#x5982;&#x679C;&#x5728; <code>Java</code> &#x6211;&#x5011;&#x6703;&#x600E;&#x9EBC;&#x505A;&#x5462;&#xFF1F;</p><ol><li>&#x5BA3;&#x500B;&#x4E00;&#x500B;&#x8B8A;&#x6578;(max)&#x5B58;&#x653E;&#x76EE;&#x524D;&#x7684;&#x6700;&#x5927;&#x503C;</li><li>&#x900F;&#x904E;<code>while</code> &#x6216; <code>for</code> &#x8FF4;&#x5708;&#xFF0C;&#x5C07;&#x4E32;&#x5217;&#x4E2D;&#x7684;&#x6BCF;&#x500B;&#x5143;&#x7D20;&#x8DDF;&#x6211;&#x5011;&#x5BA3;&#x544A;&#x7684;&#x8B8A;&#x6578;(max)&#x6BD4;&#x5927;&#x5C0F;<br>2.1 &#x82E5;&#x5143;&#x7D20;&#x7684;&#x503C;&#x5927;&#x65BC;max&#xFF0C;max&#x7684;&#x503C;&#x5C31;&#x6539;&#x70BA;&#x6B64;&#x5143;&#x7D20;&#x7684;&#x503C;<br>2.2 &#x82E5;&#x5143;&#x7D20;&#x7684;&#x503C;&#x5C0F;&#x65BC;&#x6216;&#x7B49;&#x65BC;max&#xFF0C;&#x4E0D;&#x505A;&#x4EFB;&#x4F55;&#x4E8B;</li></ol><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> max = <span class="type">Int</span>.<span class="type">MinValue</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i &lt;- <span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)){</span><br><span class="line">  <span class="keyword">if</span>(i &gt; max)</span><br><span class="line">    max = i</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x900F;&#x904E;&#x905E;&#x8FF4;&#x65B9;&#x5F0F;&#x6211;&#x5011;&#x6703;&#x600E;&#x9EBC;&#x89E3;&#x6C7A;&#x5462;&#xFF1F;</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">findMax(<span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findMax</span></span>(list: <span class="type">List</span>[<span class="type">Int</span>]): <span class="type">Int</span> = {</span><br><span class="line">   list <span class="keyword">match</span>{</span><br><span class="line">     <span class="comment">// &#x5047;&#x5982;&#x662F;&#x7A7A;&#x7684;&#x4E32;&#x5217;&#xFF0C;&#x6211;&#x5011;&#x56DE;&#x50B3;0</span></span><br><span class="line">     <span class="keyword">case</span> <span class="type">Nil</span> =&gt; <span class="number">0</span></span><br><span class="line">     <span class="comment">// &#x5047;&#x5982;&#x53EA;&#x6709;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x7684;&#x4E32;&#x5217;&#xFF0C;&#x90A3;&#x6700;&#x5927;&#x503C;&#x5C31;&#x70BA;&#x8A72;&#x5143;&#x7D20;</span></span><br><span class="line">     <span class="keyword">case</span> h :: <span class="type">Nil</span> =&gt; h</span><br><span class="line">     </span><br><span class="line">     <span class="comment">// &#x4E3B;&#x8981;&#x908F;&#x8F2F;</span></span><br><span class="line">     <span class="keyword">case</span> h :: t =&gt; <span class="type">Math</span>.max(h, findMax(t))</span><br><span class="line">   }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><ul><li>&#x5728;&#x8FF4;&#x5708;&#x7248;&#x672C;&#x4E2D;&#xFF0C;&#x9010;&#x4E00;&#x6BCF;&#x500B;&#x5143;&#x7D20;&#x8DDF;&#x67D0;&#x4E00;&#x500B;mutable&#x8B8A;&#x6578;&#x6BD4;&#x5927;&#x5C0F;&#x3002;</li><li>&#x5728;&#x8FF4;&#x905E;&#x7248;&#x672C;&#x4E2D;&#xFF0C;&#x7B2C;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x8DDF;&#x53BB;&#x9664;&#x7B2C;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x7684;&#x4E32;&#x5217;&#x7684;&#x6700;&#x5927;&#x503C;&#x6BD4;&#x5927;&#x5C0F;&#x3002;</li></ul><p>&#x8FF4;&#x905E;&#x7684;&#x5BEB;&#x6CD5;&#x66F4;&#x662F;&#x7C21;&#x6F54;&#x548C;&#x8868;&#x9054;&#x51FA;&#x6574;&#x500B;&#x7A0B;&#x5F0F;&#x4E3B;&#x8981;&#x908F;&#x8F2F;&#xFF0C;&#x6211;&#x5011;&#x518D;&#x4F86;&#x591A;&#x8A66;&#x770B;&#x770B;&#x5E7E;&#x500B;&#x984C;&#x76EE;&#x3002;</p><h2 id="&#x5F9E;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x627E;&#x51FA;&#x6700;&#x5C0F;&#x503C;"><a href="#&#x5F9E;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x627E;&#x51FA;&#x6700;&#x5C0F;&#x503C;" class="headerlink" title="&#x5F9E;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x627E;&#x51FA;&#x6700;&#x5C0F;&#x503C;"></a>&#x5F9E;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x627E;&#x51FA;&#x6700;&#x5C0F;&#x503C;</h2><p>&#x505A;&#x6CD5;&#x8DDF;&#x627E;&#x51FA;&#x6700;&#x5927;&#x503C;&#x985E;&#x4F3C;&#xFF0C;&#x7B2C;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x8DDF;&#x53BB;&#x9664;&#x7B2C;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x7684;&#x4E32;&#x5217;&#x7684;&#x6700;&#x5C0F;&#x503C;&#x6BD4;&#x5927;&#x5C0F;&#x3002;</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">findMin(<span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findMin</span></span>(list: <span class="type">List</span>[<span class="type">Int</span>]): <span class="type">Int</span> = {</span><br><span class="line">   list <span class="keyword">match</span>{</span><br><span class="line">     <span class="comment">// &#x5047;&#x5982;&#x662F;&#x7A7A;&#x7684;&#x4E32;&#x5217;&#xFF0C;&#x6211;&#x5011;&#x56DE;&#x50B3;0</span></span><br><span class="line">     <span class="keyword">case</span> <span class="type">Nil</span> =&gt; <span class="number">0</span></span><br><span class="line">     <span class="comment">// &#x5047;&#x5982;&#x53EA;&#x6709;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x7684;&#x4E32;&#x5217;&#xFF0C;&#x90A3;&#x6700;&#x5C0F;&#x503C;&#x5C31;&#x70BA;&#x8A72;&#x5143;&#x7D20;</span></span><br><span class="line">     <span class="keyword">case</span> h :: <span class="type">Nil</span> =&gt; h</span><br><span class="line">     </span><br><span class="line">     <span class="comment">// &#x4E3B;&#x8981;&#x908F;&#x8F2F;</span></span><br><span class="line">     <span class="keyword">case</span> h :: t =&gt; <span class="type">Math</span>.min(h, findMin(t))</span><br><span class="line">   }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x6AA2;&#x67E5;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x662F;&#x5426;&#x5B58;&#x5728;&#x67D0;&#x500B;&#x7279;&#x5B9A;&#x503C;"><a href="#&#x6AA2;&#x67E5;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x662F;&#x5426;&#x5B58;&#x5728;&#x67D0;&#x500B;&#x7279;&#x5B9A;&#x503C;" class="headerlink" title="&#x6AA2;&#x67E5;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x662F;&#x5426;&#x5B58;&#x5728;&#x67D0;&#x500B;&#x7279;&#x5B9A;&#x503C;"></a>&#x6AA2;&#x67E5;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x662F;&#x5426;&#x5B58;&#x5728;&#x67D0;&#x500B;&#x7279;&#x5B9A;&#x503C;</h2><p>&#x6AA2;&#x67E5;&#x7B2C;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x662F;&#x5426;&#x7B49;&#x65BC;&#x76EE;&#x6A19;&#x503C;&#x6216;&#x662F;&#x53BB;&#x9664;&#x7B2C;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x7684;&#x4E32;&#x5217;&#x6709;&#x76EE;&#x6A19;&#x503C;</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">find(<span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>), <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find</span></span>(list: <span class="type">List</span>[<span class="type">Int</span>], target: <span class="type">Int</span>): <span class="type">Boolean</span> = {</span><br><span class="line">   list <span class="keyword">match</span>{</span><br><span class="line">     <span class="comment">// &#x5047;&#x5982;&#x662F;&#x7A7A;&#x7684;&#x4E32;&#x5217;&#xFF0C;&#x56DE;&#x50B3;false</span></span><br><span class="line">     <span class="keyword">case</span> <span class="type">Nil</span> =&gt; <span class="literal">false</span></span><br><span class="line">     <span class="comment">// &#x5047;&#x5982;&#x53EA;&#x6709;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x7684;&#x4E32;&#x5217;&#xFF0C;&#x800C;&#x4E14;&#x8A72;&#x5143;&#x7D20;&#x7B49;&#x65BC;target&#xFF0C;&#x56DE;&#x50B3;true</span></span><br><span class="line">     <span class="keyword">case</span> h :: <span class="type">Nil</span> <span class="keyword">if</span> (h == target) =&gt; <span class="literal">true</span></span><br><span class="line">     </span><br><span class="line">     <span class="comment">// &#x4E3B;&#x8981;&#x908F;&#x8F2F;</span></span><br><span class="line">     <span class="keyword">case</span> h :: t =&gt; (h == target) || find(t, target)</span><br><span class="line">   }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x53CD;&#x8F49;&#x4E00;&#x500B;&#x5B57;&#x4E32;"><a href="#&#x53CD;&#x8F49;&#x4E00;&#x500B;&#x5B57;&#x4E32;" class="headerlink" title="&#x53CD;&#x8F49;&#x4E00;&#x500B;&#x5B57;&#x4E32;"></a>&#x53CD;&#x8F49;&#x4E00;&#x500B;&#x5B57;&#x4E32;</h2><p>&#x5148;&#x53CD;&#x8F49;&#x53BB;&#x9664;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x5143;&#x7684;&#x4E32;&#x5217;&#xFF0C;&#x4E4B;&#x5F8C;&#x518D;&#x5C07;&#x7B2C;&#x4E00;&#x5B57;&#x5143;&#x653E;&#x5728;&#x6700;&#x5F8C;&#x9762;</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">reverse(<span class="string">&quot;I should learn scala seriously!&quot;</span>.toList)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reverse</span></span>(list: <span class="type">List</span>[<span class="type">Char</span>]): <span class="type">String</span> = {</span><br><span class="line">  list <span class="keyword">match</span> {</span><br><span class="line">    <span class="comment">// &#x5047;&#x5982;&#x662F;&#x7A7A;&#x7684;&#x4E32;&#x5217;&#xFF0C;&#x56DE;&#x50B3;false</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">Nil</span> =&gt; <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="comment">// &#x5047;&#x5982;&#x53EA;&#x6709;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x7684;&#x4E32;&#x5217;&#xFF0C;&#x56DE;&#x50B3;&#x8A72;&#x5143;&#x7D20;</span></span><br><span class="line">    <span class="keyword">case</span> h :: <span class="type">Nil</span> =&gt; h.toString</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x4E3B;&#x8981;&#x908F;&#x8F2F;</span></span><br><span class="line">    <span class="keyword">case</span> h :: t =&gt; reverse(t) + h</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x5224;&#x65B7;&#x4E00;&#x500B;&#x5B57;&#x4E32;&#x662F;&#x5426;&#x70BA;&#x53E6;&#x5916;&#x4E00;&#x500B;&#x5B57;&#x4E32;&#x7684;&#x5B50;&#x5B57;&#x4E32;"><a href="#&#x5224;&#x65B7;&#x4E00;&#x500B;&#x5B57;&#x4E32;&#x662F;&#x5426;&#x70BA;&#x53E6;&#x5916;&#x4E00;&#x500B;&#x5B57;&#x4E32;&#x7684;&#x5B50;&#x5B57;&#x4E32;" class="headerlink" title="&#x5224;&#x65B7;&#x4E00;&#x500B;&#x5B57;&#x4E32;&#x662F;&#x5426;&#x70BA;&#x53E6;&#x5916;&#x4E00;&#x500B;&#x5B57;&#x4E32;&#x7684;&#x5B50;&#x5B57;&#x4E32;"></a>&#x5224;&#x65B7;&#x4E00;&#x500B;&#x5B57;&#x4E32;&#x662F;&#x5426;&#x70BA;&#x53E6;&#x5916;&#x4E00;&#x500B;&#x5B57;&#x4E32;&#x7684;&#x5B50;&#x5B57;&#x4E32;</h2><p>&#x5B50;&#x5B57;&#x4E32;&#x7684;&#x5B9A;&#x7FA9;&#xFF1A;&#x5B57;&#x6578;&#xFF0C;&#x5167;&#x5BB9;&#x548C;&#x9806;&#x5E8F;&#x9700;&#x8981;&#x7B26;&#x5408;&#xFF0C;&#x7A7A;&#x5B57;&#x4E32;&#x70BA;&#x4EFB;&#x4F55;&#x5B57;&#x4E32;&#x7684;&#x5B50;&#x5B57;&#x4E32;<br>&#x4F8B;&#x5982;&#xFF1A;</p><ul><li>&#x201C;abc&#x201D; &#x70BA; &#x201C;XXXYYYabc&#x201D;&#x7684;&#x5B50;&#x5B57;&#x4E32;</li><li>&#x201C;XXXY&#x201D; &#x70BA; &#x201C;XXXYYYabc&#x201D;&#x7684;&#x5B50;&#x5B57;&#x4E32;</li><li>&#x201C;&#x201D; &#x70BA; &#x201C;XXXYYYabc&#x201D;&#x7684;&#x5B50;&#x5B57;&#x4E32;</li><li>&#x201C;ABC&#x201D; &#x4E0D;&#x70BA; &#x201C;XXXYYYabc&#x201D;&#x7684;&#x5B50;&#x5B57;&#x4E32;</li><li>&#x201C;QQWW&#x201D; &#x4E0D;&#x70BA; &#x201C;XXXYYYabc&#x201D;&#x7684;&#x5B50;&#x5B57;&#x4E32;</li><li>&#x201C;XXXaYYY&#x201D; &#x4E0D;&#x70BA; &#x201C;XXXYYYabc&#x201D;&#x7684;&#x5B50;&#x5B57;&#x4E32;</li></ul><p>&#x5148;&#x6BD4;&#x8F03;&#x4E3B;&#x8981;&#x5B57;&#x4E32;&#x548C;&#x5B50;&#x5B57;&#x4E32;&#x7684;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x6BCD;&#x662F;&#x5426;&#x4E00;&#x6A23;&#xFF0C;</p><ul><li>&#x82E5;&#x4E00;&#x6A23;&#x5247;&#x9019;&#x5169;&#x500B;&#x5B57;&#x4E32;&#x53BB;&#x9664;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x6BCD;&#x7E7C;&#x7E8C;&#x6BD4;</li><li>&#x82E5;&#x4E0D;&#x4E00;&#x6A23;&#xFF0C;&#x4E3B;&#x8981;&#x5B57;&#x4E32;&#x53BB;&#x9664;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x6BCD;&#x548C;&#x5B50;&#x5B57;&#x4E32;&#x7E7C;&#x7E8C;&#x6BD4;</li></ul><p>&#x4F8B;&#x5982;&#xFF1A;<br>&#x4E3B;&#x8981;&#x5B57;&#x4E32;&#xFF1A; &#x201C;abcdefghi&#x201D;<br>&#x5B50;&#x5B57;&#x4E32;: &#x201C;abc&#x201D;<br>&#x6AA2;&#x67E5;&#x4E3B;&#x8981;&#x5B57;&#x4E32;&#x524D;&#x4E09;&#x500B;&#x5B57;&#x6BCD;&#xFF08;abc&#xFF09;&#x662F;&#x5426;&#x548C;&#x5B50;&#x5B57;&#x4E32;&#xFF08;abc&#xFF09;&#x4E00;&#x6A23;&#xFF0C;&#x82E5;&#x4E00;&#x6A23;&#x5C31;&#x56DE;&#x50B3;<code>true</code></p><p>&#x4E3B;&#x8981;&#x5B57;&#x4E32;&#xFF1A; &#x201C;abcdefghi&#x201D;<br>&#x5B50;&#x5B57;&#x4E32;: &#x201C;defgh&#x201D;<br>&#x6AA2;&#x67E5;&#x4E3B;&#x8981;&#x5B57;&#x4E32;&#x524D;&#x4E94;&#x500B;&#x5B57;&#x6BCD;&#xFF08;abcde&#xFF09;&#x662F;&#x5426;&#x548C;&#x5B50;&#x5B57;&#x4E32;&#xFF08;defgh&#xFF09;&#x4E00;&#x6A23;&#xFF0C;&#x82E5;&#x4E0D;&#x4E00;&#x6A23;&#xFF0C;<br>&#x5247; &#x201C;bcdefghi&#x201D; &#x548C; &#x201C;defgh&#x201D; &#x7E7C;&#x7E8C;&#x6BD4;</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">println(isSubString(<span class="string">&quot;I should learn scala seriously!&quot;</span>.toList, <span class="string">&quot;scala&quot;</span>.toList))</span><br><span class="line">println(isSubString(<span class="string">&quot;I should learn scala seriously!&quot;</span>.toList, <span class="string">&quot;XXOO&quot;</span>.toList))</span><br><span class="line">println(isSubString(<span class="string">&quot;I should learn scala seriously!&quot;</span>.toList, <span class="string">&quot;scaxxyyla&quot;</span>.toList))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isSubString</span></span>(original: <span class="type">List</span>[<span class="type">Char</span>], target: <span class="type">List</span>[<span class="type">Char</span>]): <span class="type">Boolean</span> = {</span><br><span class="line">  (original, target) <span class="keyword">match</span> {</span><br><span class="line">    <span class="keyword">case</span> (<span class="type">Nil</span>, _) =&gt; <span class="literal">false</span></span><br><span class="line">    <span class="keyword">case</span> (_, <span class="type">Nil</span>) =&gt; <span class="literal">true</span></span><br><span class="line">    <span class="keyword">case</span> (o :: <span class="type">Nil</span>, t :: <span class="type">Nil</span>) <span class="keyword">if</span> (o == t) =&gt; <span class="literal">true</span></span><br><span class="line">    <span class="keyword">case</span> (o :: <span class="type">Nil</span>, t :: <span class="type">Nil</span>) <span class="keyword">if</span> (o != t) =&gt; <span class="literal">false</span></span><br><span class="line">    <span class="keyword">case</span> (o, t) <span class="keyword">if</span> (o.take(t.length) == t) =&gt; <span class="literal">true</span></span><br><span class="line">    <span class="keyword">case</span> (oh :: ot, t) =&gt; isSubString(ot, t)</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x5C07;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x7531;&#x5C0F;&#x6392;&#x5230;&#x5927;"><a href="#&#x5C07;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x7531;&#x5C0F;&#x6392;&#x5230;&#x5927;" class="headerlink" title="&#x5C07;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x7531;&#x5C0F;&#x6392;&#x5230;&#x5927;"></a>&#x5C07;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x7531;&#x5C0F;&#x6392;&#x5230;&#x5927;</h2><p>&#x6211;&#x5011;&#x4F86;&#x5BE6;&#x4F5C;<a href="https://zh.wikipedia.org/wiki/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F" target="_blank" rel="noopener">Quicksort</a></p><ol><li>&#x5F9E;&#x6578;&#x5217;&#x4E2D;&#x6311;&#x51FA;&#x4E00;&#x500B;&#x5143;&#x7D20;&#xFF0C;&#x7A31;&#x70BA; &#x201C;&#x57FA;&#x6E96;&#x201D;&#xFF08;pivot&#xFF09;&#x3002;</li><li>&#x91CD;&#x65B0;&#x6392;&#x5E8F;&#x6578;&#x5217;&#xFF0C;&#x6240;&#x6709;&#x6BD4;&#x57FA;&#x6E96;&#x503C;&#x5C0F;&#x7684;&#x5143;&#x7D20;&#x64FA;&#x653E;&#x5728;&#x57FA;&#x6E96;&#x524D;&#x9762;&#xFF0C;&#x6240;&#x6709;&#x6BD4;&#x57FA;&#x6E96;&#x503C;&#x5927;&#x7684;&#x5143;&#x7D20;&#x64FA;&#x5728;&#x57FA;&#x6E96;&#x5F8C;&#x9762;&#xFF08;&#x76F8;&#x540C;&#x7684;&#x6578;&#x53EF;&#x4EE5;&#x5230;&#x4EFB;&#x4E00;&#x908A;&#xFF09;&#x3002;&#x5728;&#x9019;&#x500B;&#x5206;&#x5272;&#x7D50;&#x675F;&#x4E4B;&#x5F8C;&#xFF0C;&#x8A72;&#x57FA;&#x6E96;&#x5C31;&#x8655;&#x65BC;&#x6578;&#x5217;&#x7684;&#x4E2D;&#x9593;&#x4F4D;&#x7F6E;&#x3002;&#x9019;&#x500B;&#x7A31;&#x70BA;&#x5206;&#x5272;&#xFF08;partition&#xFF09;&#x64CD;&#x4F5C;&#x3002;</li><li>&#x905E;&#x8FF4;&#x5730;&#xFF08;recursively&#xFF09;&#x628A;&#x5C0F;&#x65BC;&#x57FA;&#x6E96;&#x503C;&#x5143;&#x7D20;&#x7684;&#x5B50;&#x6578;&#x5217;&#x548C;&#x5927;&#x65BC;&#x57FA;&#x6E96;&#x503C;&#x5143;&#x7D20;&#x7684;&#x5B50;&#x6578;&#x5217;&#x6392;&#x5E8F;&#x3002;</li></ol><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">quicksort(<span class="type">List</span>(<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">10</span>))</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quicksort</span></span>(list: <span class="type">List</span>[<span class="type">Int</span>]): <span class="type">List</span>[<span class="type">Int</span>] = {</span><br><span class="line">  list <span class="keyword">match</span> {</span><br><span class="line">    <span class="keyword">case</span> <span class="type">Nil</span> =&gt; <span class="type">Nil</span></span><br><span class="line">    <span class="keyword">case</span> h :: <span class="type">Nil</span> =&gt; <span class="type">List</span>(h)</span><br><span class="line">    <span class="keyword">case</span> h :: t =&gt; quicksort(t.filter(_ &lt;= h)) ::: h :: quicksort(t.filter(_ &gt; h))</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x5BEB;&#x51FA;&#x8CBB;&#x6C0F;&#x6578;&#x5217;"><a href="#&#x5BEB;&#x51FA;&#x8CBB;&#x6C0F;&#x6578;&#x5217;" class="headerlink" title="&#x5BEB;&#x51FA;&#x8CBB;&#x6C0F;&#x6578;&#x5217;"></a>&#x5BEB;&#x51FA;&#x8CBB;&#x6C0F;&#x6578;&#x5217;</h2><p>&#x4F55;&#x8B02;&#x8CBB;&#x6C0F;&#x6578;&#x5217;&#xFF1A;<a href="https://zh.wikipedia.org/wiki/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97" target="_blank" rel="noopener">&#x8CBB;&#x6C0F;&#x6578;&#x5217;</a></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fib(<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span></span>(n: <span class="type">Int</span>): <span class="type">Int</span> = {</span><br><span class="line">  n <span class="keyword">match</span> {</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span> =&gt; <span class="number">0</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span> =&gt; <span class="number">1</span></span><br><span class="line">    <span class="keyword">case</span> _ =&gt; fib(n - <span class="number">1</span>) + fib(n - <span class="number">2</span>)</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7D93;&#x904E;&#x5E7E;&#x6B21;&#x7684;&#x7DF4;&#x7FD2;&#xFF0C;&#x6211;&#x5011;&#x61C9;&#x8A72;&#x5927;&#x6982;&#x53EF;&#x4EE5;&#x6162;&#x6162;&#x638C;&#x63E1;&#x5230;&#x600E;&#x9EBC;&#x904B;&#x7528;&#x905E;&#x8FF4;&#x4F86;&#x9054;&#x5230;&#x8FF4;&#x5708;&#x76EE;&#x7684;&#x3002;</p><ol><li>&#x5148;&#x628A;&#x4E3B;&#x8981;&#x908F;&#x8F2F;&#x5BEB;&#x51FA;&#x4F86;</li><li>&#x518D;&#x628A;&#x908A;&#x754C;&#x689D;&#x4EF6;&#x8A2D;&#x597D;&#xFF0C;&#x6C92;&#x6709;&#x908A;&#x754C;&#x689D;&#x4EF6;&#x5C31;&#x6703;&#x7121;&#x7AAE;&#x7684;&#x8DD1;&#x4E0B;&#x53BB;&#x2026;<br>&#x905E;&#x8FF4;&#x4E3B;&#x8981;&#x662F;&#x900F;&#x904E;&#x81EA;&#x6211;&#x547C;&#x53EB;&#xFF0C;&#x628A;&#x6BCF;&#x4E00;&#x6B65;&#x7684;&#x72C0;&#x614B;&#x653E;&#x5728; <code>stack</code>&#xFF0C;&#x7B49;&#x8D70;&#x5230;&#x908A;&#x754C;&#x56DE;&#x50B3;&#x908A;&#x754C;&#x503C;&#x6216;&#x5B8C;&#x6210;&#x908A;&#x754C;&#x689D;&#x4EF6;&#x5F8C;&#xFF0C;&#x518D;&#x56DE;&#x6EAF;&#x56DE;&#x53BB;&#x3002;</li></ol><p>&#x628A;&#x554F;&#x984C;&#x900F;&#x904E;<a href="https://zh.wikipedia.org/wiki/%E5%88%86%E6%B2%BB%E6%B3%95" target="_blank" rel="noopener">Divide and conquer</a>&#x65B9;&#x5F0F;&#xFF0C;<br>&#x5927;&#x554F;&#x984C;&#x5206;&#x89E3;&#x6210;&#x6578;&#x500B;&#x5C0F;&#x554F;&#x984C;&#xFF0C;&#x82E5;&#x5C0F;&#x554F;&#x984C;&#x898F;&#x6A21;&#x8F03;&#x5C0F;&#x4E14;&#x6613;&#x65BC;&#x89E3;&#x6C7A;&#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x89E3;&#x3002;&#x5426;&#x5247;&#xFF0C;&#x905E;&#x6B78;&#x5730;&#x89E3;&#x6C7A;&#x5404;&#x5C0F;&#x554F;&#x984C;&#x3002;<br>&#x6700;&#x5F8C;&#x518D;&#x5C07;&#x6BCF;&#x500B;&#x5C0F;&#x554F;&#x984C;&#x7684;&#x7D50;&#x679C;&#x9010;&#x4E00;&#x5408;&#x4F75;&#x8D77;&#x4F86;&#x3002;</p><p>&#x905E;&#x8FF4;&#x7684;&#x5BEB;&#x6CD5;&#x5F88;&#x7C21;&#x6F54;&#xFF0C;&#x4F46;&#x662F;&#x6700;&#x5927;&#x7684;&#x554F;&#x984C;&#x662F;&#x6548;&#x80FD;&#x4E0D;&#x597D;&#x548C;&#x5BB9;&#x6613; <code>Stack Overflow</code>&#x3002;<br>&#x4E3B;&#x8981;&#x539F;&#x56E0;&#x662F;&#x6703;&#x53BB;&#x5617;&#x8A66;&#x8D70;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x7684;&#x8DEF;&#x5F91;&#x800C;&#x4E14;&#x628A;&#x6BCF;&#x4E00;&#x500B;&#x72C0;&#x614B;&#x653E;&#x5728;stack&#xFF0C;&#x7576;&#x72C0;&#x614B;&#x4E00;&#x591A;&#x5C31;&#x7206;&#x4E86;&#x3002;<br>&#x53BB;&#x5617;&#x8A66;&#x8D70;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x7684;&#x8DEF;&#x5F91;&#x4E5F;&#x662F;&#x9020;&#x6210;&#x6548;&#x80FD;&#x4E0D;&#x597D;&#x7684;&#x539F;&#x56E0;&#x3002;</p><p>&#x5047;&#x5982;&#xFF1A;</p><ol><li>&#x53BB;&#x5617;&#x8A66;&#x8D70;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x7684;&#x8DEF;&#x5F91;&#x4E0D;&#x591A;&#xFF0C;&#x4F46;&#x662F;&#x6BCF;&#x4E00;&#x500B;&#x6B65;&#x8A08;&#x7B97;&#x5F88;&#x82B1;&#x6642;&#x9593;&#xFF0C;&#x905E;&#x8FF4;&#x5BB9;&#x6613;&#x8F49;&#x63DB;&#x6210;&#x975E;&#x540C;&#x6B65;&#x7A0B;&#x5F0F;&#x3002;</li></ol><p>&#x4EE5;&#x6392;&#x5E8F;&#x70BA;&#x4F8B;&#xFF0C;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x6578;&#x91CF;&#x5C0F;&#x65BC;&#x4E00;&#x5343;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;<a href="https://zh.wikipedia.org/wiki/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F" target="_blank" rel="noopener">Insertion Sort</a>&#xFF1B;&#x5927;&#x65BC;&#x4E00;&#x5343;&#x6539;&#x4F7F;&#x7528;Quicksort&#xFF1A;</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sort</span></span>(list: <span class="type">List</span>[<span class="type">Int</span>]): <span class="type">List</span>[<span class="type">Int</span>] = {</span><br><span class="line">  <span class="keyword">if</span>(list.length &lt; <span class="number">1000</span>){</span><br><span class="line">    <span class="comment">// &#x9700;&#x8981;&#x5927;&#x91CF;&#x6642;&#x9593;&#x8A08;&#x7B97;&#x624D;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;&#x7D50;&#x679C;</span></span><br><span class="line">    insertionSort(list)</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">else</span>{</span><br><span class="line">    list <span class="keyword">match</span> {</span><br><span class="line">      <span class="keyword">case</span> <span class="type">Nil</span> =&gt; <span class="type">Nil</span></span><br><span class="line">      <span class="keyword">case</span> h :: <span class="type">Nil</span> =&gt; <span class="type">List</span>(h)</span><br><span class="line">      <span class="keyword">case</span> h :: t =&gt; sort(t.filter(_ &lt;= h)) ::: h :: sort(t.filter(_ &gt; h))</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x8F15;&#x6613;&#x5C07;&#x5B83;&#x8F49;&#x63DB;&#x6210;&#x975E;&#x540C;&#x6B65;&#x7A0B;&#x5F0F;&#x3002;<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sort</span></span>(list: <span class="type">List</span>[<span class="type">Int</span>]): <span class="type">Future</span>[<span class="type">List</span>[<span class="type">Int</span>]] = {</span><br><span class="line">  <span class="keyword">if</span>(list.length &lt; <span class="number">1000</span>){</span><br><span class="line">    <span class="comment">// &#x9700;&#x8981;&#x5927;&#x91CF;&#x6642;&#x9593;&#x8A08;&#x7B97;&#x624D;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;&#x7D50;&#x679C; </span></span><br><span class="line">    <span class="type">Future</span>(insertionSort(list))</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">else</span>{</span><br><span class="line">    list <span class="keyword">match</span> {</span><br><span class="line">      <span class="keyword">case</span> <span class="type">Nil</span> =&gt; <span class="type">Future</span>(<span class="type">Nil</span>)</span><br><span class="line">      <span class="keyword">case</span> h :: <span class="type">Nil</span> =&gt; <span class="type">Future</span>(<span class="type">List</span>(h))</span><br><span class="line">      <span class="keyword">case</span> h :: t =&gt; <span class="type">Future</span>(sort(t.filter(_ &lt;= h)) ::: h :: sort(t.filter(_ &gt; h)))</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>&#x975E;&#x905E;&#x8FF4;&#x7684;&#x7248;&#x672C;&#x5C31;&#x5F88;&#x96E3;&#x6539;&#x4E86;&#xFF0C;&#x56E0;&#x70BA;&#x4E3B;&#x8981;&#x5B58;&#x5728;&#x5171;&#x4EAB;&#x7684;mutable&#x8B8A;&#x6578;&#xFF0C;&#x591A;&#x500B;thread&#x6703;&#x5171;&#x4EAB;&#x540C;&#x4E00;&#x500B;&#x8B8A;&#x6578;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x505A;&#x540C;&#x6B65;&#x8655;&#x7406;&#x3002;<br>&#x540C;&#x6B65;&#x554F;&#x984C;&#x6C92;&#x6709;&#x5C0F;&#x5FC3;&#x8655;&#x7406;&#xFF0C;&#x7D50;&#x679C;&#x5F88;&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x3002;</p><ol><li>&#x5617;&#x8A66;&#x8D70;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x7684;&#x8DEF;&#x5F91;&#x5F88;&#x591A;</li></ol><p>&#x4F8B;&#x5982;&#xFF1A;&#x8A08;&#x7B97;&#x7B2C;&#x4E94;&#x5341;&#x500B;&#x8CBB;&#x6C0F;&#x6578;&#x5217;<br>&#x6839;&#x64DA;&#x8A08;&#x7B97;&#x8CBB;&#x6C0F;&#x6578;&#x5217;&#x7684;&#x905E;&#x8FF4;&#x516C;&#x5F0F;&#xFF0C;<code>n = 50</code> &#x7684;&#x6A39;&#x72C0;&#x7D50;&#x69CB;&#x6703;&#x76F8;&#x7576;&#x5927;&#x3002;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x900F;&#x904E; <a href="http://localhost:4000/2016/12/09/Scala-Tail-recursion/" target="_blank" rel="noopener">Tail recursion</a> &#x4F86;&#x89E3;&#x6C7A;&#x3002;<br>&#x628A;&#x4E0A;&#x4E00;&#x500B;&#x72C0;&#x614B;&#x7684;&#x7D50;&#x679C;&#x76F4;&#x63A5;&#x7576;&#x6210;&#x5E36;&#x5165;&#x53C3;&#x6578;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4F9D;&#x8CF4;&#x4E0A;&#x4E00;&#x500B;&#x72C0;&#x614B;&#x7684;&#x7D50;&#x679C;&#x3002;</p><p>&#x56E0;&#x70BA; <code>fib(n) = fib(n - 1) + fib(n - 2)</code>&#xFF0C;&#x5047;&#x5982;&#x53EF;&#x4EE5;&#x628A; <code>fib(n - 1)</code> &#x548C; <code>fib(n - 2)</code> &#x7576;&#x53C3;&#x6578;&#x5E36;&#x5165;&#xFF0C;<br>&#x9019;&#x6A23;&#x5C31;&#x53EF;&#x4EE5;&#x99AC;&#x4E0A;&#x5F97;&#x51FA; <code>fib(n)</code>&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x7B49;&#x7B97;&#x5B8C; <code>fib(n - 1)</code> &#x548C; <code>fib(n - 2)</code> &#x5F8C;&#x624D;&#x53EF;&#x4EE5;&#x5F97;&#x51FA; <code>fib(n)</code>&#x3002;</p><pre><code class="scala"><span class="keyword">import</span> scala.annotation.tailrecfib(<span class="number">0</span>, <span class="number">1</span>, <span class="number">5</span>)<span class="meta">@tailrec</span><span class="function"><span class="keyword">def</span> <span class="title">fib</span></span>(previous: <span class="type">Int</span>, current: <span class="type">Int</span>, n: <span class="type">Int</span>): <span class="type">Int</span> = {  n <span class="keyword">match</span> {    <span class="keyword">case</span> <span class="number">0</span> =&gt; previous    <span class="keyword">case</span> <span class="number">1</span> =&gt; current    <span class="keyword">case</span> _ =&gt; fib(current, previous + current, n - <span class="number">1</span>)  }}</code></pre><p>&#x6709;&#x8208;&#x8DA3;&#x7684;&#x8B80;&#x8005;&#x53EF;&#x4EE5;&#x5230; <a href="https://scalataiwan.github.io/ScalaKitchen/recursive.html" target="_blank" rel="noopener">ScalaKitchen</a> &#x8A66;&#x73A9;&#x770B;&#x770B;&#xFF0C;&#x4E5F;&#x6709;&#x63D0;&#x4F9B;<a href="https://scalataiwan.github.io/ScalaKitchen/" target="_blank" rel="noopener">&#x4E2D;&#x6587;&#x7248;&#x672C;&#x7684;Scala&#x5165;&#x9580;&#x6559;&#x5B78;</a>&#x3002;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;&amp;#x905E;&amp;#x8FF4;&quot;&gt;&lt;a href=&quot;#&amp;#x905E;&amp;#x8FF4;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x905E;&amp;#x8FF4;&quot;&gt;&lt;/a&gt;&amp;#x905E;&amp;#x8FF4;&lt;/h1&gt;&lt;p&gt;&amp;#x5728;functi
      
    
    </summary>
    
      <category term="Scala" scheme="https://pandaforme.github.io/categories/Scala/"/>
    
    
      <category term="Scala" scheme="https://pandaforme.github.io/tags/Scala/"/>
    
      <category term="Recursion" scheme="https://pandaforme.github.io/tags/Recursion/"/>
    
      <category term="Tail recursion" scheme="https://pandaforme.github.io/tags/Tail-recursion/"/>
    
  </entry>
  
  <entry>
    <title>[Scala] Use Either to hand error cases</title>
    <link href="https://pandaforme.github.io/2017/02/15/Scala-Use-Either-Try-to-hand-error/"/>
    <id>https://pandaforme.github.io/2017/02/15/Scala-Use-Either-Try-to-hand-error/</id>
    <published>2017-02-15T08:57:00.000Z</published>
    <updated>2017-02-16T04:08:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5728;OOP&#x7684;&#x8A9E;&#x8A00;&#x4E2D;&#xFF0C;&#x6211;&#x5011;exception&#x4F86;&#x8868;&#x9054;&#x7A0B;&#x5F0F;&#x932F;&#x8AA4;&#x6216;&#x662F;&#x7CFB;&#x7D71;crash&#xFF0E;Exception&#x53C8;&#x53EF;&#x4EE5;&#x5206;&#x70BA;<code>Checked Exception</code> &#x548C; <code>UnChecked Excpetion</code>&#xFF0E;</p><ul><li><p>Checked Exception: &#x6703;&#x5C07;&#x8981;&#x4E1F;&#x51FA;&#x7684;excpetion&#x5BEB;&#x5728;function&#x7684;signature&#xFF0E;<br>&#x4F8B;&#x5982;&#xFF1A;</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">interface <span class="type">Foo</span>() <span class="keyword">throws</span> <span class="type">XXXException</span>, <span class="type">YYYException</span></span><br></pre></td></tr></table></figure></li><li><p>UnChecked Excpetion: &#x8981;&#x4E1F;&#x51FA;&#x7684;excpetion&#x4E0D;&#x6703;&#x5BEB;&#x5728;function&#x7684;signature&#xFF0C;&#x547C;&#x53EB;function&#x7684;&#x4EBA;&#x9700;&#x8981;&#x77E5;&#x9053;&#x6709;exception&#x8981;&#x8655;&#x7406;&#xFF0E;</p></li></ul><p>Checked Exception&#x6703;&#x9055;&#x53CD;<a href="https://en.wikipedia.org/wiki/Open/closed_principle" target="_blank" rel="noopener">Open/Closed Principle</a>&#xFF0C;&#x7576;&#x6709;&#x65B0;&#x589E;&#x4E1F;&#x51FA;&#x7684;excpetion&#xFF0C;&#x9700;&#x8981;&#x4FEE;&#x6539;interface signature&#xFF1B;UnChecked Excpetion&#x5247;&#x662F;&#x9700;&#x8981;&#x77E5;&#x9053;&#x6709;&#x54EA;&#x4E9B;exception&#x9700;&#x8981;&#x8655;&#x7406;&#xFF0E;</p><p>&#x9019;&#x5169;&#x7A2E;exception&#x5B70;&#x597D;&#x5B70;&#x58DE;&#xFF0C;&#x5728; <code>Clean code: a handbook of agile software craftsmanship, Robert C. Martin</code> &#x6709;&#x63D0;&#x5230;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">The debate is over. For years Java programmers have debated over the benefits and liabilities of checked exceptions. When checked exceptions were introduced in the first version of Java, they seemed like a great idea. The signature of every method would list all of the exceptions that it could pass to its caller. Moreover, these exceptions were part of the type</span><br><span class="line">of the method. Your code literally wouldn&apos;t compile if the signature didn&apos;t match what your code could do.</span><br><span class="line"></span><br><span class="line">At the time, we thought that checked exceptions were a great idea; and yes, they can yield some benefit. However, it is clear now that they aren&apos;t necessary for the production of robust software. C# doesn&apos;t have checked exceptions, and despite valiant attempts, C++ doesn&apos;t either. Neither do Python or Ruby. Yet it is possible to write robust software in all of these languages. Because that is the case, we have to decide&#x2014;really&#x2014;whether checked exceptions are worth their price.</span><br><span class="line"></span><br><span class="line">Checked exceptions can sometimes be useful if you are writing a critical library: You must catch them. But in general application development the dependency costs outweigh the benefits</span><br></pre></td></tr></table></figure></p><p>&#x5728;Java&#x4E2D;&#x5EFA;&#x8B70;&#x4F7F;&#x7528;UnChecked Excpetion&#xFF0C;&#x4F46;&#x662F;&#x9019;&#x6703;&#x5C0E;&#x81F4;&#x53E6;&#x5916;&#x4E00;&#x500B;&#x707D;&#x96E3;&#x2026;</p><ol><li>&#x547C;&#x53EB;&#x8005;&#x4E0D;&#x77E5;&#x9053;&#x6703;&#x4E1F;&#x51FA;exception</li><li>&#x547C;&#x53EB;&#x8005;&#x4E0D;&#x77E5;&#x9053;&#x6709;&#x54EA;&#x4E9B;excpetion&#x8981;&#x8655;&#x7406;&#xFF0C;&#x7576;call chain&#x5F88;&#x6DF1;&#x7684;&#x6642;&#x5019;&#x66F4;&#x662F;&#x7CDF;&#x7CD5;&#x2026;</li><li>&#x5230;&#x8655;&#x5145;&#x6EFF;&#x4E86; <code>try{...} catch{...}</code></li></ol><p>&#x76F8;&#x4FE1;&#x4F7F;&#x7528;Java&#x958B;&#x767C;&#x7684;&#x5DE5;&#x7A0B;&#x5E2B;&#x61C9;&#x8A72;&#x611F;&#x89F8;&#x826F;&#x591A;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x5728;&#x7DAD;&#x8B77;&#x820A;&#x5C08;&#x6848;&#xFF0E;&#x4E00;&#x500B;call chain&#x9577;&#x9054;&#x5341;&#x5E7E;&#x5C64;&#xFF0C;&#x6BCF;&#x4E00;&#x5C64;&#x4E1F;&#x7684;excpetion&#x90FD;&#x4E0D;&#x4E00;&#x6A23;&#xFF0C;&#x6709;&#x4E9B;&#x5C64;&#x6703;&#x8655;&#x7406;exception&#xFF0C;&#x6709;&#x4E9B;&#x53C8;&#x4E0D;&#x6703;&#xFF0C;&#x6700;&#x5F8C;&#x7684;&#x5927;&#x7D55;&#x62DB;&#x5C31;&#x662F;&#x6BCF;&#x4E00;&#x5C64;&#x90FD;&#x52A0; <code>try{...} catch{...}</code>&#xFF0E;</p><p>&#x4F8B;&#x5916;&#x8655;&#x7406;&#x5728;OOP&#x662F;&#x4E00;&#x500B;&#x5F88;&#x91CD;&#x8981;&#x7684;&#x8B70;&#x984C;&#xFF0C;&#x6C92;&#x6709;&#x8B39;&#x614E;&#x8655;&#x7406;&#x5F88;&#x5BB9;&#x6613;&#x9020;&#x6210;&#x7DAD;&#x8B77;&#x56F0;&#x96E3;&#x548C;&#x767C;&#x751F;&#x554F;&#x984C;&#x4E0D;&#x5BB9;&#x6613;&#x627E;&#x5230;&#x554F;&#x984C;&#x9EDE;&#xFF0E;<br>&#x56E0;&#x70BA;Exception&#x662F;&#x6709;side effect&#xFF0C;&#x5728;FP&#x662F;&#x4E0D;&#x88AB;&#x51C6;&#x8A31;&#x7684;&#xFF0E;&#x6240;&#x4EE5;&#x5728;pure FP&#x7A0B;&#x5F0F;&#x4E2D;&#x662F;&#x770B;&#x4E0D;&#x5230;excpetion&#x548C; <code>try{...} catch{...}</code>&#xFF0E;</p><h1 id="Either"><a href="#Either" class="headerlink" title="Either"></a>Either</h1><p>&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x900F;&#x904E; <code>Either</code> &#x4F86;&#x9054;&#x6210;&#xFF0C;<code>Left</code> &#x653E;&#x932F;&#x8AA4;&#x7684;&#x7269;&#x4EF6;&#xFF0C;<code>Right</code> &#x653E;&#x6B63;&#x78BA;&#x7684;&#x7269;&#x4EF6;&#xFF1A;<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">sealed</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Either</span>[<span class="type">A</span>, <span class="type">B</span>]</span></span><br><span class="line"><span class="class"><span class="title">final</span> <span class="title">case</span> <span class="title">class</span> <span class="title">Left</span>[+<span class="type">A</span>, +<span class="type">B</span>](<span class="params">a: <span class="type">A</span></span>) <span class="keyword">extends</span> <span class="title">Either</span>[<span class="type">A</span>, <span class="type">B</span>]</span></span><br><span class="line"><span class="class"><span class="title">final</span> <span class="title">case</span> <span class="title">class</span> <span class="title">Right</span>[+<span class="type">A</span>, +<span class="type">B</span>](<span class="params">b: <span class="type">B</span></span>) <span class="keyword">extends</span> <span class="title">Either</span>[<span class="type">A</span>, <span class="type">B</span>]</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">//</span> <span class="title">for</span> <span class="title">exmple</span></span></span><br><span class="line"><span class="class"><span class="title">type</span> <span class="title">Error</span> </span>= <span class="type">String</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> result = <span class="type">Right</span>[<span class="type">Error</span>, <span class="type">Int</span>](<span class="number">123</span>)</span><br><span class="line"><span class="keyword">val</span> error = <span class="type">Left</span>[<span class="type">Error</span>, <span class="type">Int</span>](<span class="string">&quot;Something wrong!!!&quot;</span>)</span><br></pre></td></tr></table></figure></p><p>&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x628A;&#x6B63;&#x78BA;&#x7684;&#x7D50;&#x679C;&#x6216;&#x932F;&#x8AA4;&#x653E;&#x5230; <code>Either</code> &#x9019;&#x500B;&#x5BB9;&#x5668;&#xFF0C;&#x547C;&#x53EB;&#x8005;&#x53EF;&#x4EE5;&#x6E05;&#x695A;&#x77E5;&#x9053;&#x6709;&#x9700;&#x8981;&#x8655;&#x7406;&#x932F;&#x8AA4;&#x60C5;&#x6CC1;&#xFF0C;&#x518D;&#x4F86;&#x7A0B;&#x5F0F;&#x78BC;&#x4E0D;&#x518D;&#x5230;&#x8655;&#x5145;&#x65A5; <code>try{...} catch{...}</code>&#xFF0E;</p><p>&#x6211;&#x5011;&#x4F7F;&#x7528;&#x56DB;&#x5247;&#x904B;&#x7B97;&#x4F86;&#x7576;&#x7BC4;&#x4F8B;&#xFF0C;&#x5982;&#x4F55;&#x4F7F;&#x7528; <code>Either</code><br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">div</span></span>(a: <span class="type">Double</span>, b: <span class="type">Double</span>): <span class="type">Either</span>[<span class="type">String</span>, <span class="type">Double</span>] = {</span><br><span class="line">  <span class="keyword">if</span>(b == <span class="number">0</span>) <span class="type">Left</span>[<span class="type">String</span>, <span class="type">Double</span>](<span class="string">&quot;Can&apos;t divide by 0 !!!&quot;</span>)</span><br><span class="line">  <span class="keyword">else</span> <span class="type">Right</span>[<span class="type">String</span>, <span class="type">Double</span>](a / b)</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span></span>(a: <span class="type">Double</span>, b: <span class="type">Double</span>): <span class="type">Either</span>[<span class="type">String</span>, <span class="type">Double</span>] = {</span><br><span class="line">  <span class="type">Right</span>[<span class="type">String</span>, <span class="type">Double</span>](a + b)</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">minus</span></span>(a: <span class="type">Double</span>, b: <span class="type">Double</span>): <span class="type">Either</span>[<span class="type">String</span>, <span class="type">Double</span>] = {</span><br><span class="line">  <span class="type">Right</span>[<span class="type">String</span>, <span class="type">Double</span>](a - b)</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mul</span></span>(a: <span class="type">Double</span>, b: <span class="type">Double</span>): <span class="type">Either</span>[<span class="type">String</span>, <span class="type">Double</span>] = {</span><br><span class="line">  <span class="type">Right</span>[<span class="type">String</span>, <span class="type">Double</span>](a * b)</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// ((((1 + 2) * 3) / 4) - 5)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> result = <span class="keyword">for</span> {</span><br><span class="line">  r1 &lt;- add(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">  r2 &lt;- mul(r1, <span class="number">3</span>)</span><br><span class="line">  r3 &lt;- div(r2, <span class="number">4</span>)</span><br><span class="line">  r4 &lt;- minus(r3, <span class="number">5</span>)</span><br><span class="line">} <span class="keyword">yield</span> {</span><br><span class="line">  r4</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// result: scala.util.Either[String,Double] = Right(-2.75)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ((((1 + 2) * 3) / 0) - 5)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> result = <span class="keyword">for</span> {</span><br><span class="line">  r1 &lt;- add(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">  r2 &lt;- mul(r1, <span class="number">3</span>)</span><br><span class="line">  r3 &lt;- div(r2, <span class="number">0</span>)</span><br><span class="line">  r4 &lt;- minus(r3, <span class="number">5</span>)</span><br><span class="line">} <span class="keyword">yield</span> {</span><br><span class="line">  r4</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// result: scala.util.Either[String,Double] = Left(Can&apos;t divide by 0 !!!)</span></span><br></pre></td></tr></table></figure></p><p>&#x6839;&#x64DA;&#x4E0A;&#x9762;&#x7C21;&#x55AE;&#x7684;&#x7BC4;&#x4F8B;&#xFF0C;&#x9019;&#x6A23;&#x7684;&#x5BEB;&#x6CD5;&#x5F88;&#x660E;&#x986F;&#x512A;&#x65BC;&#x50B3;&#x7D71;OOP&#x7528;excpetion&#x4F86;&#x8655;&#x7406;&#x932F;&#x8AA4;&#xFF1A;</p><ul><li>&#x4E0D;&#x518D;&#x6709; <code>try{...} catch{...}</code> &#x5145;&#x65A5;&#x5728;&#x6BCF;&#x500B;&#x5730;&#x65B9;&#xFF0E;</li><li>&#x547C;&#x53EB;&#x8005;&#x53EF;&#x4EE5;&#x6839;&#x64DA;fucntion signature&#x77E5;&#x9053;&#x662F;&#x5426;&#x6703;&#x7522;&#x751F;&#x932F;&#x8AA4;&#xFF0E;</li><li>&#x66F4;&#x53EF;&#x4EE5;&#x5C08;&#x5FC3;&#x5728;&#x5546;&#x696D;&#x908F;&#x8F2F;&#xFF0C;&#x800C;&#x4E0D;&#x7528;&#x82B1;&#x591A;&#x9918;&#x7684;&#x5FC3;&#x529B;&#x5728;&#x8655;&#x7406;&#x4F8B;&#x5916;&#xFF0E;</li></ul><h1 id="Try"><a href="#Try" class="headerlink" title="Try"></a>Try</h1><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">sealed</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Try</span>[+<span class="type">T</span>]</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">final</span> <span class="title">case</span> <span class="title">class</span> <span class="title">Failure</span>[+<span class="type">T</span>](<span class="params">exception: <span class="type">Throwable</span></span>) <span class="keyword">extends</span> <span class="title">Try</span>[<span class="type">T</span>] </span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">final</span> <span class="title">case</span> <span class="title">class</span> <span class="title">Success</span>[+<span class="type">T</span>](<span class="params">value: <span class="type">T</span></span>) <span class="keyword">extends</span> <span class="title">Try</span>[<span class="type">T</span>]</span></span><br></pre></td></tr></table></figure><p><code>Try</code> &#x4E5F;&#x662F;&#x985E;&#x4F3C;&#x65BC; <code>Either</code> &#x7684;context&#xFF0C;&#x6709;&#x8208;&#x8DA3;&#x7684;&#x8B80;&#x8005;&#x53EF;&#x4EE5;&#x8A66;&#x7528;&#x770B;&#x770B;&#xFF0E;&#x5728;&#x5BE6;&#x52D9;&#x4E0A;&#x5927;&#x90E8;&#x5206;&#x90FD;&#x63A1;&#x7528; <code>Either</code>&#xFF0C;&#x4E0D;&#x63A1;&#x7528; <code>Try</code>&#x7684;&#x539F;&#x56E0;&#x662F;&#xFF1A;</p><ul><li>&#x6C92;&#x6709;&#x8FA6;&#x6CD5;&#x5C0D;exception&#x505A; <code>exhaustive pattern match</code>&#xFF0C;&#x7576;&#x662F;Failure&#x7684;&#x6642;&#x5019;&#xFF0C;&#x547C;&#x53EB;&#x8005;&#x4E0D;&#x77E5;&#x9053;&#x6709;&#x54EA;&#x4E9B;exception&#x6703;&#x4E1F;&#x51FA;&#xFF0C;&#x53EA;&#x77E5;&#x9053;&#x6703;&#x4E1F;&#x51FA;&#x4E00;&#x500B; <code>Throwable class</code>&#xFF0E;</li></ul><p>&#x4F7F;&#x7528; <code>Either</code> &#x6211;&#x5011;&#x53EF;&#x4EE5;&#x81EA;&#x8A02;Error type&#xFF0C;&#x7576;&#x5931;&#x6557;&#x6642;&#x5019;&#x5C31;&#x53EF;&#x4EE5;&#x5C0D;Error type&#x505A; <code>exhaustive pattern match</code>&#xFF0C;&#x4F9D;&#x64DA;&#x4E0D;&#x540C;&#x7684;&#x932F;&#x8AA4;&#x505A;&#x4E0D;&#x540C;&#x7684;&#x8655;&#x7406;&#xFF0E;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;#x5728;OOP&amp;#x7684;&amp;#x8A9E;&amp;#x8A00;&amp;#x4E2D;&amp;#xFF0C;&amp;#x6211;&amp;#x5011;exception&amp;#x4F86;&amp;#x8868;&amp;#x9054;&amp;#x7A0B;&amp;#x5F0F;&amp;#x932F;&amp;#x8AA4;&amp;#x62
      
    
    </summary>
    
      <category term="Scala" scheme="https://pandaforme.github.io/categories/Scala/"/>
    
    
      <category term="Scala" scheme="https://pandaforme.github.io/tags/Scala/"/>
    
      <category term="Exception" scheme="https://pandaforme.github.io/tags/Exception/"/>
    
      <category term="Either" scheme="https://pandaforme.github.io/tags/Either/"/>
    
      <category term="Try" scheme="https://pandaforme.github.io/tags/Try/"/>
    
  </entry>
  
  <entry>
    <title>[Scala] How to use Option correctly</title>
    <link href="https://pandaforme.github.io/2016/12/20/Scala-How-to-use-Option-correctly/"/>
    <id>https://pandaforme.github.io/2016/12/20/Scala-How-to-use-Option-correctly/</id>
    <published>2016-12-20T07:13:00.000Z</published>
    <updated>2017-05-18T08:05:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5C0D;&#x65BC;Scala&#x6211;&#x4E00;&#x76F4;&#x628A;&#x5B83;&#x7576;&#x6210;&#x9032;&#x968E;&#x7248;&#x672C;&#x7684;Java&#xFF0C;&#x7576;&#x8D8A;&#x4F86;&#x8D8A;&#x4E86;&#x89E3;Functional Programming&#x7684;&#x7CBE;&#x795E;&#xFF0C;&#x624D;&#x767C;&#x73FE;&#x4E4B;&#x524D;&#x60F3;&#x6CD5;&#x9084;&#x883B;&#x5929;&#x771F;&#x7684;&#xFF0E;</p><p>&#x53EF;&#x4EE5;&#x5F9E;&#x5982;&#x4F55;&#x6B63;&#x78BA;&#x4F7F;&#x7528; <code>Option</code> &#xFF0C;&#x8B93;&#x6211;&#x5011;&#x6162;&#x6162;&#x4F86;&#x9032;&#x5165;Functional Programming&#x7684;&#x4E16;&#x754C;&#xFF0E;</p><p>&#x5148;&#x5F9E;&#x4E00;&#x500B;&#x7C21;&#x55AE;&#x7684;API&#x5BE6;&#x4F8B;&#x4F86;&#x958B;&#x59CB;&#xFF1A; &#x5047;&#x5982;&#x6709;&#x4E00;&#x500B;API&#xFF0C;Admin&#x4F7F;&#x7528;&#x8005;&#x53EF;&#x4EE5;&#x627E;&#x51FA;&#x67D0;&#x500B;&#x570B;&#x5BB6;&#x7684;&#x6240;&#x6709;&#x4F7F;&#x7528;&#x8005;&#xFF1B;&#x4E0D;&#x662F;Admin&#x4F7F;&#x7528;&#x8005;&#x5C31;&#x56DE;&#x50B3;&#x7A7A;&#x5B57;&#x4E32;&#xFF0E;</p><p>&#x4F7F;&#x7528;&#x8005;&#x6703;&#x5E36;&#x4E0A; <code>userName</code> , <code>password</code> &#x548C; <code>country</code> &#x547C;&#x53EB;&#x6B64;API&#xFF0C;&#x9019;&#x500B;API&#x6703;</p><ol><li>&#x6AA2;&#x67E5;&#x683C;&#x5F0F;&#x662F;&#x5426;&#x6B63;&#x78BA;</li><li>&#x67E5;&#x8A62;&#x8CC7;&#x6599;&#x5EAB;&#x662F;&#x5426;&#x6709;&#x4F7F;&#x7528;&#x8005;</li><li>&#x82E5;&#x6709;&#xFF0C;&#x6AA2;&#x67E5; <code>userType</code> &#x4F7F;&#x5426;&#x70BA; <code>Admin</code></li><li>&#x6839;&#x64DA; <code>country</code> &#x53BB;&#x8CC7;&#x6599;&#x5EAB;&#x6488;&#x53D6;&#x8A72;&#x570B;&#x5BB6;&#x7684;&#x6240;&#x6709;&#x4F7F;&#x7528;&#x8005;</li><li>&#x5C07;&#x7D50;&#x679C;&#x8F49;&#x6210; <code>json</code> &#x653E;&#x5230; http response</li></ol><p>&#x5148;&#x5B9A;&#x7FA9; <code>Data Type</code>&#xFF1A;<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">sealed</span> <span class="class"><span class="keyword">trait</span> <span class="title">Name</span></span></span><br><span class="line"><span class="class"><span class="title">final</span> <span class="title">case</span> <span class="title">class</span> <span class="title">UserName</span>(<span class="params">name: <span class="type">String</span></span>) <span class="keyword">extends</span> <span class="title">Name</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">sealed</span> <span class="title">trait</span> <span class="title">Password</span></span></span><br><span class="line"><span class="class"><span class="title">final</span> <span class="title">case</span> <span class="title">class</span> <span class="title">MD5Password</span>(<span class="params">plainText: <span class="type">String</span></span>) <span class="keyword">extends</span> <span class="title">Password</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">sealed</span> <span class="title">trait</span> <span class="title">Country</span></span></span><br><span class="line"><span class="class"><span class="title">final</span> <span class="title">case</span> <span class="title">object</span> <span class="title">TAIWAN</span> <span class="keyword">extends</span> <span class="title">Country</span></span></span><br><span class="line"><span class="class"><span class="title">final</span> <span class="title">case</span> <span class="title">object</span> <span class="title">CHINA</span> <span class="keyword">extends</span> <span class="title">Country</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">sealed</span> <span class="title">trait</span> <span class="title">UserType</span></span></span><br><span class="line"><span class="class"><span class="title">final</span> <span class="title">case</span> <span class="title">object</span> <span class="title">ADMIN</span> <span class="keyword">extends</span> <span class="title">UserType</span></span></span><br><span class="line"><span class="class"><span class="title">final</span> <span class="title">case</span> <span class="title">object</span> <span class="title">EMAIL</span> <span class="keyword">extends</span> <span class="title">UserType</span></span></span><br><span class="line"><span class="class"><span class="title">final</span> <span class="title">case</span> <span class="title">object</span> <span class="title">PHONE</span> <span class="keyword">extends</span> <span class="title">UserType</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">sealed</span> <span class="title">trait</span> <span class="title">Account</span> </span>{</span><br><span class="line">  <span class="keyword">val</span> name: <span class="type">String</span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountWithCredential</span>(<span class="params">name: <span class="type">UserName</span>, password: <span class="type">Password</span>, userType: <span class="type">UserType</span></span>) <span class="keyword">extends</span> <span class="title">Account</span></span></span><br><span class="line"><span class="class"><span class="title">final</span> <span class="title">case</span> <span class="title">class</span> <span class="title">AccountWithProfile</span>(<span class="params">name: <span class="type">UserName</span>, country: <span class="type">Country</span>, age: <span class="type">Int</span></span>) <span class="keyword">extends</span> <span class="title">Account</span></span></span><br></pre></td></tr></table></figure></p><p>&#x9019;&#x6A23;&#x7684; <code>Data Type</code> &#x4E5F;&#x662F;&#x6240;&#x8B02;&#x7684; <code>Algebraic Type</code>&#xFF0C;<br>&#x4EE5; <code>Account</code> &#x70BA;&#x4F8B;&#xFF1A;</p><ul><li>&#x5B83;&#x6709;&#x5169;&#x7A2E; subtype <code>AccountWithCredential</code> &#x548C; <code>AccountWithProfile</code>&#xFF0C;&#x70BA; <code>Account</code> &#x7684; <code>Sum Type</code></li><li>&#x5404;&#x7A2E;&#x4E0D;&#x540C; subtype &#x6709;&#x5B83;&#x5011;&#x7684;&#x53C3;&#x6578;&#xFF0C;&#x4E5F;&#x7A31;&#x4E4B;  <code>Product Type</code></li></ul><p>&#x9019;&#x7A2E;&#x5B9A;&#x7FA9;&#x65B9;&#x5F0F;&#x6709;&#x9EDE;&#x50CF;Java&#x4E16;&#x754C;&#x4E2D;&#x7684; <code>Value Object</code>&#xFF0C;&#x628A;&#x8CC7;&#x6599;&#x548C;&#x884C;&#x70BA;&#x5206;&#x958B;&#x662F;&#x6709;&#x597D;&#x8655;&#x7684;&#xFF0C;&#x907F;&#x514D;&#x8CC7;&#x6599;&#x548C;&#x884C;&#x70BA;&#x8026;&#x5408;&#x904E;&#x7DCA;&#xFF0E;<a href="https://en.wikipedia.org/wiki/Software_design_pattern" target="_blank" rel="noopener">Design Pattern</a> &#x4E5F;&#x662F;&#x900F;&#x904E;pattern&#x53BB;&#x5206;&#x96E2;&#x8CC7;&#x6599;&#x548C;&#x884C;&#x70BA;&#xFF0E;</p><p>&#x518D;&#x4F86;&#x6211;&#x5011;&#x4F86;&#x5B9A;&#x7FA9;&#x884C;&#x70BA;&#xFF1A;<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">Repo</span> </span>{</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">login</span></span>(name: <span class="type">UserName</span>, password: <span class="type">Password</span>): <span class="type">Option</span>[<span class="type">AccountWithCredential</span>]</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">getAccountsByCountry</span></span>(country: <span class="type">Country</span>): <span class="type">Option</span>[<span class="type">List</span>[<span class="type">AccountWithProfile</span>]]</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">Repo</span> <span class="keyword">extends</span> <span class="title">Repo</span> </span>{</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">login</span></span>(name: <span class="type">UserName</span>, password: <span class="type">Password</span>): <span class="type">Option</span>[<span class="type">AccountWithCredential</span>] = ???</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">getAccountsByCountry</span></span>(country: <span class="type">Country</span>): <span class="type">Option</span>[<span class="type">List</span>[<span class="type">AccountWithProfile</span>]] = ???</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p><code>login</code> &#x7684;&#x56DE;&#x50B3;&#x503C;&#x70BA;&#x4E00;&#x500B; <code>Option</code> context&#xFF0C;&#x88E1;&#x9762;&#x88DD;&#x8457; <code>AccountWithCredential</code>&#xFF0E;</p><ul><li>&#x82E5;&#x6709;&#x627E;&#x5230;&#x5C31;&#x56DE;&#x50B3; <code>Some[AccountWithCredential]</code></li><li>&#x82E5;&#x6C92;&#x6709;&#x627E;&#x5C31;&#x56DE;&#x50B3; <code>None</code></li></ul><p>&#x5728; <code>Java 7</code> &#x4E4B;&#x524D;&#x7684;&#x7248;&#x672C;&#x6703;&#x5B9A;&#x7FA9;&#x627E;&#x4E0D;&#x5230;&#x6703;&#x56DE;&#x50B3; <code>Null</code>&#xFF0C;<code>Null</code> &#x6703;&#x9020;&#x6210;&#x8A9E;&#x610F;&#x4E0D;&#x6E05;&#x548C;&#x7A0B;&#x5F0F;&#x78BC;&#x5145;&#x65A5;&#x8457;&#x4E00;&#x5806;&#x6AA2;&#x67E5;&#x662F;&#x5426;&#x70BA; <code>Null</code> &#x7684;&#x7A0B;&#x5F0F;&#x78BC;&#xFF0E;<br>&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x900F;&#x904E; <a href="https://en.wikipedia.org/wiki/Null_Object_pattern" target="_blank" rel="noopener">Null Object pattern</a> &#x4F86;&#x89E3;&#x6C7A;&#x9019;&#x500B;&#x554F;&#x984C;&#xFF0E;<br>&#x5728; <code>Scala</code> &#x6216; <code>Java 8</code> &#x5247;&#x662F;&#x900F;&#x904E; <code>Option</code> / <code>Optional</code> data type&#x4F86;&#x89E3;&#x6C7A;&#x4E4B;&#xFF0E;</p><p>&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x5BE6;&#x4F5C;API&#xFF1A;<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">Api</span> <span class="keyword">extends</span> <span class="title">App</span> </span>{</span><br><span class="line">  <span class="keyword">val</span> name: <span class="type">Option</span>[<span class="type">UserName</span>] = parse(<span class="type">UserName</span>(args(<span class="number">0</span>)))</span><br><span class="line">  <span class="keyword">val</span> password: <span class="type">Option</span>[<span class="type">MD5Password</span>] = parse(<span class="type">MD5Password</span>(args(<span class="number">1</span>)))</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Step1: login</span></span><br><span class="line">  <span class="comment">// Step2: check isAdmin == true</span></span><br><span class="line">  <span class="comment">// Step3: get accounts by country</span></span><br><span class="line">  <span class="comment">// Step4: convert accounts to json</span></span><br><span class="line">  <span class="comment">// Step5: add json to HttpResponse</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (name.isEmpty) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="type">RuntimeException</span>(<span class="string">&quot;bad id&quot;</span>)</span><br><span class="line">  <span class="keyword">if</span> (password.isEmpty) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="type">RuntimeException</span>(<span class="string">&quot;bad password&quot;</span>)</span><br><span class="line">  <span class="keyword">val</span> json: <span class="type">Option</span>[<span class="type">String</span>] = getJsonProfile(name.get, password.get, <span class="type">CHINA</span>)</span><br><span class="line">  <span class="keyword">if</span> (json.isDefined) {</span><br><span class="line">    returnHttpResponse(json.get)</span><br><span class="line">  } <span class="keyword">else</span> {</span><br><span class="line">    returnHttpResponse(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  }</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">parse</span></span>[<span class="type">A</span>](a: =&gt; <span class="type">A</span>): <span class="type">Option</span>[<span class="type">A</span>] = ???</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">getJsonProfile</span></span>(name: <span class="type">UserName</span>,</span><br><span class="line">                             password: <span class="type">Password</span>,</span><br><span class="line">                             country: <span class="type">Country</span>): <span class="type">Option</span>[<span class="type">String</span>] = {</span><br><span class="line">    <span class="keyword">val</span> accountWithCredential: <span class="type">Option</span>[<span class="type">AccountWithCredential</span>] =</span><br><span class="line">      <span class="type">Repo</span>.login(name, password)</span><br><span class="line">    <span class="keyword">if</span> (accountWithCredential.isDefined) {</span><br><span class="line">      accountWithCredential.get.userType <span class="keyword">match</span> {</span><br><span class="line">        <span class="keyword">case</span> <span class="type">ADMIN</span> =&gt;</span><br><span class="line">          <span class="keyword">val</span> accounts: <span class="type">Option</span>[<span class="type">List</span>[<span class="type">AccountWithProfile</span>]] =</span><br><span class="line">            <span class="type">Repo</span>.getAccountsByCountry(country)</span><br><span class="line">          <span class="keyword">if</span> (accounts.isDefined) {</span><br><span class="line">            listToJson(accounts.get)</span><br><span class="line">          } <span class="keyword">else</span> {</span><br><span class="line">            <span class="type">None</span></span><br><span class="line">          }</span><br><span class="line">        <span class="keyword">case</span> _: <span class="type">UserType</span> =&gt; <span class="type">None</span></span><br><span class="line">      }</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      <span class="type">None</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">// convert a list of Account to json String</span></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">listToJson</span></span>[<span class="type">A</span>](list: <span class="type">List</span>[<span class="type">A</span>]): <span class="type">Option</span>[<span class="type">String</span>] = ???</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">returnHttpResponse</span></span>(message: <span class="type">String</span>): <span class="type">Unit</span> = ???</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>&#x9019;&#x500B;&#x7248;&#x672C;&#x5229;&#x7528; <code>isDefined</code> &#x53BB;&#x5224;&#x5B9A;&#x662F;&#x5426;&#x70BA;&#x7A7A;&#x503C;&#xFF0C;&#x9019;&#x6A23;&#x7684;&#x5BEB;&#x6CD5;&#x8DDF;&#x4F7F;&#x7528; <code>Null</code> &#x7576;&#x56DE;&#x50B3;&#x503C;&#x4E00;&#x6A23;&#xFF0C;&#x5728;&#x9019;&#x500B;&#x7248;&#x672C;&#x5B8C;&#x5168;&#x770B;&#x4E0D;&#x51FA;&#x4F7F;&#x7528; <code>Option</code> &#x597D;&#x8655;&#xFF0C;&#x53CD;&#x800C;&#x986F;&#x5F97;&#x5197;&#x9918;&#xFF0E;</p><p>&#x6211;&#x5011;&#x6539;&#x5BEB;&#x53E6;&#x5916;&#x4E00;&#x500B;&#x7248;&#x672C; <code>getJsonProfile</code> &#xFF1A;<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">getJsonProfile</span></span>(name: <span class="type">UserName</span>, password: <span class="type">Password</span>, country: <span class="type">Country</span>): <span class="type">Option</span>[<span class="type">String</span>] = {</span><br><span class="line">    <span class="type">Repo</span>.login(name, password).flatMap(</span><br><span class="line">      account =&gt; {</span><br><span class="line">        <span class="keyword">if</span> (account.userType == <span class="type">ADMIN</span>) {</span><br><span class="line">          <span class="type">Repo</span>.getAccountsByCountry(country).flatMap(profiles =&gt; listToJson(profiles))</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="type">None</span></span><br><span class="line">      })</span><br><span class="line">  }</span><br></pre></td></tr></table></figure></p><p>&#x6211;&#x5011;&#x5229;&#x7528; <code>flatMap</code> &#x4F86;&#x5E6B;&#x4E32;&#x63A5;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5617;&#x8A66;&#x53D6;&#x5F97; <code>Option</code> &#x88E1;&#x9762;&#x7684;&#x503C;&#xFF0C;<code>Option</code> &#x7684; <code>flatMap</code> &#x7684; signature &#x70BA; <code>A =&gt; Option[B]</code>&#xFF0E;</p><p>&#x4F8B;&#x5982;&#xFF1A; <code>getAccountsByCountry</code> &#x9700;&#x4F9D;&#x8CF4; <code>login</code> &#x7684;&#x7D50;&#x679C;&#xFF0C;&#x624D;&#x53EF;&#x4EE5;&#x9032;&#x884C;&#x4E4B;&#x5F8C;&#x7684;&#x52D5;&#x4F5C;&#xFF0E;&#x6211;&#x5011;&#x662F;&#x900F;&#x904E; <code>flatMap</code> &#x5C07;&#x9019;&#x5169;&#x500B;&#x52D5;&#x4F5C;&#x4E32;&#x63A5;&#x8D77;&#x4F86;&#xFF0C;<br>&#x9019;&#x6A23;&#x5C31;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x4E00;&#x5806;&#x5197;&#x9918; <code>if else</code> &#x6AA2;&#x67E5;&#xFF0E;</p><p>&#x518D;&#x8209;&#x4E00;&#x500B;&#x62BD;&#x8C61;&#x7684;&#x4F8B;&#x5B50;&#xFF1A;<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">A</span></span>(a: <span class="type">A</span>): <span class="type">Option</span>[<span class="type">B</span>] = ???</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">B</span></span>(b: <span class="type">B</span>): <span class="type">Option</span>[<span class="type">C</span>] = ???</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">C</span></span>(c: <span class="type">C</span>): <span class="type">Option</span>[<span class="type">D</span>] = ???</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">total</span></span>(input: <span class="type">Option</span>[<span class="type">A</span>]): <span class="type">Option</span>[<span class="type">D</span>] = {</span><br><span class="line">  input.flatMap(<span class="type">A</span>(_).flatMap(<span class="type">B</span>(_).flatMap(<span class="type">C</span>(_))))</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>&#x53EF;&#x4EE5;&#x900F;&#x904E; <code>flatMap</code> &#x4E32;&#x63A5; <code>A</code>, <code>B</code>, <code>C</code> &#x9019;&#x4E09;&#x500B;function&#xFF0C;&#x5047;&#x5982;&#x7528; <code>isDefined</code> &#x4F86;&#x4E32;&#x63A5;&#xFF0C;&#x7A0B;&#x5F0F;&#x78BC;&#x7684;&#x53EF;&#x8B80;&#x6027;&#x548C;&#x7DAD;&#x8B77;&#x6027;&#x6703;&#x5927;&#x5E45;&#x4E0B;&#x964D;&#xFF0E;<br>&#x5728; <code>Function Programming</code>&#x4E2D;&#xFF0C;&#x5E38;&#x898B;&#x7684;pattern&#x6703;&#x5C07;&#x503C;&#x653E;&#x5230;&#x4E00;&#x500B;context&#x88E1;&#x9762;&#xFF0C;&#x5728;&#x4F7F;&#x7528;&#x6642;&#x5019;&#x4E26;&#x4E0D;&#x6703;&#x5C07;&#x503C;&#x53D6;&#x51FA;&#x4F86;&#xFF0C;&#x800C;&#x662F;&#x900F;&#x904E; <code>flatMap</code> &#x6216; <code>map</code> &#x4F86;&#x8F49;&#x63DB;context&#x88E1;&#x9762;&#x7684;&#x503C;&#xFF0E;</p><p>&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x50B3;&#x5165; <code>parse</code> &#x904E;&#x5F8C;&#x7684;&#x7D50;&#x679C;&#xFF0C;&#x5C07;&#x6240;&#x6709;&#x7684;function&#x4E32;&#x63A5;&#x5728;&#x4E00;&#x8D77;&#xFF1A;<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">Api</span> <span class="keyword">extends</span> <span class="title">App</span> </span>{</span><br><span class="line">  <span class="keyword">val</span> name: <span class="type">Option</span>[<span class="type">UserName</span>] = parse(<span class="type">UserName</span>(args(<span class="number">0</span>)))</span><br><span class="line">  <span class="keyword">val</span> password: <span class="type">Option</span>[<span class="type">MD5Password</span>] = parse(<span class="type">MD5Password</span>(args(<span class="number">1</span>)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">val</span> json: <span class="type">Option</span>[<span class="type">String</span>] = getJsonProfile(name, password, <span class="type">CHINA</span>)</span><br><span class="line">  <span class="keyword">if</span> (json.isDefined) {</span><br><span class="line">    returnHttpResponse(json.get)</span><br><span class="line">  } <span class="keyword">else</span> {</span><br><span class="line">    returnHttpResponse(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  }</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">getJsonProfile</span></span>(name: <span class="type">Option</span>[<span class="type">UserName</span>], password: <span class="type">Option</span>[<span class="type">Password</span>], country: <span class="type">Country</span>): <span class="type">Option</span>[<span class="type">String</span>] = {</span><br><span class="line">    name.flatMap(name1 =&gt;</span><br><span class="line">      password.flatMap(password1 =&gt;</span><br><span class="line">        <span class="type">Repo</span>.login(name1, password1).flatMap(</span><br><span class="line">          account =&gt; {</span><br><span class="line">            <span class="keyword">if</span> (account.userType == <span class="type">ADMIN</span>) {</span><br><span class="line">              <span class="type">Repo</span>.getAccountsByCountry(country).flatMap(profiles =&gt; listToJson(profiles))</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="type">None</span></span><br><span class="line">          })</span><br><span class="line">      ))</span><br><span class="line">  }</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// other functions</span></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>&#x53EF;&#x4EE5;&#x767C;&#x73FE;&#x4E32;&#x63A5;&#x7684;function&#x8D8A;&#x591A;&#xFF0C;&#x6703;&#x8D8A;&#x5BEB;&#x8D8A;&#x53F3;&#x908A;&#xFF0C;&#x6709;&#x9EDE;&#x985E;&#x4F3C; <code>Callback hell</code> &#xFF0C;&#x6216;&#x8A31;&#x4E5F;&#x53EF;&#x4EE5;&#x7A31;&#x70BA; <code>flatMap hell</code>&#x2026;<br>&#x597D;&#x96AA;Scala&#x6709;&#x63D0;&#x4F9B;&#x5F88;&#x597D;&#x7684; syntax sugar <code>for comprehension</code> &#x4F86;&#x89E3;&#x6C7A; <code>flatMap hell</code></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">Api</span> <span class="keyword">extends</span> <span class="title">App</span> </span>{</span><br><span class="line">  <span class="keyword">val</span> name: <span class="type">Option</span>[<span class="type">UserName</span>] = parse(<span class="type">UserName</span>(args(<span class="number">0</span>)))</span><br><span class="line">  <span class="keyword">val</span> password: <span class="type">Option</span>[<span class="type">MD5Password</span>] = parse(<span class="type">MD5Password</span>(args(<span class="number">1</span>)))</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> {</span><br><span class="line">    name1 &lt;- name</span><br><span class="line">    password1 &lt;- password</span><br><span class="line">    account &lt;- <span class="type">Repo</span>.login(name1, password1).filter(a =&gt; a.userType == <span class="type">ADMIN</span>)</span><br><span class="line">    profiles &lt;- <span class="type">Repo</span>.getAccountsByCountry(<span class="type">CHINA</span>)</span><br><span class="line">    json &lt;- listToJson(profiles)</span><br><span class="line">  } <span class="keyword">yield</span> {</span><br><span class="line">    returnHttpResponse(json)</span><br><span class="line">  }</span><br><span class="line">      </span><br><span class="line">  <span class="comment">// other functions</span></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6BD4;&#x8F03;&#x7B2C;&#x4E00;&#x500B;&#x7248;&#x672C;&#x548C;&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x7248;&#x672C;&#x7684;&#x7A0B;&#x5F0F;&#x78BC;&#xFF0C;&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x7248;&#x672C;&#x53EF;&#x4EE5;&#x5F88;&#x6E05;&#x695A;&#x8868;&#x9054;&#x6574;&#x500B;&#x7A0B;&#x5F0F;&#x610F;&#x5716;&#xFF0C;&#x800C;&#x4E0D;&#x6703;&#x88AB;&#x4E00;&#x5806; <code>if else</code> &#x6AA2;&#x67E5;&#x800C;&#x5E72;&#x64FE;&#xFF0E;<br>&#x900F;&#x904E;&#x6B63;&#x78BA;&#x4F7F;&#x7528; <code>Option</code> &#x6211;&#x5011;&#x53EF;&#x4EE5;&#x5B78;&#x7FD2;&#x5230;&#xFF1A;</p><ol><li>&#x5206;&#x96E2;&#x8CC7;&#x6599;&#x548C;&#x884C;&#x70BA;</li><li>&#x5C07;&#x8CC7;&#x6599;&#x653E;&#x5165;context</li><li>&#x5229;&#x7528; <code>flatMap</code>, <code>map</code> &#x8F49;&#x63DB;context&#x88E1;&#x9762;&#x7684;&#x503C;</li></ol><h3 id="&#x884D;&#x751F;&#x9700;&#x6C42;"><a href="#&#x884D;&#x751F;&#x9700;&#x6C42;" class="headerlink" title="&#x884D;&#x751F;&#x9700;&#x6C42;"></a>&#x884D;&#x751F;&#x9700;&#x6C42;</h3><p>&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x7248;&#x672C;&#x53EF;&#x4EE5;&#x767C;&#x73FE;<br>payload&#x4E0D;&#x6B63;&#x78BA;&#x6216;&#x67D0;&#x500B;&#x570B;&#x5BB6;&#x7684;&#x4F7F;&#x7528;&#x8005;&#x70BA;&#x96F6;</p><p>&#x7D50;&#x679C;&#x7ADF;&#x7136;&#x90FD;&#x662F;<code>None</code>&#xFF0C;&#x9019;&#x6A23;&#x6703;&#x9020;&#x6210;&#x4F7F;&#x7528;&#x8005;&#x9AD4;&#x9A57;&#x4E0D;&#x4F73;&#x548C;&#x7DAD;&#x8B77;&#x4E0A;&#x7684;&#x56F0;&#x96E3;&#xFF0E;&#x90A3;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x600E;&#x9EBC;&#x6539;&#x5584;&#x5462;&#xFF1F;</p><p>&#x53EF;&#x4EE5;&#x6539;&#x7528; <code>Try</code> &#x6216; <code>Either</code> &#x4F86;&#x8868;&#x9054;&#x932F;&#x8AA4;&#xFF0C;&#x5728;&#x9019;&#x908A;&#x4F7F;&#x7528; <code>Option</code> &#x4F86;&#x8868;&#x793A;parse&#x5B8C;&#x7684;&#x7D50;&#x679C;&#x4E0D;&#x592A;&#x6D3D;&#x7576;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x5C55;&#x793A;&#x53EF;&#x4EE5;&#x900F;&#x904E;compse&#x65B9;&#x5F0F;&#x4F86;&#x4E32;&#x63A5;&#x591A;&#x500B;function&#xFF0C;&#x4E0B;&#x4E00;&#x7BC7;&#x5C07;&#x6539;&#x7528; <code>Try</code> &#x6216; <code>Either</code> &#xFF0C;&#x8B93;&#x524D;&#x7AEF;&#x53EF;&#x4EE5;&#x6E05;&#x695A;&#x77E5;&#x9053;&#x932F;&#x8AA4;&#x8A0A;&#x606F;&#xFF0E;</p><h3 id="&#x53C3;&#x8003;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#xFF1A;"></a>&#x53C3;&#x8003;&#xFF1A;</h3><ol><li><a href="http://tpolecat.github.io/presentations/algebraic_types.html#1" target="_blank" rel="noopener">Introduction to Algebraic Types in Scala</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;#x5C0D;&amp;#x65BC;Scala&amp;#x6211;&amp;#x4E00;&amp;#x76F4;&amp;#x628A;&amp;#x5B83;&amp;#x7576;&amp;#x6210;&amp;#x9032;&amp;#x968E;&amp;#x7248;&amp;#x672C;&amp;#x7684;Java&amp;#xFF0C;&amp;#x7576;
      
    
    </summary>
    
      <category term="Scala" scheme="https://pandaforme.github.io/categories/Scala/"/>
    
    
      <category term="Scala" scheme="https://pandaforme.github.io/tags/Scala/"/>
    
      <category term="Option" scheme="https://pandaforme.github.io/tags/Option/"/>
    
  </entry>
  
  <entry>
    <title>[Java] Java is Pass by Value and Not Pass by Reference</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-Java-is-Pass-by-Value-and-Not-Pass-by-Reference/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-Java-is-Pass-by-Value-and-Not-Pass-by-Reference/</id>
    <published>2016-12-09T11:00:43.000Z</published>
    <updated>2016-12-13T07:25:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>Java&#x5230;&#x5E95;&#x662F;pass by value&#x9084;&#x662F;pass by reference&#xFF1F;&#x8AAA;&#x6CD5;&#x773E;&#x8AAA;&#x7D1B;&#x7D1C;&#xFF0C;&#x5F8C;&#x4F86;&#x770B;&#x5230;&#x9019;&#x7BC7;&#x6587;&#x7AE0;<a href="http://www.journaldev.com/3884/java-is-pass-by-value-and-not-pass-by-reference" target="_blank" rel="noopener">Java is Pass by Value and Not Pass by Reference</a>&#x5F8C;&#xFF0C;&#x89C0;&#x5FF5;&#x624D;&#x6574;&#x500B;&#x91D0;&#x6E05;&#x3002;</p><p><strong><em>Java&#x662F;pass by value!</em></strong></p><h3 id="&#x7BC4;&#x4F8B;&#xFF1A;"><a href="#&#x7BC4;&#x4F8B;&#xFF1A;" class="headerlink" title="&#x7BC4;&#x4F8B;&#xFF1A;"></a>&#x7BC4;&#x4F8B;&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Balloon</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Stringcolor;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Balloon</span><span class="params">()</span> </span>{</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Balloon</span><span class="params">(String c)</span> </span>{</span><br><span class="line"><span class="keyword">this</span>.color = c;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getColor</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">return</span> color;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setColor</span><span class="params">(String color)</span> </span>{</span><br><span class="line"><span class="keyword">this</span>.color = color;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Balloon red = <span class="keyword">new</span> Balloon(<span class="string">&quot;Red&quot;</span>);</span><br><span class="line">Balloon blue = <span class="keyword">new</span> Balloon(<span class="string">&quot;Blue&quot;</span>);</span><br><span class="line"></span><br><span class="line">swap(red, blue);</span><br><span class="line">System.out.println(<span class="string">&quot;red color=&quot;</span> + red.getColor());</span><br><span class="line">System.out.println(<span class="string">&quot;blue color=&quot;</span> + blue.getColor());</span><br><span class="line"></span><br><span class="line">foo(blue);</span><br><span class="line">System.out.println(<span class="string">&quot;blue color=&quot;</span> + blue.getColor());</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">foo</span><span class="params">(Balloon balloon)</span> </span>{</span><br><span class="line">balloon.setColor(<span class="string">&quot;Red&quot;</span>);</span><br><span class="line">balloon = <span class="keyword">new</span> Balloon(<span class="string">&quot;Green&quot;</span>);</span><br><span class="line">balloon.setColor(<span class="string">&quot;Blue&quot;</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(Object o1, Object o2)</span> </span>{</span><br><span class="line">Object temp = o1;</span><br><span class="line">o1 = o2;</span><br><span class="line">o2 = temp;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swap1</span><span class="params">(Balloon o1, Balloon o2)</span> </span>{</span><br><span class="line">String temp = o1.getColor();</span><br><span class="line">o1.setColor(o2.getColor());</span><br><span class="line">o2.setColor(temp);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7D50;&#x679C;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//&#x4F7F;&#x7528;swap()</span><br><span class="line">red color=Red</span><br><span class="line">blue color=Blue</span><br><span class="line">blue color=Red</span><br><span class="line"></span><br><span class="line">//&#x4F7F;&#x7528;swap1()</span><br><span class="line">red color=Blue</span><br><span class="line">blue color=Red</span><br><span class="line">blue color=Red</span><br></pre></td></tr></table></figure></p><p>&#x5206;&#x6790;&#xFF1A;</p><ol><li>&#x5C1A;&#x672A;&#x57F7;&#x884C;swap()&#xFF1A;<img src="/2016/12/09/Java-Java-is-Pass-by-Value-and-Not-Pass-by-Reference/Untitled-7--1.png" alt=""></li><li>&#x57F7;&#x884C;swap()&#xFF0C;o1&#x6307;&#x5411;red&#xFF0C;o2&#x6307;&#x5411;blue&#xFF1A;<img src="/2016/12/09/Java-Java-is-Pass-by-Value-and-Not-Pass-by-Reference/Untitled-1---1--1.png" alt=""></li><li>swap()&#x57F7;&#x884C;&#x7D50;&#x675F;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x7269;&#x4EF6;&#x4E26;&#x6C92;&#x6709;&#x4E92;&#x76F8;&#x4EA4;&#x63DB;&#xFF1A;<img src="/2016/12/09/Java-Java-is-Pass-by-Value-and-Not-Pass-by-Reference/Untitled-2--1.png" alt=""></li><li>&#x57F7;&#x884C;foo()&#xFF0C;ballon&#x6307;&#x5411;blue&#xFF1A;<img src="/2016/12/09/Java-Java-is-Pass-by-Value-and-Not-Pass-by-Reference/Untitled-3--1.png" alt=""></li><li>&#x57F7;&#x884C;foo()&#x7B2C;&#x4E00;&#x884C;&#xFF0C;&#x900F;&#x904E;&#x539F;&#x672C;&#x7269;&#x4EF6;&#x7684;setter method&#x4FEE;&#x6539;&#x503C;&#xFF1A;<img src="/2016/12/09/Java-Java-is-Pass-by-Value-and-Not-Pass-by-Reference/Untitled-4--1.png" alt=""></li><li>&#x57F7;&#x884C;foo()&#x7B2C;&#x4E8C;&#x884C;&#xFF1A;<img src="/2016/12/09/Java-Java-is-Pass-by-Value-and-Not-Pass-by-Reference/Untitled-5--2.png" alt=""></li><li>&#x57F7;&#x884C;foo()&#x7B2C;&#x4E09;&#x884C;&#xFF1A;<img src="/2016/12/09/Java-Java-is-Pass-by-Value-and-Not-Pass-by-Reference/Untitled-6--2.png" alt=""></li></ol><p>&#x56E0;&#x70BA;Java&#x662F;&#x63A1;&#x7528;pass by value&#x4F5C;&#x6CD5;&#xFF0C;&#x7576;&#x4EE5;&#x7269;&#x4EF6;&#x4F5C;&#x70BA;&#x53C3;&#x6578;&#x50B3;&#x5165;&#x5230;method&#xFF0C;&#x5728;method&#x88E1;&#x9762;&#x60F3;&#x8981;&#x4FEE;&#x6539;&#x7269;&#x4EF6;&#x7684;&#x503C;&#xFF0C;&#x9700;&#x900F;&#x904E;&#x7269;&#x4EF6;&#x7684;setter method&#xFF0C;&#x9019;&#x6A23;&#x539F;&#x672C;&#x7269;&#x4EF6;&#x7684;&#x503C;&#x624D;&#x6703;&#x9023;&#x5E36;&#x4E00;&#x8D77;&#x8B8A;&#x66F4;&#x3002;&#x900F;&#x904E;assign(=)&#x6216;new&#x7B49;&#x65B9;&#x5F0F;&#xFF0C;&#x539F;&#x672C;&#x7269;&#x4EF6;&#x7684;&#x503C;&#x90FD;&#x4E0D;&#x6703;&#x6709;&#x8B8A;&#x5316;&#x3002;</p><h3 id="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</h3><ul><li><a href="http://www.journaldev.com/3884/java-is-pass-by-value-and-not-pass-by-reference" target="_blank" rel="noopener">Java is Pass by Value and Not Pass by Reference</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Java&amp;#x5230;&amp;#x5E95;&amp;#x662F;pass by value&amp;#x9084;&amp;#x662F;pass by reference&amp;#xFF1F;&amp;#x8AAA;&amp;#x6CD5;&amp;#x773E;&amp;#x8AAA;&amp;#x7D1B;&amp;#x7D1C;&amp;#xFF0C
      
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>[Java]  Java String Pool</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-Java-String-Pool/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-Java-String-Pool/</id>
    <published>2016-12-09T10:57:57.000Z</published>
    <updated>2016-12-13T07:25:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5047;&#x5982;&#x6C92;&#x6709;string pool&#x9019;&#x6A23;&#x7684;&#x6A5F;&#x5236;&#xFF0C;&#x9047;&#x5230;string&#x5C31;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x9019;&#x6A23;&#x8A18;&#x61B6;&#x9AD4;&#x5C31;&#x5F88;&#x5FEB;&#x5C31;&#x6703;&#x7206;&#x6389;&#x4E86;&#x3002;</p><p>&#x5728;java&#x4E2D;&#x63A1;&#x53D6;<a href="http://en.wikipedia.org/wiki/Flyweight_pattern" target="_blank" rel="noopener">Flyweight pattern</a>&#x4F5C;&#x6CD5;&#xFF0C;&#x53EF;&#x4EE5;&#x5171;&#x4EAB;&#x540C;&#x6A23;&#x7684;string object&#x3002;</p><p><img src="http://www.journaldev.com/wp-content/uploads/2012/11/String-Pool-Java1.png" alt=""></p><p>&#x5EFA;&#x7ACB;string object&#x6709;&#x5169;&#x7A2E;&#x65B9;&#x5F0F;&#xFF1A;</p><ol><li>String string = &#x201C;Cat&#x201D;;</li><li>String string = new String(&#x201C;Cat&#x201D;);</li></ol><p>&#x63A1;&#x7528;&#x7B2C;&#x4E00;&#x7A2E;&#x65B9;&#x6CD5;&#xFF0C;&#x6703;&#x5148;&#x6AA2;&#x67E5;string pool&#x662F;&#x5426;&#x6709;&#x76F8;&#x540C;&#x7684;string&#x3002;&#x82E5;&#x6709;&#x5C31;&#x5171;&#x7528;&#xFF0C;&#x6C92;&#x6709;&#x5247;&#x5EFA;&#x7ACB;&#x4E4B;&#x3002;</p><p>&#x63A1;&#x7528;&#x7B2C;&#x4E8C;&#x7A2E;&#x65B9;&#x6CD5;&#xFE50;&#x4E0D;&#x6703;&#x4F7F;&#x7528;&#x5230;string pool&#x6A5F;&#x5236;&#xFF0C;&#x800C;&#x662F;&#x5728;heap&#x5EFA;&#x7ACB;&#x4E00;&#x500B;&#x65B0;&#x7684;string object&#x3002;&#x82E5;&#x4E4B;&#x5F8C;&#x60F3;&#x8981;&#x4F7F;&#x7528;string pool&#x6A5F;&#x5236;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#intern%28%29" target="_blank" rel="noopener">intern</a>&#x3002;</p><h3 id="&#x7BC4;&#x4F8B;&#xFF1A;"><a href="#&#x7BC4;&#x4F8B;&#xFF1A;" class="headerlink" title="&#x7BC4;&#x4F8B;&#xFF1A;"></a>&#x7BC4;&#x4F8B;&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringExample</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>{</span><br><span class="line">String s1 = <span class="string">&quot;Cat&quot;</span>;</span><br><span class="line">String s2 = <span class="string">&quot;Cat&quot;</span>;</span><br><span class="line">String s3 = <span class="keyword">new</span> String(<span class="string">&quot;Cat&quot;</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;s1 == s2 ?&quot;</span> + (s1 == s2));</span><br><span class="line">System.out.println(<span class="string">&quot;s1 == s3 ?&quot;</span> + (s1 == s3));</span><br><span class="line">System.out.println(<span class="string">&quot;s1 == s3.intern() ?&quot;</span> + (s1 == s3.intern()));</span><br><span class="line">System.out.println(<span class="string">&quot;s1 equals s3 ?&quot;</span> + s1.equals(s3));</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7D50;&#x679C;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s1 == s2 ?true</span><br><span class="line">s1 == s3 ?false</span><br><span class="line">s1 == s3.intern() ?true</span><br><span class="line">s1 equals s3 ?true</span><br></pre></td></tr></table></figure></p><h3 id="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</h3><ul><li><a href="http://www.journaldev.com/797/what-is-java-string-pool" target="_blank" rel="noopener">What is Java String Pool?</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;#x5047;&amp;#x5982;&amp;#x6C92;&amp;#x6709;string pool&amp;#x9019;&amp;#x6A23;&amp;#x7684;&amp;#x6A5F;&amp;#x5236;&amp;#xFF0C;&amp;#x9047;&amp;#x5230;string&amp;#x5C31;&amp;#x5EFA;&amp;#x7ACB;
      
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>[SQL] How to get rank using ANSI SQL</title>
    <link href="https://pandaforme.github.io/2016/12/09/SQL-How-to-get-rank-using-ANSI-SQL/"/>
    <id>https://pandaforme.github.io/2016/12/09/SQL-How-to-get-rank-using-ANSI-SQL/</id>
    <published>2016-12-09T10:57:02.000Z</published>
    <updated>2016-12-13T07:16:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x8981;&#x5C0D;&#x5206;&#x6578;&#x505A;&#x6392;&#x540D;&#xFF0C;&#x6700;&#x76F4;&#x63A5;&#x7684;&#x60F3;&#x6CD5;&#x5C31;&#x5C0D;&#x5B83;&#x5011;&#x505A;ORDER BY&#x3002;&#x4F46;&#x662F;&#x7576;&#x5206;&#x6578;&#x6709;&#x91CD;&#x8907;&#x6642;&#x5019;&#x6392;&#x540D;&#x662F;&#x8981;&#x4E00;&#x6A23;&#xFF0C;&#x9019;&#x6642;&#x5019;ORDER BY&#x5C31;&#x767C;&#x63EE;&#x4E0D;&#x4E86;&#x4F5C;&#x7528;&#x3002;</p><p>&#x4E0D;&#x540C;&#x7684;&#x5EE0;&#x5546;&#x7684;&#x8CC7;&#x6599;&#x5EAB;&#x6709;&#x63D0;&#x4F9B;&#x4E0D;&#x540C;&#x7684;&#x51FD;&#x6578;&#x53EF;&#x4EE5;&#x89E3;&#x6C7A;&#x9019;&#x500B;&#x554F;&#x984C;&#xFF0C;&#x5047;&#x5982;&#x6C92;&#x6709;&#x4F7F;&#x7528;&#x51FD;&#x6578;&#x8A72;&#x5982;&#x4F55;&#x505A;&#x5230;&#x5462;?</p><h4 id="&#x5EFA;&#x7ACB;&#x8CC7;&#x6599;&#x8868;&#xFF1A;"><a href="#&#x5EFA;&#x7ACB;&#x8CC7;&#x6599;&#x8868;&#xFF1A;" class="headerlink" title="&#x5EFA;&#x7ACB;&#x8CC7;&#x6599;&#x8868;&#xFF1A;"></a>&#x5EFA;&#x7ACB;&#x8CC7;&#x6599;&#x8868;&#xFF1A;</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`golf`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">45</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`score`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="&#x65B0;&#x589E;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x65B0;&#x589E;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x65B0;&#x589E;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x65B0;&#x589E;&#x8CC7;&#x6599;&#xFF1A;</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`golf`</span>(<span class="string">`name`</span>,<span class="string">`score`</span>) <span class="keyword">VALUES</span> (A,<span class="number">74</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`golf`</span>(<span class="string">`name`</span>,<span class="string">`score`</span>) <span class="keyword">VALUES</span> (B,<span class="number">79</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`golf`</span>(<span class="string">`name`</span>,<span class="string">`score`</span>) <span class="keyword">VALUES</span> (C,<span class="number">79</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`golf`</span>(<span class="string">`name`</span>,<span class="string">`score`</span>) <span class="keyword">VALUES</span> (D,<span class="number">82</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`golf`</span>(<span class="string">`name`</span>,<span class="string">`score`</span>) <span class="keyword">VALUES</span> (E,<span class="number">89</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`golf`</span>(<span class="string">`name`</span>,<span class="string">`score`</span>) <span class="keyword">VALUES</span> (F,<span class="number">89</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`golf`</span>(<span class="string">`name`</span>,<span class="string">`score`</span>) <span class="keyword">VALUES</span> (G,<span class="number">98</span>);</span><br></pre></td></tr></table></figure><h4 id="&#x67E5;&#x8A62;&#xFF1A;"><a href="#&#x67E5;&#x8A62;&#xFF1A;" class="headerlink" title="&#x67E5;&#x8A62;&#xFF1A;"></a>&#x67E5;&#x8A62;&#xFF1A;</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    tmp.name,</span><br><span class="line">    tmp.score,</span><br><span class="line">    (<span class="keyword">SELECT</span> </span><br><span class="line">            <span class="keyword">COUNT</span>(*) + <span class="number">1</span></span><br><span class="line">        <span class="keyword">FROM</span></span><br><span class="line">            (<span class="keyword">SELECT</span> </span><br><span class="line">                golf.score</span><br><span class="line">            <span class="keyword">FROM</span></span><br><span class="line">                golf</span><br><span class="line">            <span class="keyword">GROUP</span> <span class="keyword">BY</span> golf.score) <span class="keyword">AS</span> tmp1</span><br><span class="line">        <span class="keyword">WHERE</span></span><br><span class="line">            tmp1.score &gt; tmp.score) <span class="keyword">AS</span> <span class="keyword">rank</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    golf <span class="keyword">AS</span> tmp</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> tmp.score <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h4 id="&#x7D50;&#x679C;&#xFF1A;"><a href="#&#x7D50;&#x679C;&#xFF1A;" class="headerlink" title="&#x7D50;&#x679C;&#xFF1A;"></a>&#x7D50;&#x679C;&#xFF1A;</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">namescorerank</span><br><span class="line">G981</span><br><span class="line">E892</span><br><span class="line">F892</span><br><span class="line">D823</span><br><span class="line">B794</span><br><span class="line">C794</span><br><span class="line">A745</span><br></pre></td></tr></table></figure><h4 id="&#x60F3;&#x6CD5;&#xFF1A;"><a href="#&#x60F3;&#x6CD5;&#xFF1A;" class="headerlink" title="&#x60F3;&#x6CD5;&#xFF1A;"></a>&#x60F3;&#x6CD5;&#xFF1A;</h4><p>&#x5148;&#x5F9E;&#x6392;&#x540D;&#x9019;&#x500B;&#x6982;&#x5FF5;&#x4E0B;&#x624B;&#xFF0C;&#x5047;&#x5982;&#x6709;&#x4E09;&#x500B;&#x4EBA;&#x7684;&#x5206;&#x6578;(&#x9019;&#x4E09;&#x4EBA;&#x5206;&#x6578;&#x90FD;&#x4E0D;&#x4E00;&#x6A23;)&#x5927;&#x65BC;&#x6211;&#x7684;&#x5206;&#x6578;&#xFF0C;&#x90A3;&#x9EBC;&#x6211;&#x5C31;&#x662F;&#x6392;&#x540D;&#x7B2C;&#x56DB;&#x3002;&#x56E0;&#x70BA;&#x5206;&#x6578;&#x91CD;&#x8907;&#x7684;&#x6392;&#x540D;&#x662F;&#x4E00;&#x6A23;&#x7684;&#xFF0C;&#x9700;&#x8981;&#x5148;&#x5C0D;&#x5206;&#x6578;&#x505A;&#x4E00;&#x6B21;GROUP BY&#xFF0C;&#x518D;&#x6839;&#x64DA;&#x4E0A;&#x8FF0;&#x7684;&#x6982;&#x5FF5;&#x53BB;&#x7B97;&#x51FA;&#x6392;&#x540D;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;#x8981;&amp;#x5C0D;&amp;#x5206;&amp;#x6578;&amp;#x505A;&amp;#x6392;&amp;#x540D;&amp;#xFF0C;&amp;#x6700;&amp;#x76F4;&amp;#x63A5;&amp;#x7684;&amp;#x60F3;&amp;#x6CD5;&amp;#x5C31;&amp;#x5C0D;&amp;#x5B83;&amp;
      
    
    </summary>
    
      <category term="SQL" scheme="https://pandaforme.github.io/categories/SQL/"/>
    
    
      <category term="SQL" scheme="https://pandaforme.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>[Java] Synchronize in Java</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-Synchronize-in-Java/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-Synchronize-in-Java/</id>
    <published>2016-12-09T09:31:00.000Z</published>
    <updated>2018-05-09T00:04:30.290Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5728;&#x4E86;&#x89E3;Java&#x7684;synchronized&#x6A5F;&#x5236;&#x4E4B;&#x524D;&#xFF0C;&#x5148;&#x4F86;&#x8907;&#x7FD2;&#x4E00;&#x4E0B;Monitor&#x3002;</p><p>&#x53EF;&#x4EE5;&#x628A;Monitor&#x60F3;&#x50CF;&#x6210;&#x5B83;&#x5C31;&#x662F;&#x4E00;&#x500B;&#x985E;&#x5225;&#xFF0C;&#x88E1;&#x9762;&#x5B58;&#x653E;&#x8457;&#x5171;&#x4EAB;&#x8B8A;&#x6578;&#x3001;&#x65B9;&#x6CD5;&#x548C;&#x5EFA;&#x69CB;&#x5B50;&#x3002;<br><img src="/2016/12/09/Java-Synchronize-in-Java/Monitor.png" alt="Monitor"><br>Monitor&#x6703;&#x78BA;&#x4FDD;&#x53EA;&#x6709;&#x4E00;&#x500B;Process&#x53EF;&#x4EE5;&#x9032;&#x5165;&#xFF0C;&#x5176;&#x4ED6;&#x4E5F;&#x60F3;&#x8981;&#x9032;&#x5165;&#x7684;Process&#xFF0C;&#x5C31;&#x5FC5;&#x9808;&#x5728;queue&#x88E1;&#x9762;&#x7B49;&#x5F85;&#x3002;&#x7A0B;&#x5F0F;&#x8A2D;&#x8A08;&#x5E2B;&#x53EF;&#x4EE5;&#x6839;&#x64DA;&#x4E0D;&#x540C;&#x7684;&#x60C5;&#x6CC1;&#xFF0C;&#x6C7A;&#x5B9A;&#x662F;&#x5426;&#x8981;&#x8B93;&#x6B63;&#x5728;Monitor&#x7684;Process&#x9032;&#x5165;waiting state&#x6216;&#x662F;&#x559A;&#x9192;&#x5176;&#x4ED6;&#x5728;waiting state&#x7684;Process&#x3002;</p><p>&#x4F8B;&#x5982;&#xFF1A;&#x7576;&#x67D0;&#x500B;Process&#x53D6;&#x5F97;Monitor&#x7684;&#x57F7;&#x884C;&#x6B0A;&#x5229;&#xFF0C;&#x5728;&#x57F7;&#x884C;&#x904E;&#x7A0B;&#x4E2D;&#x767C;&#x73FE;&#x4E0D;&#x7B26;&#x5408;x&#x60C5;&#x6CC1;&#xFF0C;&#x5FC5;&#x9808;&#x9032;&#x5165;waiting state&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;x.wait()&#x3002;&#x60F3;&#x8981;&#x559A;&#x9192;x queue&#x4E2D;&#x7684;waiting Process&#xFF0C;&#x53EF;&#x4EE5;&#x900F;&#x904E;x.signal()&#x3002;&#x8A73;&#x7D30;&#x53EF;&#x4EE5;&#x53C3;&#x8003;<a href="http://www.amazon.com/Operating-System-Concepts-Abraham-Silberschatz/dp/1118063333/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1409112396&amp;sr=1-1&amp;keywords=Operating+System+Concepts" target="_blank" rel="noopener">Operating System Concepts</a>&#x3002;</p><p>Java&#x7684;synchronized&#x5C31;&#x662F;&#x5BE6;&#x4F5C;&#x4E86;Monitor&#xFF0C;Object&#x7684;wait()&#x548C;notify()&#x5C31;&#x76F8;&#x7576;&#x65BC;wait()&#x548C;signal()&#x3002;&#x6709;&#x4E86;&#x9019;&#x6A23;&#x7684;&#x6982;&#x5FF5;&#x5F8C;&#xFF0C;&#x5728;&#x4F7F;&#x7528;synchronized&#x5C31;&#x6BD4;&#x8F03;&#x4E0D;&#x6703;&#x767C;&#x751F;&#x9396;&#x932F;&#x5C0D;&#x8C61;&#x7684;&#x554F;&#x984C;&#x3002;</p><p>synchronized&#x4F7F;&#x7528;&#x65B9;&#x5F0F;&#x53EF;&#x4EE5;&#x5206;&#x70BA;&#x5169;&#x7A2E;&#xFF1A;</p><ol><li>synchronized method </li><li>synchronized block</li></ol><h1 id="&#x7BC4;&#x4F8B;"><a href="#&#x7BC4;&#x4F8B;" class="headerlink" title="&#x7BC4;&#x4F8B;"></a>&#x7BC4;&#x4F8B;</h1><p>TargetObject.java&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TargetObject</span> </span>{</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>count= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span> </span>{</span><br><span class="line">count++;</span><br><span class="line">System.out.println(Thread.currentThread().getName() + <span class="string">&quot; in method1 and count = &quot;</span> + count);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method2</span><span class="params">()</span> </span>{</span><br><span class="line">count++;</span><br><span class="line">System.out.println(Thread.currentThread().getName() + <span class="string">&quot; in method2 and count = &quot;</span> + count);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">staticMethod1</span><span class="params">()</span> </span>{</span><br><span class="line">count++;</span><br><span class="line">System.out.println(Thread.currentThread().getName() + <span class="string">&quot; in static method1 and count = &quot;</span> + count);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">staticMethod2</span><span class="params">()</span> </span>{</span><br><span class="line">count++;</span><br><span class="line">System.out.println(Thread.currentThread().getName() + <span class="string">&quot; in static method2 and count = &quot;</span> + count);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>Thread1.java&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Thread1</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>{</span><br><span class="line"><span class="keyword">private</span> TargetObjecttargetObject;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Thread1</span><span class="params">(TargetObject targetObject)</span> </span>{</span><br><span class="line"><span class="keyword">this</span>.targetObject = targetObject;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) {</span><br><span class="line"><span class="keyword">this</span>.targetObject.method1();</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">catch</span> (InterruptedException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>Thread2.java&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Thread2</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>{</span><br><span class="line"><span class="keyword">private</span> TargetObjecttargetObject;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Thread1</span><span class="params">(TargetObject targetObject)</span> </span>{</span><br><span class="line"><span class="keyword">this</span>.targetObject = targetObject;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) {</span><br><span class="line"><span class="keyword">this</span>.targetObject.method2();</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">catch</span> (InterruptedException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>Run.java&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Run</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">TargetObjecttargetObject= <span class="keyword">new</span> TargetObject();</span><br><span class="line">Thread thread1 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Thread1(targetObject), <span class="string">&quot;Thread1&quot;</span>);</span><br><span class="line">Thread thread2 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Thread2(targetObject), <span class="string">&quot;Thread2&quot;</span>);</span><br><span class="line">thread1.start();</span><br><span class="line">thread2.start();</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>&#x57F7;&#x884C;&#x7D50;&#x679C;&#xFF1A;&#x6C92;&#x6709;&#x505A;&#x540C;&#x6B65;&#x8655;&#x7406;&#xFF0C;&#x6703;&#x5B58;&#x5728;race condition&#x3002;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Thread1 in method1 and count = <span class="number">2</span></span><br><span class="line">Thread2 in method2 and count = <span class="number">2</span></span><br><span class="line">Thread2 in method2 and count = <span class="number">3</span></span><br><span class="line">Thread1 in method1 and count = <span class="number">4</span></span><br><span class="line">Thread2 in method2 and count = <span class="number">5</span></span><br><span class="line">Thread2 in method2 and count = <span class="number">6</span></span><br></pre></td></tr></table></figure></p><hr><h1 id="synchronized-method"><a href="#synchronized-method" class="headerlink" title="synchronized method"></a>synchronized method</h1><p>&#x5728;TargetObject.java&#x4E2D;&#x7684;method1&#x548C;method2&#x52A0;&#x4E0A; <code>synchronized</code> &#x5C31;&#x53EF;&#x4EE5;&#x9396;&#x5B9A;&#x7531;TargetObject&#x985E;&#x5225;&#x6240;&#x5BE6;&#x9AD4;&#x5316;&#x7684;&#x7269;&#x4EF6;targetObject&#x3002;</p><p>TargetObject.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TargetObject</span> </span>{</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>count= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span> </span>{</span><br><span class="line">count++;</span><br><span class="line">System.out.println(Thread.currentThread().getName() + <span class="string">&quot; in method1 and count = &quot;</span> + count);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">method2</span><span class="params">()</span> </span>{</span><br><span class="line">count++;</span><br><span class="line">System.out.println(Thread.currentThread().getName() + <span class="string">&quot; in method2 and count = &quot;</span> + count);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">staticMethod1</span><span class="params">()</span> </span>{</span><br><span class="line">count++;</span><br><span class="line">System.out.println(Thread.currentThread().getName() + <span class="string">&quot; in static method1 and count = &quot;</span> + count);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">staticMethod2</span><span class="params">()</span> </span>{</span><br><span class="line">count++;</span><br><span class="line">System.out.println(Thread.currentThread().getName() + <span class="string">&quot; in static method2 and count = &quot;</span> + count);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>&#x57F7;&#x884C;&#x7D50;&#x679C;&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Thread1 in method1 and count = <span class="number">1</span></span><br><span class="line">Thread2 in method2 and count = <span class="number">2</span></span><br><span class="line">Thread2 in method2 and count = <span class="number">3</span></span><br><span class="line">Thread1 in method1 and count = <span class="number">4</span></span><br><span class="line">Thread2 in method2 and count = <span class="number">5</span></span><br><span class="line">Thread2 in method2 and count = <span class="number">6</span></span><br><span class="line">Thread1 in method1 and count = <span class="number">7</span></span><br><span class="line">Thread2 in method2 and count = <span class="number">8</span></span><br><span class="line">Thread2 in method2 and count = <span class="number">9</span></span><br></pre></td></tr></table></figure></p><hr><p>&#x70BA;&#x4E86;&#x66F4;&#x6E05;&#x695A;&#x4E86;&#x89E3;&#x9396;&#x5B9A;&#x7684;&#x5C0D;&#x8C61;&#xFF0C;&#x73FE;&#x5728;&#x5148; <strong>&#x79FB;&#x9664;</strong> method1&#x7684;synchronized&#xFF0C;&#x5C07;&#x540C;&#x6B65;&#x6A5F;&#x5236;&#x79FB;&#x5230;Thread1.java&#x3002;</p><p>Thread1.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Thread1</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>{</span><br><span class="line"><span class="keyword">private</span> TargetObjecttargetObject;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Thread1</span><span class="params">(TargetObject targetObject)</span> </span>{</span><br><span class="line"><span class="keyword">this</span>.targetObject = targetObject;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) {</span><br><span class="line"><span class="keyword">synchronized</span> (targetObject) {</span><br><span class="line"><span class="keyword">this</span>.targetObject.method1();</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">catch</span> (InterruptedException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>&#x57F7;&#x884C;&#x7D50;&#x679C;&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Thread1 in method1 and count = <span class="number">1</span></span><br><span class="line">Thread2 in method2 and count = <span class="number">2</span></span><br><span class="line">Thread2 in method2 and count = <span class="number">3</span></span><br><span class="line">Thread1 in method1 and count = <span class="number">4</span></span><br><span class="line">Thread2 in method2 and count = <span class="number">5</span></span><br><span class="line">Thread2 in method2 and count = <span class="number">6</span></span><br><span class="line">Thread1 in method1 and count = <span class="number">7</span></span><br><span class="line">Thread2 in method2 and count = <span class="number">8</span></span><br><span class="line">Thread2 in method2 and count = <span class="number">9</span></span><br></pre></td></tr></table></figure></p><p>&#x5F9E;&#x57F7;&#x884C;&#x7D50;&#x679C;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x4E0A;&#x9396;&#x7684;&#x5C0D;&#x8C61;&#x662F;&#x5728;Run.java&#x4E2D;&#x5BE6;&#x9AD4;&#x5316;&#x7684; <strong>targetObject</strong>&#x3002;</p><hr><p>&#x82E5;&#x5C07;</p><ul><li>Thread1.java&#x4E2D;&#x7684; <code>this.targetObject.method1()</code> &#x6539;&#x6210; <code>TargetObject.staticMethod1()</code>&#x3002;</li><li>Thread2.java&#x4E2D;&#x7684; <code>this.targetObject.method2()</code> &#x6539;&#x6210; <code>TargetObject.staticMethod2()</code>&#x3002;</li></ul><p>&#x5FC5;&#x9808;&#x5C0D;TargetObject&#x7684;staticMethod1&#x548C;staticMethod2&#x505A; <code>synchronized</code> &#x3002;<br>&#x900F;&#x904E;&#x4E0A;&#x8FF0;&#x7684;&#x65B9;&#x5F0F;&#x53EF;&#x4EE5;&#x77E5;&#x9053;synchronized static method&#x662F;&#x9396;&#x5B9A; <code>TargetObject.class</code>&#x3002;</p><hr><h1 id="synchronized-block"><a href="#synchronized-block" class="headerlink" title="synchronized block"></a>synchronized block</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">synchronized</span>(&#x60F3;&#x8981;&#x9396;&#x5B9A;&#x7684;&#x7269;&#x4EF6;&#x6216;&#x662F;<span class="class"><span class="keyword">class</span> <span class="title">literal</span>)</span>{</span><br><span class="line">  <span class="comment">//do something</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>synchronized block&#x8F03;&#x6709;&#x5F48;&#x6027;&#xFF0C;&#x53EF;&#x4EE5;&#x9078;&#x64C7;&#x9396;&#x5B9A;&#x7684;&#x5C0D;&#x8C61;&#x3002;<br>Thread1.java&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Thread1</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>{</span><br><span class="line"><span class="keyword">private</span> TargetObjecttargetObject;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">byte</span>[]lock;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Thread1</span><span class="params">(TargetObject targetObject, <span class="keyword">byte</span>[] lock)</span> </span>{</span><br><span class="line"><span class="keyword">this</span>.targetObject = targetObject;</span><br><span class="line"><span class="keyword">this</span>.lock = lock;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) {</span><br><span class="line"><span class="keyword">synchronized</span> (<span class="keyword">this</span>.lock) {</span><br><span class="line"><span class="keyword">this</span>.targetObject.method1();</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">catch</span> (InterruptedException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>Thread2.java&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Thread2</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>{</span><br><span class="line"><span class="keyword">private</span> TargetObjecttargetObject;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">byte</span>[]lock;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Thread2</span><span class="params">(TargetObject targetObject, <span class="keyword">byte</span>[] lock)</span> </span>{</span><br><span class="line"><span class="keyword">this</span>.targetObject = targetObject;</span><br><span class="line"><span class="keyword">this</span>.lock = lock;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) {</span><br><span class="line"><span class="keyword">synchronized</span> (<span class="keyword">this</span>.lock) {</span><br><span class="line"><span class="keyword">this</span>.targetObject.method2();</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">catch</span> (InterruptedException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>Run.java&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Run</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">TargetObject targetObject = <span class="keyword">new</span> TargetObject();</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">byte</span>[] lock = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">0</span>];</span><br><span class="line">Thread thread1 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Thread1(targetObject, lock), <span class="string">&quot;Thread1&quot;</span>);</span><br><span class="line">Thread thread2 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Thread2(targetObject, lock), <span class="string">&quot;Thread2&quot;</span>);</span><br><span class="line">thread1.start();</span><br><span class="line">thread2.start();</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>&#x5728;&#x4F7F;&#x7528;synchronized&#x7684;&#x6642;&#x5019;&#xFF0C;&#x52D9;&#x5FC5;&#x8981;&#x641E;&#x6E05;&#x695A;&#x9396;&#x5B9A;&#x7684;&#x5C0D;&#x8C61;&#xFF0C;&#x6C92;&#x6709;&#x641E;&#x6E05;&#x695A;&#x53CD;&#x800C;&#x7B49;&#x540C;&#x65BC;&#x6C92;&#x6709;&#x540C;&#x6B65;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;#x5728;&amp;#x4E86;&amp;#x89E3;Java&amp;#x7684;synchronized&amp;#x6A5F;&amp;#x5236;&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x5148;&amp;#x4F86;&amp;#x8907;&amp;#x7FD2;&amp;#x4E00;&amp;#x4E0B;M
      
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>[SQL] 5 types of SQL JOIN</title>
    <link href="https://pandaforme.github.io/2016/12/09/SQL-5-types-of-SQL-JOIN/"/>
    <id>https://pandaforme.github.io/2016/12/09/SQL-5-types-of-SQL-JOIN/</id>
    <published>2016-12-09T09:30:08.000Z</published>
    <updated>2016-12-13T07:16:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>ANSI-standard SQL&#x6709;&#x4E94;&#x7A2E;JOIN&#xFF1A;</p><ol><li>INNER JOIN</li><li>LEFT OUTER JOIN</li><li>RIGHT OUTER JOIN</li><li>FULL OUTER JOIN</li><li>CROSS JOIN</li></ol><p><a href="http://blog.codinghorror.com/a-visual-explanation-of-sql-joins/" target="_blank" rel="noopener">A Visual Explanation of SQL Joins</a>&#x7528;<a href="http://en.wikipedia.org/wiki/Venn_diagram" target="_blank" rel="noopener">Venn diagrams</a>&#x65B9;&#x5F0F;&#x5716;&#x89E3;JOIN&#x3002;</p><h3 id="&#x7BC4;&#x4F8B;&#xFF1A;"><a href="#&#x7BC4;&#x4F8B;&#xFF1A;" class="headerlink" title="&#x7BC4;&#x4F8B;&#xFF1A;"></a>&#x7BC4;&#x4F8B;&#xFF1A;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TableA        TableB</span><br><span class="line">id name       id  name</span><br><span class="line">-- ----       --  ----</span><br><span class="line">1  Pirate     1   Rutabaga</span><br><span class="line">2  Monkey     2   Pirate</span><br><span class="line">3  Ninja      3   Darth Vader</span><br><span class="line">4  Spaghetti  4   Ninja</span><br></pre></td></tr></table></figure><ul><li>INNER JOIN&#xFF1A;</li></ul><p>SQL&#xFF1A;<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TableA</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> TableB</span><br><span class="line"><span class="keyword">ON</span> TableA.name = TableB.name</span><br></pre></td></tr></table></figure></p><p>&#x7D50;&#x679C;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TableA         TableB</span><br><span class="line">id  name       id   name</span><br><span class="line">--  ----       --   ----</span><br><span class="line">1   Pirate     2    Pirate</span><br><span class="line">3   Ninja      4    Ninja</span><br></pre></td></tr></table></figure></p><p>Venn diagram&#xFF1A;<br><img src="http://blog.codinghorror.com/content/images/uploads/2007/10/6a0120a85dcdae970b012877702708970c-pi.png" alt=""></p><p><em>&#x5217;&#x51FA;&#x5169;&#x500B;Table&#x5171;&#x6709;&#x7684;&#x8CC7;&#x6599;&#xFF0C;&#x5373;&#x5169;&#x500B;Table&#x7684;&#x4EA4;&#x96C6;&#x3002;</em></p><hr><ul><li>LEFT OUTER JOIN&#xFF1A;</li></ul><p>SQL&#xFF1A;<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TableA</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> TableB</span><br><span class="line"><span class="keyword">ON</span> TableA.name = TableB.name</span><br></pre></td></tr></table></figure></p><p>&#x7D50;&#x679C;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TableA         TableB</span><br><span class="line">id  name       id    name</span><br><span class="line">--  ----       --    ----</span><br><span class="line">1   Pirate     2     Pirate</span><br><span class="line">2   Monkey     null  null</span><br><span class="line">3   Ninja      4     Ninja</span><br><span class="line">4   Spaghetti  null  null</span><br></pre></td></tr></table></figure></p><p>Venn diagram&#xFF1A;<br><img src="http://blog.codinghorror.com/content/images/uploads/2007/10/6a0120a85dcdae970b01287770273e970c-pi.png" alt=""><br><em>&#x4EE5;&#x5DE6;&#x908A;Table&#x70BA;&#x4E3B;&#xFF0C;&#x82E5;&#x6C92;&#x6709;&#x914D;&#x5C0D;&#x5230;&#x8CC7;&#x6599;&#xFF0C;&#x986F;&#x793A;null&#x3002;</em></p><hr><ul><li>RIGHT OUTER JOIN&#xFF1A;</li></ul><p>&#x8DDF;LEFT OUTER JOIN&#x5927;&#x540C;&#x5C0F;&#x7570;&#xFF0C;&#x7D50;&#x679C;&#x6539;&#x6210;&#x4EE5;Table B&#x70BA;&#x4E3B;&#xFF0C;&#x4E0D;&#x518D;&#x8D05;&#x8FF0;&#x3002;</p><hr><ul><li>FULL OUTER JOIN&#xFF1A;</li></ul><p>SQL&#xFF1A;<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TableA</span><br><span class="line"><span class="keyword">FULL</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> TableB</span><br><span class="line"><span class="keyword">ON</span> TableA.name = TableB.name</span><br></pre></td></tr></table></figure></p><p>&#x7D50;&#x679C;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">TableA           TableB</span><br><span class="line">id    name       id    name</span><br><span class="line">--    ----       --    ----</span><br><span class="line">1     Pirate     2     Pirate</span><br><span class="line">2     Monkey     null  null</span><br><span class="line">3     Ninja      4     Ninja</span><br><span class="line">4     Spaghetti  null  null</span><br><span class="line">null  null       1     Rutabaga</span><br><span class="line">null  null       3     Darth Vader</span><br></pre></td></tr></table></figure></p><p>Venn diagram&#xFF1A;<br><img src="http://blog.codinghorror.com/content/images/uploads/2007/10/6a0120a85dcdae970b012877702725970c-pi.png" alt=""><br><em>&#x70BA;&#x5169;&#x500B;Table&#x7684;&#x806F;&#x96C6;&#xFF0C;&#x82E5;&#x6C92;&#x6709;&#x914D;&#x5C0D;&#x5230;&#x8CC7;&#x6599;&#x4EE5;null&#x986F;&#x793A;&#x3002;</em></p><hr><ul><li>CROSS JOIN&#xFF1A;<br>&#x5373;&#x662F;<a href="http://en.wikipedia.org/wiki/Cartesian_product" target="_blank" rel="noopener">Cartesian product</a>&#xFF0C;&#x6703;&#x7522;&#x751F;&#x5169;&#x500B;Table&#x6240;&#x6709;&#x7684;&#x7D44;&#x5408;&#x3002;<br>SQL&#xFF1A;<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TableA</span><br><span class="line"><span class="keyword">CROSS</span> <span class="keyword">JOIN</span> TableB</span><br></pre></td></tr></table></figure></li></ul><p>&#x7D50;&#x679C;&#xFF1A;<br>4*4 = 16&#x7A2E;&#x7D44;&#x5408;</p><p><em>&#x56E0;&#x70BA;CROSS JOIN&#x6703;&#x5C07;&#x6240;&#x6709;&#x7D44;&#x5408;&#x5217;&#x51FA;&#x4F86;&#xFF0C;&#x6240;&#x4EE5;&#x7576;&#x8CC7;&#x6599;&#x91CF;&#x9F90;&#x5927;&#x6642;&#x5019;&#xFF0C;&#x6548;&#x80FD;&#x6703;&#x8B8A;&#x5F97;&#x5F88;&#x5DEE;&#x3002;</em></p><h3 id="&#x7E3D;&#x7D50;&#xFF1A;"><a href="#&#x7E3D;&#x7D50;&#xFF1A;" class="headerlink" title="&#x7E3D;&#x7D50;&#xFF1A;"></a>&#x7E3D;&#x7D50;&#xFF1A;</h3><p>&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x4EE5;&#x4E0A;&#x7684;&#x4E94;&#x7A2E;JOIN&#x548C;&#x904E;&#x6FFE;&#x65B9;&#x5F0F;&#xFF0C;&#x5C0D;&#x5169;&#x500B;&#x96C6;&#x5408;&#x9032;&#x884C;&#x4EA4;&#x96C6;&#x3001;&#x806F;&#x96C6;&#x3001;&#x5DEE;&#x96C6;&#x7B49;&#x64CD;&#x4F5C;&#x3002;<br><img src="http://edwarcardona.files.wordpress.com/2013/03/sql_server_joins.jpg" alt="SQL JOINS"></p><h3 id="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</h3><ul><li><a href="http://blog.codinghorror.com/a-visual-explanation-of-sql-joins/" target="_blank" rel="noopener">A Visual Explanation of SQL Joins</a></li><li><a href="https://en.wikipedia.org/wiki/Join_(SQL" target="_blank" rel="noopener">Join (SQL)</a>)</li><li><a href="http://coolshell.cn/articles/3463.html" target="_blank" rel="noopener">&#x5716;&#x89E3;SQL&#x7684;Join</a>&#x3000;</li><li><a href="http://www.codeproject.com/Articles/33052/Visual-Representation-of-SQL-Joins" target="_blank" rel="noopener">Visual Representation of SQL Joins</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ANSI-standard SQL&amp;#x6709;&amp;#x4E94;&amp;#x7A2E;JOIN&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;INNER JOIN&lt;/li&gt;
&lt;li&gt;LEFT OUTER JOIN&lt;/li&gt;
&lt;li&gt;RIGHT OUTER JOIN&lt;/li&gt;
&lt;li
      
    
    </summary>
    
      <category term="SQL" scheme="https://pandaforme.github.io/categories/SQL/"/>
    
    
      <category term="SQL" scheme="https://pandaforme.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>The Law of Demeter</title>
    <link href="https://pandaforme.github.io/2016/12/09/The-Law-of-Demeter/"/>
    <id>https://pandaforme.github.io/2016/12/09/The-Law-of-Demeter/</id>
    <published>2016-12-09T09:27:16.000Z</published>
    <updated>2016-12-09T09:27:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x66F4;&#x8A73;&#x7D30;&#x7684;&#x8AAA;&#x6CD5;&#x662F;&#x201C;Law of Demeter for Functions/Methods&#x201D; (LoD-F)&#xFF0C;&#x7C21;&#x55AE;&#x5316;Object&#x4E4B;&#x9593;&#x7684;&#x4E92;&#x52D5;&#xFF0C;&#x8B93;&#x591A;&#x500B;Object&#x4E0D;&#x8981;&#x4E92;&#x76F8;&#x76F8;&#x4F9D;&#x3002;</p><h2 id="&#x5B9A;&#x7FA9;&#xFF1A;"><a href="#&#x5B9A;&#x7FA9;&#xFF1A;" class="headerlink" title="&#x5B9A;&#x7FA9;&#xFF1A;"></a>&#x5B9A;&#x7FA9;&#xFF1A;</h2><p>The Law of Demeter for functions requires that a method M of an object O may only invoke the methods of the following kinds of objects:</p><ol><li>O itself</li><li>M&#x2019;s parameters</li><li>Any objects created/instantiated within M</li><li>O&#x2019;s direct component objects</li><li>A global variable, accessible by O, in the scope of M</li></ol><h2 id="&#x7BC4;&#x4F8B;&#xFF1A;"><a href="#&#x7BC4;&#x4F8B;&#xFF1A;" class="headerlink" title="&#x7BC4;&#x4F8B;&#xFF1A;"></a>&#x7BC4;&#x4F8B;&#xFF1A;</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A Law of Demeter example in Java.</span></span><br><span class="line"><span class="comment"> * Created by Alvin Alexander, &lt;a href=&quot;http://devdaily.com&quot; title=&quot;http://devdaily.com&quot;&gt;http://devdaily.com&lt;/a&gt;.</span></span><br><span class="line"><span class="comment"> * This is an adaptation of the source code example from the book</span></span><br><span class="line"><span class="comment"> * The Pragmatic Programmer.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LawOfDemeterInJava</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">  <span class="keyword">private</span> Topping cheeseTopping;</span><br><span class="line">   </span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Good examples of following the Law of Demeter.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">goodExamples</span><span class="params">(Pizza pizza)</span></span></span><br><span class="line"><span class="function">  </span>{</span><br><span class="line">    Foo foo = <span class="keyword">new</span> Foo();</span><br><span class="line">     </span><br><span class="line">    <span class="comment">// (1) it&apos;s okay to call our own methods</span></span><br><span class="line">    doSomething();</span><br><span class="line">     </span><br><span class="line">    <span class="comment">// (2) it&apos;s okay to call methods on objects passed in to our method</span></span><br><span class="line">    <span class="keyword">int</span> price = pizza.getPrice();</span><br><span class="line">     </span><br><span class="line">    <span class="comment">// (3) it&apos;s okay to call methods on any objects we create</span></span><br><span class="line">    cheeseTopping = <span class="keyword">new</span> CheeseTopping();</span><br><span class="line">    <span class="keyword">float</span> weight = cheeseTopping.getWeightUsed();</span><br><span class="line">     </span><br><span class="line">    <span class="comment">// (4) any directly held component objects</span></span><br><span class="line">    foo.doBar();</span><br><span class="line">  }</span><br><span class="line">   </span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doSomething</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>{</span><br><span class="line">    <span class="comment">// do something here ...</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</h2><ul><li><a href="http://en.wikipedia.org/wiki/Law_of_Demeter" target="_blank" rel="noopener">Law_of_Demeter</a></li><li><a href="http://alvinalexander.com/java/java-law-of-demeter-java-examples" target="_blank" rel="noopener">Law of Demeter - Java examples</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;#x66F4;&amp;#x8A73;&amp;#x7D30;&amp;#x7684;&amp;#x8AAA;&amp;#x6CD5;&amp;#x662F;&amp;#x201C;Law of Demeter for Functions/Methods&amp;#x201D; (LoD-F)&amp;#xFF0C;&amp;#x7C21;&amp;#x55
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[Java] Object equality in Java</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-Object-equality-in-Java/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-Object-equality-in-Java/</id>
    <published>2016-12-09T09:26:05.000Z</published>
    <updated>2016-12-13T07:25:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5728;Java&#x4E2D;&#xFF0C;&#x8981;&#x6BD4;&#x8F03;&#x5169;&#x500B;&#x57FA;&#x672C;&#x578B;&#x614B;&#x7684;&#x8B8A;&#x6578;&#xFF0C;&#x8981;&#x4F7F;&#x7528;<code>==</code>&#x3002;<br>&#x8981;&#x6BD4;&#x8F03;&#x5169;&#x500B;&#x7269;&#x4EF6;&#x578B;&#x614B;&#x7684;&#x8B8A;&#x6578;&#xFF0C;&#x8981;&#x4F7F;&#x7528;<code>equals</code>&#x3002;</p><p>&#x56E0;&#x70BA;&#x6240;&#x6709;&#x7684;&#x7269;&#x4EF6;&#x90FD;&#x662F;&#x7E7C;&#x627F;Object&#xFF0C;&#x52A0;&#x4E0A;Object&#x7684;equals()&#x662F;&#x4F7F;&#x7528;<code>==</code>&#x5224;&#x5B9A;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;Override Object&#x7684;<code>equals()</code>&#x51FD;&#x5F0F;&#x3002;</p><p>Object&#x7684;<code>equals()</code>&#x51FD;&#x5F0F;&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object paramObject)</span> </span>{</span><br><span class="line"><span class="keyword">return</span> (<span class="keyword">this</span> == paramObject);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h4 id="&#x7BC4;&#x4F8B;&#xFF1A;"><a href="#&#x7BC4;&#x4F8B;&#xFF1A;" class="headerlink" title="&#x7BC4;&#x4F8B;&#xFF1A;"></a>&#x7BC4;&#x4F8B;&#xFF1A;</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Point</span> </span>{</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span>x;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span>y;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Point</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>{</span><br><span class="line"><span class="keyword">this</span>.x = x;</span><br><span class="line"><span class="keyword">this</span>.y = y;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object that)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (that <span class="keyword">instanceof</span> Point) {</span><br><span class="line">Point point = (Point) that;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.x == point.x &amp;&amp; <span class="keyword">this</span>.y == point.y;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">}</span><br><span class="line">    </span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">return</span> Objects.hash(x,y);</span><br><span class="line">}    </span><br><span class="line">}</span><br></pre></td></tr></table></figure><ul><li>&#x6CE8;&#x610F;&#xFF1A;&#x7576;Override equals&#x6642;&#xFF0C;hashCode&#x6700;&#x597D;&#x4E5F;&#x8981;Override&#x3002;</li></ul><p>&#x4F8B;&#x5982;&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PointTest</span> </span>{</span><br><span class="line"><span class="keyword">private</span> Objectpoint1;</span><br><span class="line"><span class="keyword">private</span> Pointpoint2;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUp</span><span class="params">()</span> </span>{</span><br><span class="line">point1 = <span class="keyword">new</span> Point(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">point2 = <span class="keyword">new</span> Point(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCase</span><span class="params">()</span> </span>{</span><br><span class="line">Set&lt;Object&gt; set = <span class="keyword">new</span> HashSet&lt;Object&gt;();</span><br><span class="line">set.add(point1);</span><br><span class="line">assertTrue(set.contains(point2));</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><ol><li>&#x8A08;&#x7B97;point2&#x7684;hashCode</li><li>&#x8A08;&#x7B97;point1&#x7684;hashCode</li><li>&#x82E5;hashCode&#x4E00;&#x6A23;&#x4EE3;&#x8868;&#x843D;&#x5728;&#x540C;&#x4E00;&#x500B;bucket</li><li>&#x518D;&#x900F;&#x904E;equals&#x5224;&#x5225;&#x662F;&#x5426;&#x76F8;&#x7B49;</li></ol><p>hashCode&#x53EF;&#x4EE5;&#x900F;&#x904E;Objects.hash()&#x5354;&#x52A9;&#x8A08;&#x7B97;&#xFF0C;&#x6216;&#x662F;&#x81EA;&#x884C;&#x8A2D;&#x8A08;&#x516C;&#x5F0F;&#x3002;<br>&#x4F8B;&#x5982;&#xFF1A;<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#hashCode(" target="_blank" rel="noopener">String&#x7684;hashCode</a>)&#x3002;</p><p>&#x6709;&#x883B;&#x591A;&#x985E;&#x4F3C;&#x7684;&#x6587;&#x7AE0;&#x63D0;&#x5230;&#x70BA;&#x4EC0;&#x9EBC;&#x8981;&#x7528;31&#x7576;&#x4E58;&#x6578;&#x5462;?&#x4F8B;&#x5982;&#xFF1A;<a href="http://stackoverflow.com/questions/299304/why-does-javas-hashcode-in-string-use-31-as-a-multiplier" target="_blank" rel="noopener">Why does Java&#x2019;s hashCode() in String use 31 as a multiplier?</a></p><p>&#x67E5;&#x4E86;&#x76F8;&#x95DC;&#x7684;&#x8A0E;&#x8AD6;&#x5E7E;&#x4E4E;&#x90FD;&#x662F;31&#x5F0F;&#x8CEA;&#x6578;&#x4E26;&#x4E14;jvm&#x53EF;&#x4EE5;&#x5C0D;&#x5176;&#x505A;&#x6700;&#x4F73;&#x5316;&#xFF0C;&#x500B;&#x4EBA;&#x63A8;&#x6E2C;&#x4E3B;&#x8981;&#x539F;&#x56E0;31&#x53EF;&#x4EE5;&#x5927;&#x5E45;&#x964D;&#x4F4E;collision&#x7684;&#x6A5F;&#x6703;&#xFF0C;&#x6216;&#x8A31;&#x6F14;&#x7B97;&#x6CD5;&#x6216;&#x662F;&#x6709;&#x76F8;&#x95DC;&#x7684;&#x8AD6;&#x6587;&#x6703;&#x6709;&#x66F4;&#x8A73;&#x7D30;&#x7684;&#x8AAA;&#x660E;&#x3002;</p><h4 id="&#x76F8;&#x95DC;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x76F8;&#x95DC;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x76F8;&#x95DC;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x76F8;&#x95DC;&#x8CC7;&#x6599;&#xFF1A;</h4><p><a href="http://www.codedata.com.tw/java/object-equality-1/" target="_blank" rel="noopener">&#x7269;&#x4EF6;&#x76F8;&#x7B49;&#x6027;&#xFF08;&#x4E0A;&#xFF09;</a></p><h4 id="&#x7BC4;&#x4F8B;&#x7684;&#x539F;&#x59CB;&#x78BC;&#xFF1A;https-github-com-pandaforme-ObjectEqual"><a href="#&#x7BC4;&#x4F8B;&#x7684;&#x539F;&#x59CB;&#x78BC;&#xFF1A;https-github-com-pandaforme-ObjectEqual" class="headerlink" title="&#x7BC4;&#x4F8B;&#x7684;&#x539F;&#x59CB;&#x78BC;&#xFF1A;https://github.com/pandaforme/ObjectEqual"></a>&#x7BC4;&#x4F8B;&#x7684;&#x539F;&#x59CB;&#x78BC;&#xFF1A;<a href="https://github.com/pandaforme/ObjectEqual" target="_blank" rel="noopener">https://github.com/pandaforme/ObjectEqual</a></h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;#x5728;Java&amp;#x4E2D;&amp;#xFF0C;&amp;#x8981;&amp;#x6BD4;&amp;#x8F03;&amp;#x5169;&amp;#x500B;&amp;#x57FA;&amp;#x672C;&amp;#x578B;&amp;#x614B;&amp;#x7684;&amp;#x8B8A;&amp;#x6578;&amp;#xFF0C;&amp;#x89
      
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>[Java] Multiple parameters in a constructor</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-Multiple-parameters-in-a-constructor/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-Multiple-parameters-in-a-constructor/</id>
    <published>2016-12-09T09:25:31.000Z</published>
    <updated>2016-12-13T07:25:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5728;&#x958B;&#x767C;&#x7684;&#x904E;&#x7A0B;&#x4E2D;&#x5F88;&#x5E38;&#x6703;&#x78B0;&#x5230;&#x9700;&#x8981;&#x50B3;&#x5165;&#x5927;&#x91CF;&#x7684;&#x53C3;&#x6578;&#x5230;&#x5EFA;&#x69CB;&#x5B50;&#x7684;&#x60C5;&#x6CC1;&#xFF0C;&#x9019;&#x6A23;&#x505A;&#x6CD5;&#x6703;&#x8B93;&#x5176;&#x4ED6;&#x4EBA;&#x4E0D;&#x6613;&#x7406;&#x89E3;&#xFF0C;&#x9020;&#x6210;&#x7DAD;&#x8B77;&#x548C;&#x6E2C;&#x8A66;&#x4E0A;&#x7684;&#x56F0;&#x96E3;&#x3002;&#x5728;<a href="http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882" target="_blank" rel="noopener">Clean Code: A Handbook of Agile Software Craftsmanship</a>&#x6709;&#x63D0;&#x5230;&#xFF1A;&#x51FD;&#x5F0F;&#x7684;&#x53C3;&#x6578;&#x6700;&#x597D;&#x4E0D;&#x8981;&#x8D85;&#x904E;&#x4E09;&#x500B;&#x3002;</p><p>&#x90A3;&#x9019;&#x6A23;&#x7684;&#x60C5;&#x6CC1;&#x61C9;&#x8A72;&#x8981;&#x600E;&#x9EBC;&#x505A;&#x6703;&#x6BD4;&#x8F03;&#x597D;&#x5462;&#xFF1F;&#x53EF;&#x4EE5;&#x5229;&#x7528;<a href="http://www.amazon.com/Effective-Java-Edition-Joshua-Bloch/dp/0321356683" target="_blank" rel="noopener">Effective Java (2nd Edition)</a>&#x4E2D;&#x6240;&#x63D0;&#x5230;&#x7684;Builder pattern&#x4F86;&#x89E3;&#x6C7A;&#x3002;</p><p><em>&#x4E26;&#x4E0D;&#x662F;&#x6BCF;&#x7A2E;&#x60C5;&#x6CC1;&#x90FD;&#x9069;&#x5408;&#x4F7F;&#x7528;Builder pattern&#x4F86;&#x89E3;&#x6C7A;&#xFF0C;Builder pattern&#x662F;&#x89E3;&#x6CD5;&#x4E4B;&#x4E00;&#x3002;</em></p><h3 id="&#x7BC4;&#x4F8B;&#xFF1A;"><a href="#&#x7BC4;&#x4F8B;&#xFF1A;" class="headerlink" title="&#x7BC4;&#x4F8B;&#xFF1A;"></a>&#x7BC4;&#x4F8B;&#xFF1A;</h3><p>&#x9084;&#x6C92;&#x6709;&#x4F7F;&#x7528;Builder pattern&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NutritionFacts</span> </span>{</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> servingSize;     <span class="comment">// (mL) required            </span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> servings;        <span class="comment">// (per container) required </span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> calories;        <span class="comment">// optional                 </span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> fat;             <span class="comment">// (g) optional             </span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> sodium;          <span class="comment">// (mg) optional            </span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> carbohydrate;    <span class="comment">// (g)  optional            </span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">NutritionFacts</span><span class="params">(<span class="keyword">int</span> servingSize, <span class="keyword">int</span> servings)</span> </span>{</span><br><span class="line">    <span class="keyword">this</span>(servingSize, servings, <span class="number">0</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">NutritionFacts</span><span class="params">(<span class="keyword">int</span> servingSize, <span class="keyword">int</span> servings,</span></span></span><br><span class="line"><span class="function"><span class="params">                        <span class="keyword">int</span> calories)</span> </span>{</span><br><span class="line">    <span class="keyword">this</span>(servingSize, servings, calories, <span class="number">0</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">NutritionFacts</span><span class="params">(<span class="keyword">int</span> servingSize, <span class="keyword">int</span> servings,</span></span></span><br><span class="line"><span class="function"><span class="params">                        <span class="keyword">int</span> calories, <span class="keyword">int</span> fat)</span> </span>{</span><br><span class="line">    <span class="keyword">this</span>(servingSize, servings, calories, fat, <span class="number">0</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">NutritionFacts</span><span class="params">(<span class="keyword">int</span> servingSize, <span class="keyword">int</span> servings,</span></span></span><br><span class="line"><span class="function"><span class="params">                        <span class="keyword">int</span> calories, <span class="keyword">int</span> fat, <span class="keyword">int</span> sodium)</span> </span>{</span><br><span class="line">    <span class="keyword">this</span>(servingSize, servings, calories, fat, sodium, <span class="number">0</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">NutritionFacts</span><span class="params">(<span class="keyword">int</span> servingSize, <span class="keyword">int</span> servings,</span></span></span><br><span class="line"><span class="function"><span class="params">                        <span class="keyword">int</span> calories, <span class="keyword">int</span> fat, <span class="keyword">int</span> sodium,</span></span></span><br><span class="line"><span class="function"><span class="params">                        <span class="keyword">int</span> carbohydrate)</span> </span>{</span><br><span class="line">    <span class="keyword">this</span>.servingSize = servingSize;</span><br><span class="line">    <span class="keyword">this</span>.servings = servings;</span><br><span class="line">    <span class="keyword">this</span>.calories = calories;</span><br><span class="line">    <span class="keyword">this</span>.fat = fat;</span><br><span class="line">    <span class="keyword">this</span>.sodium = sodium;</span><br><span class="line">    <span class="keyword">this</span>.carbohydrate = carbohydrate;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>&#x4F7F;&#x7528;Builder pattern&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NutritionFacts</span> </span>{</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> servingSize;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> servings;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> calories;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> fat;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> sodium;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> carbohydrate;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span> </span>{</span><br><span class="line">    <span class="comment">// Required parameters</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> servingSize;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> servings;</span><br><span class="line">    <span class="comment">// Optional parameters - initialized to default values</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> calories = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> fat = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> carbohydrate = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> sodium = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Builder</span><span class="params">(<span class="keyword">int</span> servingSize, <span class="keyword">int</span> servings)</span> </span>{</span><br><span class="line">      <span class="keyword">this</span>.servingSize = servingSize;</span><br><span class="line">      <span class="keyword">this</span>.servings = servings;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Builder <span class="title">calories</span><span class="params">(<span class="keyword">int</span> val)</span> </span>{</span><br><span class="line">      calories = val;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Builder <span class="title">fat</span><span class="params">(<span class="keyword">int</span> val)</span> </span>{</span><br><span class="line">      fat = val;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Builder <span class="title">carbohydrate</span><span class="params">(<span class="keyword">int</span> val)</span> </span>{</span><br><span class="line">      carbohydrate = val;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Builder <span class="title">sodium</span><span class="params">(<span class="keyword">int</span> val)</span> </span>{</span><br><span class="line">      sodium = val;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> NutritionFacts <span class="title">build</span><span class="params">()</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> NutritionFacts(<span class="keyword">this</span>);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">NutritionFacts</span><span class="params">(Builder builder)</span> </span>{</span><br><span class="line">    servingSize = builder.servingSize;</span><br><span class="line">    servings = builder.servings;</span><br><span class="line">    calories = builder.calories;</span><br><span class="line">    fat = builder.fat;</span><br><span class="line">    sodium = builder.sodium;</span><br><span class="line">    carbohydrate = builder.carbohydrate;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>initialize NutritionFacts&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NutritionFacts sodaDrink = <span class="keyword">new</span> NutritionFacts.Builder(<span class="number">240</span>, <span class="number">8</span>).</span><br><span class="line">      calories(<span class="number">100</span>).sodium(<span class="number">35</span>).carbohydrate(<span class="number">27</span>).build();</span><br></pre></td></tr></table></figure></p><h3 id="&#x6BD4;&#x8F03;&#xFF1A;"><a href="#&#x6BD4;&#x8F03;&#xFF1A;" class="headerlink" title="&#x6BD4;&#x8F03;&#xFF1A;"></a>&#x6BD4;&#x8F03;&#xFF1A;</h3><p>&#x512A;&#x9EDE;&#xFF1A;</p><ol><li>&#x589E;&#x52A0;&#x53EF;&#x8B80;&#x6027;&#x3002;</li><li>&#x8B93;&#x7269;&#x4EF6;&#x70BA;immutable&#x3002;</li></ol><p>&#x7F3A;&#x9EDE;&#xFF1A;</p><ol><li>builder&#x548C;object&#x7684;&#x7A0B;&#x5F0F;&#x78BC;&#x91CD;&#x8907;&#x6027;&#x5F88;&#x9AD8;&#x3002;</li><li>&#x65B0;&#x589E;&#x6216;&#x522A;&#x9664;object&#x7684;attribute&#xFF0C;&#x9700;&#x8981;&#x56DE;&#x982D;&#x4FEE;&#x6539;builder&#x7A0B;&#x5F0F;&#x78BC;&#x3002;&#x4F8B;&#x5982;&#xFF1A;&#x540C;&#x6642;&#x8981;Override object&#x548C;builder&#x7684;equals(),hashCode()&#x3002;</li></ol><p><em>&#x9019;&#x88E1;&#x7684;Builder pattern&#x548C;<a href="http://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612" target="_blank" rel="noopener">Design Patterns: Elements of Reusable Object-Oriented Software</a>&#x4E2D;&#x6240;&#x63D0;&#x5230;&#x7684;<a href="http://en.wikipedia.org/wiki/Builder_pattern" target="_blank" rel="noopener">Builder pattern</a>&#x4F3C;&#x4E4E;&#x4E0D;&#x4E00;&#x6A23;&#xFF0C;&#x4F46;&#x662F;&#x6982;&#x5FF5;&#x4E0A;&#x5F88;&#x76F8;&#x8FD1;&#x3002;&#x5F8C;&#x8005;&#x6703;&#x6709;&#x4E00;&#x500B;&#x5171;&#x7528;&#x7D44;&#x88DD;&#x548C;&#x5EFA;&#x69CB;Product&#x7684;interface&#xFF1B;&#x524D;&#x8005;&#x56E0;&#x70BA;&#x7D44;&#x88DD;&#x548C;&#x5EFA;&#x69CB;&#x6D41;&#x7A0B;&#x5DEE;&#x7570;&#x904E;&#x5927;&#xFF0C;&#x6240;&#x4EE5;&#x6C92;&#x6709;&#x5171;&#x7528;&#x7684;interface&#x3002;&#x6240;&#x4EE5;&#x524D;&#x8005;&#x5F88;&#x96E3;&#x505A;&#x5230;&#x62BD;&#x63DB;&#x4E0D;&#x540C;&#x7684;Concrete Builder&#x5C31;&#x53EF;&#x4EE5;&#x7522;&#x751F;&#x4E0D;&#x540C;&#x7684;&#x7684;Product&#x3002;</em></p><h3 id="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</h3><ul><li><a href="http://www.javaspecialists.eu/archive/Issue163.html" target="_blank" rel="noopener">Book Review: Effective Java 2nd Edition</a></li><li><a href="http://www.informit.com/articles/article.aspx?p=1216151&amp;seqNum=1" target="_blank" rel="noopener">Creating and Destroying Java Objects</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;#x5728;&amp;#x958B;&amp;#x767C;&amp;#x7684;&amp;#x904E;&amp;#x7A0B;&amp;#x4E2D;&amp;#x5F88;&amp;#x5E38;&amp;#x6703;&amp;#x78B0;&amp;#x5230;&amp;#x9700;&amp;#x8981;&amp;#x50B3;&amp;#x5165;&amp;#x5927;&amp;
      
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>[Java] 4 types of Java inner classes</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-4-types-of-Java-inner-classes/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-4-types-of-Java-inner-classes/</id>
    <published>2016-12-09T09:24:23.000Z</published>
    <updated>2016-12-13T07:25:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>Java&#x4E2D;&#x6709;&#x56DB;&#x7A2E;inner class&#xFF0C;&#x5206;&#x5225;&#x662F;&#xFF1A;</p><ol><li>static inner class</li><li>member inner Class</li><li>local inner class</li><li>anonymous inner class</li></ol><h3 id="Static-inner-class&#xFF1A;"><a href="#Static-inner-class&#xFF1A;" class="headerlink" title="Static inner class&#xFF1A;"></a>Static inner class&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OutterClass</span> </span>{</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">InnerClass</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>{</span><br><span class="line">System.out.println(<span class="string">&quot;I am a static inner class&quot;</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">OutterClass.InnerClass innerClass = <span class="keyword">new</span> OutterClass.InnerClass();</span><br><span class="line">innerClass.print();</span><br><span class="line">}    </span><br><span class="line">}</span><br></pre></td></tr></table></figure><p><em>static inner class&#x4E0D;&#x80FD;&#x5B58;&#x53D6;outter class&#x7684;memeber&#x6216;method&#xFF01;&#x82E5;&#x662F;&#x4E00;&#x5B9A;&#x8981;&#x5B58;&#x53D6;&#xFF0C;&#x5247;memeber&#x6216;method&#x8981;&#x7528;static&#x4FEE;&#x98FE;&#x3002;</em></p><h3 id="Member-inner-Class&#xFF1A;"><a href="#Member-inner-Class&#xFF1A;" class="headerlink" title="Member inner Class&#xFF1A;"></a>Member inner Class&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OutterClass</span> </span>{</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>x= <span class="number">0</span>;</span><br><span class="line"><span class="keyword">private</span> InnerClassinnerClass;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">OutterClass</span><span class="params">()</span> </span>{</span><br><span class="line">innerClass = <span class="keyword">new</span> InnerClass();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">InnerClass</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>{</span><br><span class="line">x = x++;</span><br><span class="line">System.out.println(<span class="string">&quot;Outer x is &quot;</span> + x);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>{</span><br><span class="line">innerClass.print();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">OutterClass outterClass = <span class="keyword">new</span> OutterClass();</span><br><span class="line">outterClass.print();</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure><ol><li><em>inner class&#x53EF;&#x4EE5;&#x81EA;&#x7531;&#x5B58;&#x53D6;outter class&#x7684;member&#x6216;method&#x3002;</em></li><li><p><em>&#x901A;&#x5E38;&#x6703;&#x7528;private&#x4FEE;&#x98FE;inner class&#xFF0C;&#x9019;&#x6A23;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x516C;&#x4F48;&#x592A;&#x591A;&#x7684;&#x7D30;&#x7BC0;&#xFF0C;&#x9055;&#x53CD;&#x5C01;&#x88DD;&#x539F;&#x5247;&#x3002;</em></p><h3 id="Local-inner-class&#xFF1A;"><a href="#Local-inner-class&#xFF1A;" class="headerlink" title="Local inner class&#xFF1A;"></a>Local inner class&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OutterClass</span> </span>{</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>x= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> y = <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">InnerClass</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>{</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) {</span><br><span class="line">System.out.println(<span class="string">&quot;The value of x in OutterClass is &quot;</span> + x);</span><br><span class="line">System.out.println(<span class="string">&quot;The value of y in print() is &quot;</span> + y);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">catch</span> (InterruptedException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> InnerClass()).start();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">OutterClass outterClass = <span class="keyword">new</span> OutterClass();</span><br><span class="line">outterClass.print();</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p><em>inner class&#x53EF;&#x4EE5;&#x81EA;&#x7531;&#x5B58;&#x53D6;outter class&#x7684;member&#x548C;method&#x3002;</em></p></li><li><em>inner class&#x8981;&#x5B58;&#x53D6;&#x6240;&#x5728;method&#x7684;&#x8B8A;&#x6578;&#xFF0C;&#x5FC5;&#x9808;&#x4F7F;&#x7528;final&#x4FEE;&#x98FE;&#x8A72;&#x8B8A;&#x6578;&#x3002;<br>&#x539F;&#x56E0;&#xFF1A;&#x4EE5;&#x4E0A;&#x8FF0;&#x4F8B;&#x5B50;&#x70BA;&#x4F8B;&#xFF0C;&#x7576;&#x547C;&#x53EB;&#x5230;outterClass.print()&#xFF0C;&#x8B8A;&#x6578;y&#x5C31;&#x5931;&#x53BB;&#x4F5C;&#x7528;&#x4E86;&#x3002;&#x7136;&#x800C;InnerClass&#x8981;&#x518D;&#x5B58;&#x53D6;y&#x5C31;&#x6703;&#x51FA;&#x932F;&#xFF0C;&#x6240;&#x4EE5;&#x624D;&#x6703;&#x4F7F;&#x7528;final&#x4FEE;&#x98FE;&#x8B8A;&#x6578;y&#x3002;&#x5373;&#x8907;&#x88FD;&#x4E00;&#x4EFD;&#x8B8A;&#x6578;y&#x7D66;InnerClass&#x4F7F;&#x7528;&#xFF0C;&#x4E14;&#x503C;&#x90FD;&#x4E0D;&#x6703;&#x518D;&#x6539;&#x8B8A;&#x3002;Java 8&#x6709;&#x652F;&#x63F4;<a href="http://www.codedata.com.tw/java/understanding-lambda-closure-2-what-is-closure-2" target="_blank" rel="noopener">Closure</a>&#x5C31;&#x53EF;&#x4EE5;&#x89E3;&#x6C7A;&#x6B64;&#x554F;&#x984C;&#x3002;</em><h3 id="Anonymous-inner-class&#xFF1A;"><a href="#Anonymous-inner-class&#xFF1A;" class="headerlink" title="Anonymous inner class&#xFF1A;"></a>Anonymous inner class&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line"><span class="keyword">new</span> Runnable() {</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</span><br><span class="line">System.out.println(<span class="string">&quot;I am a anonymous class&quot;</span>);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li></ol><p><em>&#x6027;&#x8CEA;&#x548C;local inner class&#x76F8;&#x540C;&#x3002;</em></p><hr><p><em>&#x5982;&#x679C;&#x591A;&#x500B;&#x8B8A;&#x6578;&#x70BA;&#x76F8;&#x540C;&#x540D;&#x7A31;&#x6642;&#xFF0C;&#x9810;&#x8A2D;&#x6703;&#x9078;&#x7528;&#x8DDD;&#x96E2;inner class&#x6700;&#x8FD1;&#x7684;&#x8B8A;&#x6578;&#x3002;&#x4E0D;&#x904E;&#x5BE6;&#x52D9;&#x4E0A;&#x958B;&#x767C;&#x8005;&#x5F88;&#x5C11;&#x6703;&#x628A;&#x8B8A;&#x6578;&#x540D;&#x7A31;&#x53D6;&#x70BA;&#x76F8;&#x540C;&#xFF0C;&#x6709;&#x53EF;&#x80FD;&#x6703;&#x8B93;&#x8B80;&#x8005;&#x56F0;&#x60D1;&#x3002;&#x8ACB;&#x53C3;&#x8003;<a href="http://docs.oracle.com/javase/tutorial/java/javaOO/nested.html#shadowing" target="_blank" rel="noopener">Shadowing</a>&#x3002;</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShadowTest</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">FirstLevel</span> </span>{</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> x = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">methodInFirstLevel</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{</span><br><span class="line">            System.out.println(<span class="string">&quot;x = &quot;</span> + x);</span><br><span class="line">            System.out.println(<span class="string">&quot;this.x = &quot;</span> + <span class="keyword">this</span>.x);</span><br><span class="line">            System.out.println(<span class="string">&quot;ShadowTest.this.x = &quot;</span> + ShadowTest.<span class="keyword">this</span>.x);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String... args)</span> </span>{</span><br><span class="line">        ShadowTest st = <span class="keyword">new</span> ShadowTest();</span><br><span class="line">        ShadowTest.FirstLevel fl = st.new FirstLevel();</span><br><span class="line">        fl.methodInFirstLevel(<span class="number">23</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>&#x7D50;&#x679C;&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">23</span></span><br><span class="line"><span class="keyword">this</span>.x = <span class="number">1</span></span><br><span class="line">ShadowTest.<span class="keyword">this</span>.x = <span class="number">0</span></span><br></pre></td></tr></table></figure></p><h3 id="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</h3><ul><li><a href="http://www.programcreek.com/2009/02/4-inner-classes-tutorial-examples/" target="_blank" rel="noopener">4 types of Java inner classes </a></li><li><a href="http://www.codedata.com.tw/java/understanding-lambda-closure-2-what-is-closure-2" target="_blank" rel="noopener">&#x8A8D;&#x8B58; Lambda/Closure&#xFF08;2&#xFF09;&#x4EC0;&#x9EBC;&#x662F; Closure&#xFF1F;</a></li><li><a href="http://openhome.cc/Gossip/JavaGossip-V1/InnerClass.htm" target="_blank" rel="noopener">&#x5167;&#x90E8;&#x985E;&#x5225;&#xFF08;Inner class&#xFF09;</a></li><li><a href="http://docs.oracle.com/javase/tutorial/java/javaOO/nested.html#shadowing" target="_blank" rel="noopener">Shadowing</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Java&amp;#x4E2D;&amp;#x6709;&amp;#x56DB;&amp;#x7A2E;inner class&amp;#xFF0C;&amp;#x5206;&amp;#x5225;&amp;#x662F;&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;static inner class&lt;/li&gt;
&lt;li&gt;member i
      
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>[Java] The SerialVersionUID</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-The-SerialVersionUID/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-The-SerialVersionUID/</id>
    <published>2016-12-09T09:24:00.000Z</published>
    <updated>2016-12-09T11:20:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x7576;&#x5BE6;&#x4F5C;&#x4E86;Serializable interface&#x6642;&#xFF0C;Eclipse&#x7E3D;&#x662F;&#x6703;&#x63D0;&#x9192;&#x4F60;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The serializable <span class="class"><span class="keyword">class</span> <span class="title">xxx</span> <span class="title">does</span> <span class="title">not</span> <span class="title">declare</span> <span class="title">a</span> <span class="title">static</span> <span class="title">final</span> <span class="title">serialVersionUID</span> <span class="title">field</span> <span class="title">of</span> <span class="title">type</span> <span class="title">long</span></span></span><br></pre></td></tr></table></figure></p><p>serialVersionUID&#x76F8;&#x7576;&#x65BC;&#x9019;&#x500B;Object&#x7684;&#x7248;&#x672C;&#x63A7;&#x7BA1;&#xFF0C;&#x82E5;&#x4E0D;&#x5BA3;&#x544A;serialVersionUID&#xFF0C;JVM&#x6703;&#x5354;&#x52A9;&#x7522;&#x751F;&#x3002;&#x4F46;&#x662F;&#x56E0;&#x70BA;&#x6F14;&#x7B97;&#x6CD5;&#x5C0D;Object&#x5167;&#x5BB9;&#x6709;&#x76F8;&#x7576;&#x9AD8;&#x7684;&#x654F;&#x611F;&#x5EA6;&#x548C;&#x4E0D;&#x540C;&#x7684;JVM&#x6709;&#x4E0D;&#x540C;&#x7684;&#x5BE6;&#x4F5C;&#x65B9;&#x5F0F;&#xFF0C;&#x6240;&#x4EE5;&#x6709;&#x53EF;&#x80FD;Object&#x90FD;&#x4E00;&#x6A23;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x4E0D;&#x540C;JVM&#x4E0A;&#x7B97;&#x51FA;&#x7684;serialVersionUID&#x537B;&#x662F;&#x4E0D;&#x540C;&#xFF0C;&#x4E1F;&#x51FA;InvalidClassException&#x3002;</p><h3 id="&#x7BC4;&#x4F8B;&#xFF1A;"><a href="#&#x7BC4;&#x4F8B;&#xFF1A;" class="headerlink" title="&#x7BC4;&#x4F8B;&#xFF1A;"></a>&#x7BC4;&#x4F8B;&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>{</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span>serialVersionUID= <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String addres;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x63A5;&#x6536;&#x65B9;&#x5C07;Person Object&#x5E8F;&#x5217;&#x5316;&#x5B58;&#x5230;&#x786C;&#x789F;&#x4E0A;&#x3002;</p><p>&#x4E4B;&#x5F8C;Person Object&#x505A;&#x4E86;&#x4FEE;&#x6539;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>{</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span>serialVersionUID= <span class="number">2L</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>&#x6B64;&#x6642;&#xFF0C;&#x63A5;&#x6536;&#x65B9;&#x5617;&#x8A66;Person Object&#x53CD;&#x5E8F;&#x5217;&#x5316;&#xFF0C;&#x5C31;&#x6703;&#x4E1F;&#x51FA;InvalidClassException&#x3002;</p><p>&#x90A3;&#x4E9B;&#x60C5;&#x6CC1;&#x5C6C;&#x65BC;&#x4E0D;&#x53EF;&#x76F8;&#x5BB9;&#x7684;&#x6539;&#x8B8A;&#xFF0C;&#x8ACB;&#x53C3;&#x8003;&#xFF1A;<a href="http://docs.oracle.com/javase/7/docs/platform/serialization/spec/version.html#5172" target="_blank" rel="noopener">Incompatible Changes</a></p><p>&#x90A3;&#x4E9B;&#x60C5;&#x6CC1;&#x5C6C;&#x65BC;&#x53EF;&#x76F8;&#x5BB9;&#x7684;&#x6539;&#x8B8A;&#xFF0C;&#x8ACB;&#x53C3;&#x8003;&#xFF1A;<br><a href="http://docs.oracle.com/javase/7/docs/platform/serialization/spec/version.html#6754" target="_blank" rel="noopener">Compatible Changes</a></p><p>&#x7576;Object&#x5167;&#x5BB9;&#x6539;&#x8B8A;&#xFF0C;&#x53EF;&#x4EE5;&#x6839;&#x64DA;&#x4E0A;&#x8FF0;&#x9023;&#x7D50;&#x4F86;&#x5224;&#x5B9A;&#x5C6C;&#x65BC;&#x53EF;&#x76F8;&#x5BB9;&#x7684;&#x6539;&#x8B8A;&#x6216;&#x662F;&#x4E0D;&#x53EF;&#x76F8;&#x5BB9;&#x7684;&#x6539;&#x8B8A;&#x3002;&#x82E5;&#x662F;&#x4E0D;&#x53EF;&#x76F8;&#x5BB9;&#x7684;&#x6539;&#x8B8A;&#x5C31;&#x8981;&#x4FEE;&#x6B63;serialVersionUID&#x7684;&#x503C;&#x3002;</p><h3 id="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</h3><ul><li><a href="http://www.mkyong.com/java-best-practices/understand-the-serialversionuid/" target="_blank" rel="noopener">Understand The SerialVersionUID</a></li><li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html" target="_blank" rel="noopener">Serializable (Java Platform SE 7)</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;#x7576;&amp;#x5BE6;&amp;#x4F5C;&amp;#x4E86;Serializable interface&amp;#x6642;&amp;#xFF0C;Eclipse&amp;#x7E3D;&amp;#x662F;&amp;#x6703;&amp;#x63D0;&amp;#x9192;&amp;#x4F60;&lt;br&gt;&lt;figure 
      
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>[Java] Enum in Java</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-Enum-in-Java/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-Enum-in-Java/</id>
    <published>2016-12-09T09:23:29.000Z</published>
    <updated>2016-12-13T07:25:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>enum&#x985E;&#x5225;&#x53EF;&#x4EE5;&#x55AE;&#x7368;&#x5BA3;&#x544A;&#x6216;&#x662F;&#x5BA3;&#x544A;&#x5728;&#x5176;&#x4ED6;&#x985E;&#x5225;&#x88E1;&#x9762;&#x3002;</p><h3 id="&#x55AE;&#x7368;&#x5BA3;&#x544A;&#xFF1A;"><a href="#&#x55AE;&#x7368;&#x5BA3;&#x544A;&#xFF1A;" class="headerlink" title="&#x55AE;&#x7368;&#x5BA3;&#x544A;&#xFF1A;"></a>&#x55AE;&#x7368;&#x5BA3;&#x544A;&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Direction {</span><br><span class="line">    EAST,WEST,SOUTH,NORTH;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5728;&#x7DE8;&#x8B6F;&#x6642;&#x671F;compiler&#x6703;&#x81EA;&#x52D5;&#xFF1A;</p><ul><li><p>&#x52A0;&#x5165;final&#x4FEE;&#x98FE;enum&#x548C;&#x7E7C;&#x627F;Enum&#xFF1A;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">enum</span> Direction extends Enum{</span><br><span class="line">    EAST,WEST,SOUTH,NORTH;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>&#x52A0;&#x5165;private Constructor&#xFF1A;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">enum</span> Direction extends Enum{</span><br><span class="line">    EAST,WEST,SOUTH,NORTH;</span><br><span class="line">    <span class="function"><span class="keyword">private</span>  <span class="title">Direction</span><span class="params">(String s, <span class="keyword">int</span> i)</span></span>{</span><br><span class="line">        <span class="keyword">super</span>(s, i);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>&#x52A0;&#x5165;public static final&#x4FEE;&#x98FE;&#x5217;&#x8209;&#x5167;&#x5BB9;&#x503C;&#xFF1A;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">enum</span> Direction extends Enum{</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Direction EAST,</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Direction WEST,</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Direction SOUTH,</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Direction NORTH;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Direction</span><span class="params">(String s, <span class="keyword">int</span> i)</span></span>{</span><br><span class="line">        <span class="keyword">super</span>(s, i);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>&#x521D;&#x59CB;&#x5316;&#xFF1A;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">enum</span> Direction extends Enum{</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Direction EAST,</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Direction WEST,</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Direction SOUTH,</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Direction NORTH;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Direction</span><span class="params">(String s, <span class="keyword">int</span> i)</span></span>{</span><br><span class="line">        <span class="keyword">super</span>(s, i);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span>{</span><br><span class="line">        EAST = <span class="keyword">new</span> Direction(<span class="string">&quot;EAST&quot;</span>, <span class="number">0</span>);</span><br><span class="line">        WEST = <span class="keyword">new</span> Direction(<span class="string">&quot;WEST&quot;</span>, <span class="number">1</span>);</span><br><span class="line">        SOUTH = <span class="keyword">new</span> Direction(<span class="string">&quot;SOUTH&quot;</span>, <span class="number">2</span>);</span><br><span class="line">        NORTH = <span class="keyword">new</span> Direction(<span class="string">&quot;NORTH&quot;</span>, <span class="number">3</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>override Enum&#x7684;valueOf method&#x3002;</p></li><li>&#x7522;&#x751F;&#x4E00;&#x500B;values method&#xFF0C;&#x56DE;&#x50B3;&#x503C;&#x70BA;enum&#x985E;&#x5225;&#x5167;&#x5BB9;&#x503C;&#x7684;&#x9663;&#x5217;&#x3002;</li></ul><hr><h3 id="&#x5BA3;&#x544A;&#x5728;&#x5176;&#x4ED6;&#x985E;&#x5225;&#xFF1A;"><a href="#&#x5BA3;&#x544A;&#x5728;&#x5176;&#x4ED6;&#x985E;&#x5225;&#xFF1A;" class="headerlink" title="&#x5BA3;&#x544A;&#x5728;&#x5176;&#x4ED6;&#x985E;&#x5225;&#xFF1A;"></a>&#x5BA3;&#x544A;&#x5728;&#x5176;&#x4ED6;&#x985E;&#x5225;&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DirectionOutter</span> </span>{</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> Direction {</span><br><span class="line">        EAST,WEST,SOUTH,NORTH;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5728;&#x7DE8;&#x8B6F;&#x6642;&#x671F;compiler&#x6703;&#x81EA;&#x52D5;&#xFF1A;</p><ul><li>&#x52A0;&#x5165;static final&#x4FEE;&#x98FE;enum&#x548C;&#x7E7C;&#x627F;Enum&#xFF1A;<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DirectionOutter</span> </span>{</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">enum</span> Direction extends Enum {</span><br><span class="line">        EAST,WEST,SOUTH,NORTH;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li></ul><p>&#x5176;&#x9918;&#x884C;&#x70BA;&#x548C;&#x55AE;&#x7368;&#x5BA3;&#x544A;&#x4E00;&#x6A23;&#x3002;</p><hr><p>&#x7576;&#x5BA3;&#x544A;&#x4E00;&#x500B;enum&#x985E;&#x5225;&#xFF0C;compiler&#x6703;&#x201D;&#x81EA;&#x52D5;&#x201D;&#x505A;&#x90A3;&#x9EBC;&#x591A;&#x4E8B;&#xFF0C;&#x6703;&#x6709;&#x4EE5;&#x4E0B;&#x7279;&#x6027;&#xFF1A;</p><ol><li>&#x81EA;&#x52D5;&#x7E7C;&#x627F;<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Enum.html" target="_blank" rel="noopener">Enum</a>&#x62BD;&#x8C61;&#x985E;&#x5225;&#xFF0C;&#x56E0;&#x70BA;Enum&#x62BD;&#x8C61;&#x985E;&#x5225;&#x5BE6;&#x505A;&#x4E86;<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Comparable.html" target="_blank" rel="noopener">Comparable</a>&#x548C;<a href="http://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html" target="_blank" rel="noopener">Serializable</a>&#xFF0C;&#x6240;&#x4EE5;enum&#x7269;&#x4EF6;&#x4E4B;&#x9593;&#x662F;&#x53EF;&#x4EE5;&#x6BD4;&#x8F03;&#x548C;enum&#x7269;&#x4EF6;&#x662F;&#x53EF;&#x4EE5;&#x5E8F;&#x5217;&#x5316;&#x3002;</li><li>enum&#x985E;&#x5225;&#x4E0D;&#x80FD;&#x7E7C;&#x627F;&#x5176;&#x4ED6;&#x985E;&#x5225;&#x6216;&#x88AB;&#x7E7C;&#x627F;&#x3002;</li><li>enum&#x7269;&#x4EF6;&#x70BA;<a href="http://en.wikipedia.org/wiki/Singleton_pattern" target="_blank" rel="noopener">Singleton</a>&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;==&#x6216;equals&#x9032;&#x884C;&#x6BD4;&#x8F03;&#x3002;</li><li>enum&#x7269;&#x4EF6;&#x70BA;immutable&#x7269;&#x4EF6;&#x3002;</li><li>&#x5EFA;&#x69CB;&#x5B50;&#x5B58;&#x53D6;&#x6B0A;&#x9650;&#x4E00;&#x5B9A;&#x662F;private&#x3002;</li></ol><p><em>&#x53EA;&#x6709;compiler&#x53EF;&#x4EE5;&#x7E7C;&#x627F;Enum&#x3002;</em></p><hr><h3 id="&#x589E;&#x52A0;&#x5C6C;&#x6027;&#xFF1A;"><a href="#&#x589E;&#x52A0;&#x5C6C;&#x6027;&#xFF1A;" class="headerlink" title="&#x589E;&#x52A0;&#x5C6C;&#x6027;&#xFF1A;"></a>&#x589E;&#x52A0;&#x5C6C;&#x6027;&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Direction {</span><br><span class="line">WEST(<span class="number">180</span>),</span><br><span class="line">EAST(<span class="number">0</span>),</span><br><span class="line">NORTH(<span class="number">90</span>),</span><br><span class="line">SOUTH(<span class="number">270</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">Direction</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> angle)</span> </span>{</span><br><span class="line"><span class="keyword">this</span>.angle = angle;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>angle;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAngle</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">return</span> angle;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5EFA;&#x69CB;&#x5B50;&#x7684;&#x5B58;&#x53D6;&#x6B0A;&#x9650;&#x53EF;&#x4EE5;&#x4E0D;&#x52A0;(compiler&#x6703;&#x81EA;&#x52D5;&#x52A0;&#x5165;private)&#x6216;&#x662F;&#x52A0;&#x5165;privae&#x3002;</p><hr><h3 id="&#x5BE6;&#x4F5C;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#xFF1A;"><a href="#&#x5BE6;&#x4F5C;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#xFF1A;" class="headerlink" title="&#x5BE6;&#x4F5C;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#xFF1A;"></a>&#x5BE6;&#x4F5C;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Direction {</span><br><span class="line">WEST(<span class="number">180</span>) {</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span> </span>{</span><br><span class="line">System.out.println(<span class="string">&quot;WEST&quot;</span>);</span><br><span class="line">}</span><br><span class="line">},</span><br><span class="line">EAST(<span class="number">0</span>) {</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span> </span>{</span><br><span class="line">System.out.println(<span class="string">&quot;EAST&quot;</span>);</span><br><span class="line">}</span><br><span class="line">},</span><br><span class="line">NORTH(<span class="number">90</span>) {</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span> </span>{</span><br><span class="line">System.out.println(<span class="string">&quot;NORTH&quot;</span>);</span><br><span class="line">}</span><br><span class="line">},</span><br><span class="line">SOUTH(<span class="number">270</span>) {</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span> </span>{</span><br><span class="line">System.out.println(<span class="string">&quot;SOUTH&quot;</span>);</span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">Direction(<span class="keyword">final</span> <span class="keyword">int</span> angle) {</span><br><span class="line"><span class="keyword">this</span>.angle = angle;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>angle;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAngle</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">return</span> angle;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure><hr><h3 id="&#x5C07;&#x503C;&#x8F49;&#x63DB;&#x6210;enum"><a href="#&#x5C07;&#x503C;&#x8F49;&#x63DB;&#x6210;enum" class="headerlink" title="&#x5C07;&#x503C;&#x8F49;&#x63DB;&#x6210;enum"></a>&#x5C07;&#x503C;&#x8F49;&#x63DB;&#x6210;enum</h3><p>&#x6839;&#x64DA;&#x4F7F;&#x7528;&#x60C5;&#x5883;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;valueOf&#x8F49;&#x63DB;&#x6216;&#x662F;&#x81EA;&#x884C;&#x8A2D;&#x8A08;&#x8F49;&#x5316;&#x65B9;&#x5F0F;&#x3002;</p><ul><li><p>&#x82E5;&#x60F3;&#x5C07;&#x5B57;&#x4E32;WEST&#x8F49;&#x63DB;&#x6210;Direction.WEST&#xFF1A;<br>&#x4F7F;&#x7528;valueOf</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Direction.valueOf(<span class="string">&quot;WEST&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>&#x7576;&#x4F7F;&#x7528;&#x8005;&#x8F38;&#x5165;180&#x5EA6;&#x6642;&#xFF0C;&#x8981;&#x8F49;&#x63DB;&#x6210;Direction.WEST&#xFF1A;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Direction {</span><br><span class="line">WEST(<span class="number">180</span>),EAST(<span class="number">0</span>),NORTH(<span class="number">90</span>),SOUTH(<span class="number">270</span>);</span><br><span class="line">    </span><br><span class="line">Direction(<span class="keyword">final</span> <span class="keyword">int</span> angle) {</span><br><span class="line"><span class="keyword">this</span>.angle = angle;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>angle;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAngle</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">return</span> angle;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;Integer, Direction&gt;lookup= <span class="keyword">new</span> HashMap&lt;Integer, Direction&gt;();</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> {</span><br><span class="line"><span class="keyword">for</span> (Direction s : Direction.values())</span><br><span class="line">lookup.put(s.getAngle(), s);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Direction <span class="title">get</span><span class="params">(<span class="keyword">int</span> angle)</span> </span>{</span><br><span class="line"><span class="keyword">return</span> lookup.get(angle);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li></ul><p>&#x900F;&#x904E;map&#x7269;&#x4EF6;&#x9032;&#x884C;&#x8F49;&#x63DB;&#x3002;</p><hr><h3 id="&#x5C07;enum&#x7269;&#x4EF6;&#x5B58;&#x653E;&#x5230;&#x5BB9;&#x5668;&#xFF1A;"><a href="#&#x5C07;enum&#x7269;&#x4EF6;&#x5B58;&#x653E;&#x5230;&#x5BB9;&#x5668;&#xFF1A;" class="headerlink" title="&#x5C07;enum&#x7269;&#x4EF6;&#x5B58;&#x653E;&#x5230;&#x5BB9;&#x5668;&#xFF1A;"></a>&#x5C07;enum&#x7269;&#x4EF6;&#x5B58;&#x653E;&#x5230;&#x5BB9;&#x5668;&#xFF1A;</h3><ul><li><p><a href="http://docs.oracle.com/javase/7/docs/api/java/util/EnumSet.html" target="_blank" rel="noopener">EumSet</a>&#xFF1A;</p><ol><li>&#x7528;EnumSet&#x4F86;&#x5B58;&#x653E;enum&#x7269;&#x4EF6;&#x7684;&#x6642;&#x9593;&#x548C;&#x7A7A;&#x9593;&#x6548;&#x80FD;&#x8F03;&#x597D;&#x3002;</li><li>&#x5728;&#x591A;&#x57F7;&#x884C;&#x7DD2;&#x5BE6;&#x884C;&#x4E0B;&#x662F;&#x4E0D;&#x5B89;&#x5168;&#x3002;</li><li>enum&#x7269;&#x4EF6;&#x5728;EnumSet&#x7684;&#x9806;&#x5E8F;&#x70BA;&#x5728;&#x5BA3;&#x544A;&#x6642;&#x5019;&#x7684;&#x9806;&#x5E8F;&#x3002;</li></ol></li><li><a href="http://docs.oracle.com/javase/7/docs/api/java/util/EnumMap.html" target="_blank" rel="noopener">EnumMap</a>&#xFF1A;<ol><li>&#x7528;EnumSet&#x4F86;&#x5B58;&#x653E;enum&#x7269;&#x4EF6;&#x7684;&#x6642;&#x9593;&#x548C;&#x7A7A;&#x9593;&#x6548;&#x80FD;&#x8F03;&#x597D;&#x3002;</li><li>&#x5728;&#x591A;&#x57F7;&#x884C;&#x7DD2;&#x5BE6;&#x884C;&#x4E0B;&#x662F;&#x4E0D;&#x5B89;&#x5168;&#x3002;<h3 id="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</h3></li></ol></li><li><a href="http://howtodoinjava.com/2012/12/07/guide-for-understanding-enum-in-java/" target="_blank" rel="noopener">Guide for understanding enum in java</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;enum&amp;#x985E;&amp;#x5225;&amp;#x53EF;&amp;#x4EE5;&amp;#x55AE;&amp;#x7368;&amp;#x5BA3;&amp;#x544A;&amp;#x6216;&amp;#x662F;&amp;#x5BA3;&amp;#x544A;&amp;#x5728;&amp;#x5176;&amp;#x4ED6;&amp;#x985E;&amp;#x52
      
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>[Java] Heap space vs. Stack</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-Heap-space-vs-Stack/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-Heap-space-vs-Stack/</id>
    <published>2016-12-09T09:22:47.000Z</published>
    <updated>2016-12-13T07:25:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5728;&#x7406;&#x89E3;Java&#x662F;&#x5426;&#x70BA;Pass by Value(&#x53C3;&#x8003;<a href="http://pandaforme.ghost.io/java-is-call-by-value-and-not-call-by-reference/" target="_blank" rel="noopener">&#x9019;&#x7BC7;&#x6587;&#x7AE0;</a>)&#x4E4B;&#x524D;&#xFF0C;&#x5EFA;&#x8B70;&#x5148;&#x4E86;&#x89E3;heap&#x548C;stack&#x7684;&#x529F;&#x7528;&#x3002;</p><ul><li>Heap space&#xFF1A;<ol><li>&#x7576;&#x5EFA;&#x7ACB;&#x7269;&#x4EF6;&#x6642;&#xFF0C;&#x6703;&#x5728;heap space&#x5206;&#x914D;&#x4E00;&#x500B;&#x7A7A;&#x9593;&#x7D66;&#x7269;&#x4EF6;&#x4F7F;&#x7528;&#x3002;</li><li>&#x6240;&#x6709;&#x5728;heap space&#x4E0A;&#x7684;&#x7269;&#x4EF6;&#xFF0C;&#x90FD;&#x53EF;&#x4EE5;&#x88AB;&#x5176;&#x4ED6;&#x7684;thread&#x5B58;&#x53D6;&#x3002;</li><li>Garbage Collection&#x6703;&#x6E05;&#x9664;heap space&#x5167;&#x6C92;&#x6709;&#x88AB;&#x4F7F;&#x7528;&#x5230;&#x7684;&#x7269;&#x4EF6;&#x3002; </li><li>&#x53EF;&#x900F;&#x904E;-Xms&#x53C3;&#x6578;&#x8ABF;&#x6574;heap space&#x7684;&#x958B;&#x59CB;&#x5927;&#x5C0F;&#x3002;</li><li>&#x53EF;&#x900F;&#x904E;-Xmx&#x53C3;&#x6578;&#x8A2D;&#x5B9A;heap space&#x7684;&#x6700;&#x5927;&#x503C;&#x3002;</li><li>&#x5047;&#x5982;heap space&#x6EFF;&#x4E86;&#xFF0C;Java&#x6703;&#x4E1F;&#x51FA;<figure class="highlight plain"><figcaption><span>Java Heap Space```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">* Stack&#xFF1A;</span><br><span class="line"> 1. &#x82E5;&#x8B8A;&#x6578;&#x662F;&#x57FA;&#x672C;&#x578B;&#x614B;&#xFF0C;&#x5C31;&#x5B58;&#x653E;&#x5B83;&#x7684;&#x503C;&#x3002;</span><br><span class="line"> 2. &#x82E5;&#x8B8A;&#x6578;&#x662F;&#x7269;&#x4EF6;&#xFF0C;&#x5C31;&#x5B58;&#x653E;&#x5B83;&#x5728;heap space&#x7684;&#x4F4D;&#x7F6E;&#x3002;</span><br><span class="line"> 3. stack&#x4E0D;&#x80FD;&#x88AB;&#x5176;&#x4ED6;thead&#x5B58;&#x53D6;&#x3002;</span><br><span class="line"> 4. &#x53EF;&#x900F;&#x904E;-Xss&#x53C3;&#x6578;&#x8ABF;&#x6574;stack&#x5927;&#x5C0F;&#x3002;</span><br><span class="line"> 5. &#x5047;&#x5982;stack&#x6EFF;&#x4E86;&#xFF0C;Java&#x6703;&#x4E1F;&#x51FA;```java java.lang.StackOverFlowError</span><br></pre></td></tr></table></figure></li></ol></li></ul><h3 id="&#x7BC4;&#x4F8B;&#xFF1A;"><a href="#&#x7BC4;&#x4F8B;&#xFF1A;" class="headerlink" title="&#x7BC4;&#x4F8B;&#xFF1A;"></a>&#x7BC4;&#x4F8B;&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Memory</span> </span>{</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{ <span class="comment">// Line 1</span></span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">1</span>; <span class="comment">// Line 2</span></span><br><span class="line">        Object obj = <span class="keyword">new</span> Object(); <span class="comment">// Line 3</span></span><br><span class="line">        Memory mem = <span class="keyword">new</span> Memory(); <span class="comment">// Line 4</span></span><br><span class="line">        mem.foo(obj); <span class="comment">// Line 5</span></span><br><span class="line">    } <span class="comment">// Line 9</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">foo</span><span class="params">(Object param)</span> </span>{ <span class="comment">// Line 6</span></span><br><span class="line">        String str = param.toString(); <span class="comment">//// Line 7</span></span><br><span class="line">        System.out.println(str);</span><br><span class="line">    } <span class="comment">// Line 8</span></span><br><span class="line"> </span><br><span class="line">}</span><br></pre></td></tr></table></figure><p><img src="http://www.journaldev.com/wp-content/uploads/2014/08/Java-Heap-Stack-Memory.png" alt=""></p><ol><li>&#x7576;&#x958B;&#x59CB;&#x57F7;&#x884C;&#x7A0B;&#x5F0F;&#x6642;&#x5019;&#xFF0C;JVM&#x6703;&#x8F09;&#x5165;&#x76F8;&#x95DC;&#x7684;class&#x5230;heap space&#x3002;</li><li>&#x7522;&#x751F;main thread&#x4E26;&#x4E14;&#x5EFA;&#x7ACB;&#x5B83;&#x7684;stack&#x3002;</li><li>&#x57F7;&#x884C;Line2&#xFF0C;&#x56E0;&#x70BA;i&#x662F;&#x57FA;&#x672C;&#x578B;&#x614B;&#xFF0C;&#x6240;&#x4EE5;push&#x5176;&#x503C;&#x5230;stack&#x3002;</li><li>&#x57F7;&#x884C;Line3&#xFF0C;&#x56E0;&#x70BA;obj&#x662F;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;push&#x5B83;&#x5728;heap space&#x7684;&#x4F4D;&#x7F6E;&#x5230;stack&#x3002;</li><li>&#x57F7;&#x884C;Line4&#xFF0C;&#x56E0;&#x70BA;mem&#x662F;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;push&#x5B83;&#x5728;heap space&#x7684;&#x4F4D;&#x7F6E;&#x5230;stack&#x3002;</li><li>&#x57F7;&#x884C;Line6&#xFF0C;push obj&#x5728;heap space&#x7684;&#x4F4D;&#x7F6E;&#x5230;stack&#x3002;</li><li>&#x57F7;&#x884C;Line7&#xFF0C;push obj.toString()&#x5728;heap space&#x7684;&#x4F4D;&#x7F6E;&#x5230;stack&#x3002;</li><li>&#x57F7;&#x884C;Line8&#xFF0C;pop str&#x548C;param&#x3002;</li><li>&#x57F7;&#x884C;Line9&#xFF0C;pop mem&#x3001;obj&#x548C;i&#xFF0C;&#x7A0B;&#x5F0F;&#x57F7;&#x884C;&#x7D50;&#x675F;&#x3002;</li></ol><p><em>&#x5982;&#x4F55;&#x900F;&#x904E;pop&#x5C6C;&#x65BC;&#x9019;&#x500B;method&#x7684;&#x8B8A;&#x6578;&#xFF0C;&#x63A8;&#x6E2C;&#x5BE6;&#x4F5C;&#x65B9;&#x5F0F;&#x6216;&#x8A31;&#x662F;&#x985E;&#x4F3C;&#x65BC;&#x56DB;&#x5247;&#x904B;&#x7B97;&#x3002;</em></p><p>&#x4F8B;&#x5982;&#xFF1A;</p><ol><li>&#x57F7;&#x884C;Line1&#xFF0C;push &#x201C;{&#x201C;&#x3002;</li><li>&#x57F7;&#x884C;Line6&#xFF0C;push &#x201C;{&#x201C;&#x3002;</li><li>&#x57F7;&#x884C;Line8&#xFF0C;&#x4E00;&#x76F4;pop&#xFF0C;&#x76F4;&#x5230;&#x9047;&#x5230;&#x201D;{&#x201C;&#x505C;&#x6B62;&#x3002;</li><li>&#x57F7;&#x884C;Line9&#xFF0C;&#x4E00;&#x76F4;pop&#xFF0C;&#x76F4;&#x5230;&#x9047;&#x5230;&#x201D;{&#x201C;&#x505C;&#x6B62;&#x3002;</li></ol><h3 id="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</h3><ul><li><a href="http://www.journaldev.com/4098/java-heap-memory-vs-stack-memory-difference" target="_blank" rel="noopener">Java Heap Memory vs Stack Memory Difference</a></li><li><a href="http://java-success.blogspot.tw/2012/04/how-will-you-go-about-explaining.html" target="_blank" rel="noopener">How will you go about explaining the following Java concepts to a beginner?</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;#x5728;&amp;#x7406;&amp;#x89E3;Java&amp;#x662F;&amp;#x5426;&amp;#x70BA;Pass by Value(&amp;#x53C3;&amp;#x8003;&lt;a href=&quot;http://pandaforme.ghost.io/java-is-call-by-val
      
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 277. Find the Celebrity</title>
    <link href="https://pandaforme.github.io/2016/12/09/Celebrity-Problem/"/>
    <id>https://pandaforme.github.io/2016/12/09/Celebrity-Problem/</id>
    <published>2016-12-09T09:22:00.000Z</published>
    <updated>2018-05-07T10:56:48.403Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h1><p>Suppose you are at a party with n people (labeled from 0 to n - 1) and among them, there may exist one celebrity. The definition of a celebrity is that all the other n - 1 people know him/her but he/she does not know any of them.</p><p>Now you want to find out who the celebrity is or verify that there is not one. The only thing you are allowed to do is to ask questions like: &#x201C;Hi, A. Do you know B?&#x201D; to get information of whether A knows B. You need to find out the celebrity (or verify there is not one) by asking as few questions as possible (in the asymptotic sense).</p><p>You are given a helper function bool knows(a, b) which tells you whether A knows B. Implement a function int findCelebrity(n), your function should minimize the number of calls to knows.</p><p>Note: There will be exactly one celebrity if he/she is in the party. Return the celebrity&#x2019;s label if there is a celebrity in the party. If there is no celebrity, return -1.</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>&#x5148;&#x5C0D;N&#x500B;&#x4EBA;&#x4F5C;&#x7DE8;&#x865F;&#xFF0C;&#x5F9E;1&#x5230;N&#x3002;&#x5148;&#x5F9E;&#x7DE8;&#x865F;1&#x7684;&#x4EBA;&#x958B;&#x59CB;&#xFF0C;&#x554F;&#x4ED6;&#x8A8D;&#x4E0D;&#x8A8D;&#x8B58;&#x7DE8;&#x865F;2&#x7684;&#x4EBA;&#x3002;<br>&#x60C5;&#x6CC1;&#x6709;&#x5169;&#x7A2E;&#xFF1A;    </p><ul><li>&#x7DE8;&#x865F;1&#x8A8D;&#x8B58;&#x7DE8;&#x865F;2&#xFF1A;&#x90A3;&#x9EBC;&#x7DE8;&#x865F;1&#x4E00;&#x5B9A;&#x4E0D;&#x662F;&#x540D;&#x4EBA;&#xFF0C;&#x7DE8;&#x865F;2&#x6709;&#x53EF;&#x80FD;&#x662F;&#x540D;&#x4EBA;&#x3002;</li><li>&#x7DE8;&#x865F;1&#x4E0D;&#x8A8D;&#x8B58;&#x7DE8;&#x865F;2&#xFF1A;&#x7DE8;&#x865F;2&#x4E00;&#x5B9A;&#x4E0D;&#x662F;&#x540D;&#x4EBA;&#xFF0C;&#x56E0;&#x70BA;&#x540D;&#x4EBA;&#x8981;&#x6709;N-1&#x4EBA;&#x8A8D;&#x8B58;&#x4ED6;&#x3002;</li></ul><p>&#x6839;&#x64DA;&#x4EE5;&#x4E0A;&#x7D50;&#x679C;&#xFF0C;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x7D50;&#x8AD6;&#xFF1A;    </p><ol><li>&#x7DE8;&#x865F;1&#x8A8D;&#x8B58;&#x7DE8;&#x865F;2&#xFF1A;&#x90A3;&#x9EBC;&#x7DE8;&#x865F;1&#x4E00;&#x5B9A;&#x4E0D;&#x662F;&#x540D;&#x4EBA;&#xFF0C;&#x7DE8;&#x865F;2&#x6709;&#x53EF;&#x80FD;&#x662F;&#x540D;&#x4EBA;&#x3002;</li><li>&#x7DE8;&#x865F;1&#x4E0D;&#x8A8D;&#x8B58;&#x7DE8;&#x865F;2&#xFF1A;&#x7DE8;&#x865F;2&#x4E00;&#x5B9A;&#x4E0D;&#x662F;&#x540D;&#x4EBA;&#xFF0C;&#x7DE8;&#x865F;1&#x6709;&#x53EF;&#x80FD;&#x662F;&#x540D;&#x4EBA;&#x3002;</li></ol><p>&#x6BCF;&#x554F;&#x4E00;&#x4EBA;&#x5C31;&#x6703;&#x6DD8;&#x6C70;&#x6389;&#x4E00;&#x4EBA;&#xFF0C;&#x63A5;&#x8457;&#x7E7C;&#x7E8C;&#x554F;&#x53EF;&#x80FD;&#x662F;&#x540D;&#x4EBA;&#x7684;&#x4EBA;&#x9078;&#x548C;&#x4E0B;&#x4E00;&#x500B;&#x7DE8;&#x865F;&#x7684;&#x95DC;&#x4FC2;&#xFF0C;&#x76F4;&#x5230;&#x554F;&#x5B8C;N&#x500B;&#x4EBA;&#x5C31;&#x53EF;&#x4EE5;&#x627E;&#x51FA;&#x540D;&#x4EBA;&#x3002;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x662F; O(N)&#x3002;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findCelebrity</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> celebrity = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) {</span><br><span class="line">        <span class="keyword">if</span> (knows(celebrity, i))</span><br><span class="line">            celebrity = i;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">        <span class="keyword">if</span> (i != celebrity) {</span><br><span class="line">            <span class="keyword">if</span> (knows(celebrity, i) || !knows(i, celebrity))</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> celebrity;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><ol><li><a href="http://www.careercup.com/question?id=13167666" target="_blank" rel="noopener">Celebrity Problem</a></li><li><a href="http://blog.csdn.net/beiyeqingteng/article/details/7707485" target="_blank" rel="noopener">&#x540D;&#x4EBA;&#x554F;&#x984C; (Celebrity problem)</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Question&quot;&gt;&lt;a href=&quot;#Question&quot; class=&quot;headerlink&quot; title=&quot;Question&quot;&gt;&lt;/a&gt;Question&lt;/h1&gt;&lt;p&gt;Suppose you are at a party with n people (labe
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="https://pandaforme.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>[Java] The details of Inheritance</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-The-details-of-Inheritance/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-The-details-of-Inheritance/</id>
    <published>2016-12-09T09:20:42.000Z</published>
    <updated>2016-12-13T07:24:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5728;Java&#x4F7F;&#x7528;&#x7E7C;&#x627F;&#x6642;&#x8981;&#x6CE8;&#x610F;&#x5E7E;&#x500B;&#x5C0F;&#x7D30;&#x7BC0;&#xFF0C;&#x4E0D;&#x7136;&#x5F88;&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x3002;</p><ul><li>&#x5EFA;&#x69CB;&#x5B50;&#x7684;&#x547C;&#x53EB;&#x9806;&#x5E8F;    </li><li>compiler&#x6703;&#x81EA;&#x52D5;&#x7522;&#x751F;&#x7121;&#x53C3;&#x6578;&#x7684;&#x5EFA;&#x69CB;&#x5B50;&#xFF0C;&#x6703;&#x81EA;&#x52D5;&#x521D;&#x59CB;&#x5316;field&#x8B8A;&#x6578;    </li></ul><p>&#x4F8B;&#x5982;&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Parent1</span></span>{</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  String s;</span><br><span class="line">  <span class="comment">/* compiler&#x6703;&#x81EA;&#x52D5;&#x7522;&#x751F;&#x7121;&#x53C3;&#x6578;&#x7684;&#x5EFA;&#x69CB;&#x5B50;&#xFF0C;</span></span><br><span class="line"><span class="comment">   * &#x4E26;&#x4E14;&#x521D;&#x59CB;&#x5316;field&#x8B8A;&#x6578;</span></span><br><span class="line"><span class="comment">   * public Parent1() {</span></span><br><span class="line"><span class="comment">   *   i = 0;</span></span><br><span class="line"><span class="comment">   *   s = null;</span></span><br><span class="line"><span class="comment">   * }</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Parent2</span> <span class="title">extend</span> <span class="title">Parent1</span></span>{</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Parent2</span><span class="params">(<span class="keyword">int</span> i)</span></span>{</span><br><span class="line">    <span class="comment">//&#x56E0;&#x70BA;&#x6C92;&#x6709;&#x6307;&#x5B9A;&#x8981;&#x547C;&#x53EB;&#x7236;&#x985E;&#x5225;&#x7684;&#x54EA;&#x4E00;&#x500B;&#x5EFA;&#x69CB;&#x5B50;&#xFF0C;</span></span><br><span class="line">    <span class="comment">//compiler&#x6703;&#x81EA;&#x52D5;&#x547C;&#x53EB;super()</span></span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="title">extend</span> <span class="title">Parent2</span></span>{</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Son</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="keyword">super</span>(<span class="number">1</span>);</span><br><span class="line">  } </span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>new Son()&#x7684;&#x6642;&#x5019;&#x6703;&#x547C;&#x53EB;Parent2&#x7684;&#x5EFA;&#x69CB;&#x5B50;(public Parent2(int i))&#xFF0C;Parent2&#x7684;&#x5EFA;&#x69CB;&#x5B50;&#x6703;&#x547C;&#x53EB;Parent1&#x7684;&#x5EFA;&#x69CB;&#x5B50;(public Parent1())&#x3002;</p><p><em>&#x6CE8;&#x610F;&#xFF1A;&#x7576;&#x6C92;&#x6709;&#x5BEB;&#x5EFA;&#x69CB;&#x5B50;&#xFF0C;compiler&#x6703;&#x81EA;&#x52D5;&#x7522;&#x751F;&#x4E00;&#x500B;&#x7121;&#x53C3;&#x6578;&#x7684;&#x5EFA;&#x69CB;&#x5B50;&#x3002;&#x5728;&#x7E7C;&#x627F;&#x904E;&#x7A0B;&#x4E2D;&#x82E5;&#x6C92;&#x6709;&#x7279;&#x5225;&#x6307;&#x5B9A;&#x8981;&#x547C;&#x53EB;&#x7236;&#x985E;&#x5225;&#x7684;&#x54EA;&#x4E00;&#x500B;&#x5EFA;&#x69CB;&#x5B50;&#xFF0C;compiler&#x6703;&#x81EA;&#x52D5;&#x547C;&#x53EB;super()&#x3002;</em></p><p>&#x4F86;&#x770B;&#x4E00;&#x500B;&#x4F8B;&#x5B50;&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Base</span> </span>{</span><br><span class="line"><span class="keyword">int</span>i;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Base</span><span class="params">()</span> </span>{</span><br><span class="line">add(<span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> j)</span> </span>{</span><br><span class="line">i += j;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Extension</span> <span class="keyword">extends</span> <span class="title">Base</span> </span>{</span><br><span class="line"><span class="keyword">int</span>i= <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Extension</span><span class="params">()</span> </span>{</span><br><span class="line">add(<span class="number">2</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> j)</span> </span>{</span><br><span class="line">i += j * <span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">exec(<span class="keyword">new</span> Extension());</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">exec</span><span class="params">(Extension base)</span> </span>{</span><br><span class="line">base.add(<span class="number">8</span>);</span><br><span class="line">System.out.println(base.i);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><p>&#x6703;&#x5370;&#x51FA;&#x4EC0;&#x9EBC;&#x6A23;&#x7684;&#x7D50;&#x679C;&#x5462;&#xFF1F;</p><p>&#x5206;&#x6790;&#xFF1A;    </p><ol><li>new Extension()&#x7684;&#x6642;&#x5019;&#x6703;&#x547C;&#x53EB;Base&#x7684;&#x5EFA;&#x69CB;&#x5B50;(public Base())&#xFF0C;&#x547C;&#x53EB;add(2)&#x3002;</li><li>&#x56E0;&#x70BA;Extension&#x6709;&#x8986;&#x5BEB;(override)Base&#x7684;add function&#xFF0C;&#x6240;&#x4EE5;Base&#x5EFA;&#x69CB;&#x5B50;&#x6240;&#x547C;&#x53EB;&#x7684;add(1)&#x662F;&#x547C;&#x53EB;Extension&#x4E2D;&#x7684;add function&#x3002;</li><li>&#x56E0;&#x70BA;&#x591A;&#x578B;&#x7684;&#x95DC;&#x4FC2;&#xFF0C;&#x7576;Base&#x5EFA;&#x69CB;&#x5B50;&#x547C;&#x53EB;add(1)&#xFF0C;&#x88E1;&#x9762;&#x7684;i&#x662F;Extension&#x7684;i&#xFF0C;&#x4E26;&#x4E0D;&#x662F;Base&#x7684;i&#x3002;</li><li>&#x7576;Base&#x5EFA;&#x69CB;&#x5B50;&#x547C;&#x53EB;add(1)&#x5B8C;&#x7562;&#xFF0C;&#x6B64;&#x6642;Extension&#x7684;i&#x70BA;2&#x3002;</li><li>&#x63A5;&#x8457;&#x547C;&#x53EB;Extension&#x7684;&#x5EFA;&#x69CB;&#x5B50;&#xFF0C;&#x6B64;&#x6642;&#x6703;&#x5148;&#x521D;&#x59CB;&#x5316;field&#x8B8A;&#x6578;&#xFF0C;&#x6240;&#x4EE5;i&#x6703;&#x88AB;&#x91CD;&#x8A2D;&#x70BA;3&#x3002;</li><li>&#x4E4B;&#x5F8C;&#x662F;&#x547C;&#x53EB;add(2)&#xFF0C;&#x6B64;&#x6642;i&#x70BA;7&#x3002;Extension&#x7684;&#x521D;&#x59CB;&#x5316;&#x5B8C;&#x7562;&#x3002;</li><li>&#x547C;&#x53EB;add(8)&#x6642;&#xFF0C;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;i = 7 +16 = 23&#xFF0C;&#x6240;&#x4EE5;&#x5370;&#x51FA;23&#x3002;</li></ol><p>&#x5047;&#x5982;&#x5C07;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">exec</span><span class="params">(Extension base)</span></span></span><br></pre></td></tr></table></figure></p><p>&#x6539;&#x6210;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">exec</span><span class="params">(Base base)</span></span></span><br></pre></td></tr></table></figure></p><p>&#x7D50;&#x679C;&#x9084;&#x662F;&#x4E00;&#x6A23;&#x55CE;&#xFF1F;<br>&#x7D50;&#x679C;&#x662F;0&#xFF0C;&#x56E0;&#x70BA;&#x6B64;&#x6642;&#x7684;i&#x6307;&#x7684;&#x662F;Base&#x7684;i&#x3002;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;#x5728;Java&amp;#x4F7F;&amp;#x7528;&amp;#x7E7C;&amp;#x627F;&amp;#x6642;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x5E7E;&amp;#x500B;&amp;#x5C0F;&amp;#x7D30;&amp;#x7BC0;&amp;#xFF0C;&amp;#x4E0D;&amp;#x71
      
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 56. Merge Intervals</title>
    <link href="https://pandaforme.github.io/2016/12/09/LeetCode-Merge-Intervals/"/>
    <id>https://pandaforme.github.io/2016/12/09/LeetCode-Merge-Intervals/</id>
    <published>2016-12-09T09:17:00.000Z</published>
    <updated>2018-05-07T10:21:21.322Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h1><p>Given a collection of intervals, merge all overlapping intervals.</p><p>Example 1:</p><pre><code>Input: [[1,3],[2,6],[8,10],[15,18]]Output: [[1,6],[8,10],[15,18]]Explanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].</code></pre><p>Example 2:</p><pre><code>Input: [[1,4],[4,5]]Output: [[1,5]]Explanation: Intervals [1,4] and [4,5] are considerred overlapping.</code></pre><h1 id="Soultion"><a href="#Soultion" class="headerlink" title="Soultion"></a>Soultion</h1><p>&#x9019;&#x984C;&#x7684;&#x4E3B;&#x8981;&#x5728;&#x8003;&#x5982;&#x4F55;&#x5224;&#x65B7;&#x5169;&#x500B;interval&#x70BA;&#x91CD;&#x758A;&#x7684;&#x6F14;&#x7B97;&#x6CD5;&#x3002;</p><h2 id="&#x600E;&#x9EBC;&#x5224;&#x65B7;&#x5169;&#x500B;interval&#x70BA;&#x91CD;&#x758A;&#xFF1A;"><a href="#&#x600E;&#x9EBC;&#x5224;&#x65B7;&#x5169;&#x500B;interval&#x70BA;&#x91CD;&#x758A;&#xFF1A;" class="headerlink" title="&#x600E;&#x9EBC;&#x5224;&#x65B7;&#x5169;&#x500B;interval&#x70BA;&#x91CD;&#x758A;&#xFF1A;"></a>&#x600E;&#x9EBC;&#x5224;&#x65B7;&#x5169;&#x500B;interval&#x70BA;&#x91CD;&#x758A;&#xFF1A;</h2><p>1.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">i &#xFF1A;     |--------|</span><br><span class="line">i&apos;&#xFF1A;  |-----|</span><br></pre></td></tr></table></figure></p><p>2.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">i &#xFF1A;     |--------|</span><br><span class="line">i&apos;&#xFF1A;      |-----|</span><br></pre></td></tr></table></figure></p><p>3.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">i &#xFF1A;     |--------|</span><br><span class="line">i&apos;&#xFF1A;           |-----|</span><br></pre></td></tr></table></figure></p><p>4.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">i &#xFF1A;     |--------|</span><br><span class="line">i&apos;&#xFF1A;  |--------------|</span><br></pre></td></tr></table></figure></p><p>&#x4EE5;&#x4E0A;&#x70BA;&#x5169;&#x500B;interval&#x91CD;&#x758A;&#x7684;&#x60C5;&#x6CC1;&#xFF0C;&#x53EF;&#x4EE5;&#x6B78;&#x7D0D;&#x51FA;&#x4EE5;&#x4E0B;&#x60C5;&#x6CC1;&#xFF1A;</p><ul><li><code>i.start &lt;= i&apos;.end</code></li><li><code>i&apos;.start &lt;= i.end</code></li></ul><p>&#x77E5;&#x9053;&#x4E0A;&#x8FF0;&#x898F;&#x5247;&#x5F8C;&#x5408;&#x4F75;&#x5C31;&#x8B8A;&#x5F97;&#x5F88;&#x7C21;&#x55AE;&#xFF0C;&#x56E0;&#x70BA;&#x7D66;&#x5B9A;&#x7684;&#x9663;&#x5217;&#x662F;&#x6C92;&#x6709;&#x6392;&#x5E8F;&#x904E;&#x7684;&#xFF0C;&#x5148;&#x4F9D;&#x7167; <code>interval.start</code> &#x6392;&#x5E8F;&#x3002;</p><ol><li>&#x521D;&#x59CB;&#x5316; merge = interval.get(0)</li><li>&#x4F9D;&#x5E8F;&#x6AA2;&#x67E5; interval.get(i) &#x662F;&#x5426;&#x548C; merge &#x91CD;&#x758A;</li><li>&#x82E5;&#x91CD;&#x758A;&#xFF0C;merge = &#x5408;&#x4F75; interval.get(i) &#x548C; merge</li><li>&#x82E5;&#x4E0D;&#x91CD;&#x758A;&#xFF0C;&#x628A; merge &#x5BEB;&#x5165;&#x5230;&#x7D50;&#x679C;&#xFF0C;merge = interval.get(i)</li></ol><p>&#x6709;&#x9EDE;&#x50CF;&#x8CAA;&#x98DF;&#x86C7;&#xFF0C;&#x5C31;&#x4E00;&#x76F4;&#x5403;&#x76F4;&#x5230;&#x4E0D;&#x80FD;&#x5403;&#x70BA;&#x6B62;&#x3002;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Interval&gt; <span class="title">merge</span><span class="params">(List&lt;Interval&gt; intervals)</span> </span>{</span><br><span class="line">    List&lt;Interval&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (intervals.size() == <span class="number">0</span> || intervals.size() == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> intervals;</span><br><span class="line"></span><br><span class="line">    intervals.sort(Comparator.comparingInt(o -&gt; o.start));</span><br><span class="line"></span><br><span class="line">    Interval merge = intervals.get(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; intervals.size(); i++) {</span><br><span class="line">        <span class="keyword">if</span> (isOverlap(merge, intervals.get(i))) {</span><br><span class="line">            merge = <span class="keyword">new</span> Interval(</span><br><span class="line">                    Math.min(merge.start, intervals.get(i).start),</span><br><span class="line">                    Math.max(merge.end, intervals.get(i).end));</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            result.add(merge);</span><br><span class="line">            merge = intervals.get(i);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    result.add(merge);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isOverlap</span><span class="params">(Interval interval1, Interval interval2)</span> </span>{</span><br><span class="line">    <span class="keyword">return</span> interval1.start &lt;= interval2.end &amp;&amp; interval2.start &lt;= interval1.end;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Question&quot;&gt;&lt;a href=&quot;#Question&quot; class=&quot;headerlink&quot; title=&quot;Question&quot;&gt;&lt;/a&gt;Question&lt;/h1&gt;&lt;p&gt;Given a collection of intervals, merge all ove
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://pandaforme.github.io/categories/LeetCode/"/>
    
    
      <category term="Algorithm" scheme="https://pandaforme.github.io/tags/Algorithm/"/>
    
      <category term="LeetCode" scheme="https://pandaforme.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>[Java] lock、tryLock和lockInterruptibly的差別</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-lock%E3%80%81tryLock%E5%92%8ClockInterruptibly%E7%9A%84%E5%B7%AE%E5%88%A5/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-lock、tryLock和lockInterruptibly的差別/</id>
    <published>2016-12-09T09:16:50.000Z</published>
    <updated>2016-12-13T07:24:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5728;Java&#x4E2D;&#x7684;<a href="http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/locks/Lock.html" target="_blank" rel="noopener">Lock</a>&#x4ECB;&#x9762;&#x6709;lock&#x3001;tryLock&#x548C;lockInterruptibly&#x4E09;&#x500B;&#x529F;&#x80FD;&#x5F88;&#x76F8;&#x8FD1;&#x7684;method&#xFF0C;&#x770B;&#x5B8C;javadoc&#x5F8C;&#x9084;&#x662F;&#x641E;&#x4E0D;&#x592A;&#x6E05;&#x695A;&#x5B83;&#x5011;&#x4E4B;&#x9593;&#x7684;&#x5DEE;&#x7570;&#x6027;&#xFF0C;&#x7D42;&#x65BC;&#x627E;&#x5230;&#x4E00;&#x7BC7;&#x89E3;&#x91CB;&#x6E05;&#x695A;&#x7684;&#x6587;&#x7AE0;&#x4E86;&#x3002;</p><ul><li>lock()&#xFF1A;&#x82E5;lock&#x88AB;thread A&#x53D6;&#x5F97;&#xFF0C;thread B&#x6703;&#x9032;&#x5165;block&#x72C0;&#x614B;&#xFF0C;&#x76F4;&#x5230;&#x53D6;&#x5F97;lock&#x3002;</li><li>tryLock()&#xFF1A;&#x82E5;&#x7576;&#x4E0B;&#x4E0D;&#x80FD;&#x53D6;&#x5F97;lock&#xFF0C;thread&#x5C31;&#x6703;&#x653E;&#x68C4;&#x3002;</li><li>lockInterruptibly()&#xFF1A;&#x8DDF;lock()&#x60C5;&#x6CC1;&#x4E00;&#x4E0B;&#xFF0C;&#x4F46;&#x662F;thread B&#x53EF;&#x4EE5;&#x900F;&#x904E;interrupt&#x88AB;&#x559A;&#x9192;&#x8655;&#x7406;InterruptedException&#x3002;</li></ul><p>&#x7BC4;&#x4F8B;&#xFF1A;</p><ul><li>lock()&#xFF1A;</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LockDemo</span> </span>{</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> ReentrantLocklock;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LockDemo</span><span class="params">()</span> </span>{</span><br><span class="line">lock = <span class="keyword">new</span> ReentrantLock();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>{</span><br><span class="line">LockDemo lockDemo = <span class="keyword">new</span> LockDemo();</span><br><span class="line">Runnable runnable = <span class="keyword">new</span> Runnable() {</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</span><br><span class="line">lockDemo.lock.lock();</span><br><span class="line">System.out.println(String.format(<span class="string">&quot;%s %s locked&quot;</span>, <span class="keyword">new</span> Date(System.currentTimeMillis()), Thread.currentThread().getName()));</span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line">Thread threadA = <span class="keyword">new</span> Thread(runnable, <span class="string">&quot;Thread A&quot;</span>);</span><br><span class="line">Thread threadB = <span class="keyword">new</span> Thread(runnable, <span class="string">&quot;Thread B&quot;</span>);</span><br><span class="line"></span><br><span class="line">threadA.start();</span><br><span class="line">threadB.start();</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x53EF;&#x4EE5;&#x767C;&#x73FE;ThreadB&#x5448;&#x73FE;block&#x72C0;&#x614B;&#xFF0C;&#x4E00;&#x76F4;&#x5728;&#x7B49;&#x5F85;Thread A&#x91CB;&#x653E;lock&#x3002;</p><ul><li>tryLock()&#xFF1A;</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TryLockDemo</span> </span>{</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> ReentrantLocklock;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">TryLockDemo</span><span class="params">()</span> </span>{</span><br><span class="line">lock = <span class="keyword">new</span> ReentrantLock();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>{</span><br><span class="line">TryLockDemo lockDemo = <span class="keyword">new</span> TryLockDemo();</span><br><span class="line">Runnable runnable = <span class="keyword">new</span> Runnable() {</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (lockDemo.lock.tryLock()) {</span><br><span class="line">System.out.println(String.format(<span class="string">&quot;%s %s locked&quot;</span>, <span class="keyword">new</span> Date(System.currentTimeMillis()), Thread.currentThread().getName()));</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line">Thread threadA = <span class="keyword">new</span> Thread(runnable, <span class="string">&quot;Thread A&quot;</span>);</span><br><span class="line">Thread threadB = <span class="keyword">new</span> Thread(runnable, <span class="string">&quot;Thread B&quot;</span>);</span><br><span class="line"></span><br><span class="line">threadA.start();</span><br><span class="line">threadB.start();</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x82E5;&#x4E00;&#x958B;&#x59CB;lock&#x88AB;Thread A&#x53D6;&#x5F97;&#xFF0C;Thread B&#x900F;&#x904E;tryLock()&#x7576;&#x4E0B;&#x82E5;&#x6C92;&#x6709;&#x53D6;&#x5F97;&#x5230;lock&#xFF0C;&#x5C31;&#x6703;&#x653E;&#x68C4;&#x3002;</p><ul><li>lockInterruptibly()&#xFF1A;</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LockInterruptiblyDemo</span> </span>{</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> ReentrantLocklock;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LockInterruptiblyDemo</span><span class="params">()</span> </span>{</span><br><span class="line">lock = <span class="keyword">new</span> ReentrantLock();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>{</span><br><span class="line">LockInterruptiblyDemo lockDemo = <span class="keyword">new</span> LockInterruptiblyDemo();</span><br><span class="line"></span><br><span class="line">Runnable runnable = <span class="keyword">new</span> Runnable() {</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">lockDemo.lock.lockInterruptibly();</span><br><span class="line">System.out.println(String.format(<span class="string">&quot;%s %s locked&quot;</span>, <span class="keyword">new</span> Date(System.currentTimeMillis()), Thread.currentThread().getName()));</span><br><span class="line">}</span><br><span class="line"><span class="keyword">catch</span> (InterruptedException e) {</span><br><span class="line">System.out.println(String.format(<span class="string">&quot;%s %s interrupted&quot;</span>, <span class="keyword">new</span> Date(System.currentTimeMillis()), Thread.currentThread().getName()));</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line">Thread threadA = <span class="keyword">new</span> Thread(runnable, <span class="string">&quot;Thread A&quot;</span>);</span><br><span class="line">Thread threadB = <span class="keyword">new</span> Thread(runnable, <span class="string">&quot;Thread B&quot;</span>);</span><br><span class="line"></span><br><span class="line">threadA.start();</span><br><span class="line">Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">threadB.start();</span><br><span class="line">threadB.interrupt();</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>Thread A&#x5148;&#x53D6;&#x5F97;lock&#xFF0C;Thread B&#x7121;&#x6CD5;&#x53D6;&#x5F97;lock&#x9032;&#x5165;block&#x72C0;&#x614B;&#xFF0C;&#x53EF;&#x4EE5;&#x900F;&#x904E;&#x767C;&#x51FA;interrupt&#x65B9;&#x5F0F;&#x559A;&#x9192;Thread B&#x3002;</p><p>Lock&#x548C;synchronized&#x5E7E;&#x4E4E;&#x662F;&#x5927;&#x540C;&#x5C0F;&#x7570;&#xFF0C;&#x4F46;&#x662F;Lock&#x53EF;&#x4EE5;&#x505A;&#x66F4;&#x7D30;&#x5FAE;&#x7684;&#x540C;&#x6B65;&#x65B9;&#x5F0F;&#x3002;</p><h4 id="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</h4><p><a href="http://www.dewen.io/q/9077" target="_blank" rel="noopener">&#x7528;&#x901A;&#x4FD7;&#x7684;&#x8A9E;&#x8A00;&#x8AAA;&#x8AAA;lock&#x548C;lockInterruptibly&#x7684;&#x5340;&#x5225;</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;#x5728;Java&amp;#x4E2D;&amp;#x7684;&lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/locks/Lock.html&quot; target=&quot;_blank&quot; rel=&quot;
      
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
</feed>
