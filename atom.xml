<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Programming blog</title>
  <subtitle>This is a programming blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://pandaforme.github.io/"/>
  <updated>2017-05-13T16:20:49.000Z</updated>
  <id>https://pandaforme.github.io/</id>
  
  <author>
    <name>pandaforme</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[Scala] The importance of recursion</title>
    <link href="https://pandaforme.github.io/2017/04/26/Scala-The-importance-of-recursion/"/>
    <id>https://pandaforme.github.io/2017/04/26/Scala-The-importance-of-recursion/</id>
    <published>2017-04-26T09:55:00.000Z</published>
    <updated>2017-05-13T16:20:49.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="&#x905E;&#x8FF4;"><a href="#&#x905E;&#x8FF4;" class="headerlink" title="&#x905E;&#x8FF4;"></a>&#x905E;&#x8FF4;</h1><p>&#x5728;functional programming&#x4E16;&#x754C;&#x4E2D;&#x662F;&#x4E0D;&#x51C6;&#x8A31;&#x6709;mutable&#x8B8A;&#x6578;&#xFF0C;&#x610F;&#x5473;&#x8457;&#x6211;&#x5011;&#x719F;&#x6089;&#x7684; <code>while</code>, <code>for</code> &#x8FF4;&#x5708;&#x90FD;&#x662F;&#x7981;&#x6B62;&#x4F7F;&#x7528;&#x3002;<br>&#x90A3;&#x6211;&#x5011;&#x61C9;&#x8A72;&#x600E;&#x9EBC;&#x8FA6;&#x5462;&#xFF1F; &#x9019;&#x908A;&#x6703;&#x8209;&#x500B;&#x6578;&#x500B;&#x4F8B;&#x5B50;&#xFF0C;&#x4F86;&#x89E3;&#x91CB;&#x662F;&#x900F;&#x904E;&#x905E;&#x8FF4;&#x65B9;&#x5F0F;&#x4F86;&#x5B8C;&#x6210; <code>while</code> &#x6216; <code>for</code> &#x8FF4;&#x5708;&#x3002;</p>
<h2 id="&#x5F9E;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x627E;&#x51FA;&#x6700;&#x5927;&#x503C;"><a href="#&#x5F9E;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x627E;&#x51FA;&#x6700;&#x5927;&#x503C;" class="headerlink" title="&#x5F9E;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x627E;&#x51FA;&#x6700;&#x5927;&#x503C;"></a>&#x5F9E;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x627E;&#x51FA;&#x6700;&#x5927;&#x503C;</h2><p>&#x5982;&#x679C;&#x5728; <code>Java</code> &#x6211;&#x5011;&#x6703;&#x600E;&#x9EBC;&#x505A;&#x5462;&#xFF1F;</p>
<ol>
<li>&#x5BA3;&#x500B;&#x4E00;&#x500B;&#x8B8A;&#x6578;(max)&#x5B58;&#x653E;&#x76EE;&#x524D;&#x7684;&#x6700;&#x5927;&#x503C;</li>
<li>&#x900F;&#x904E;<code>while</code> &#x6216; <code>for</code> &#x8FF4;&#x5708;&#xFF0C;&#x5C07;&#x4E32;&#x5217;&#x4E2D;&#x7684;&#x6BCF;&#x500B;&#x5143;&#x7D20;&#x8DDF;&#x6211;&#x5011;&#x5BA3;&#x544A;&#x7684;&#x8B8A;&#x6578;(max)&#x6BD4;&#x5927;&#x5C0F;<br>2.1 &#x82E5;&#x5143;&#x7D20;&#x7684;&#x503C;&#x5927;&#x65BC;max&#xFF0C;max&#x7684;&#x503C;&#x5C31;&#x6539;&#x70BA;&#x6B64;&#x5143;&#x7D20;&#x7684;&#x503C;<br>2.2 &#x82E5;&#x5143;&#x7D20;&#x7684;&#x503C;&#x5C0F;&#x65BC;&#x6216;&#x7B49;&#x65BC;max&#xFF0C;&#x4E0D;&#x505A;&#x4EFB;&#x4F55;&#x4E8B;</li>
</ol>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> max = <span class="type">Int</span>.<span class="type">MinValue</span></div><div class="line"></div><div class="line"><span class="keyword">for</span>(i &lt;- <span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)){</div><div class="line">  <span class="keyword">if</span>(i &gt; max)</div><div class="line">    max = i</div><div class="line">}</div></pre></td></tr></table></figure>
<p>&#x900F;&#x904E;&#x905E;&#x8FF4;&#x65B9;&#x5F0F;&#x6211;&#x5011;&#x6703;&#x600E;&#x9EBC;&#x89E3;&#x6C7A;&#x5462;&#xFF1F;</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">findMax(<span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>))</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">findMax</span></span>(list: <span class="type">List</span>[<span class="type">Int</span>]): <span class="type">Int</span> = {</div><div class="line">   list <span class="keyword">match</span>{</div><div class="line">     <span class="comment">// &#x5047;&#x5982;&#x662F;&#x7A7A;&#x7684;&#x4E32;&#x5217;&#xFF0C;&#x6211;&#x5011;&#x56DE;&#x50B3;0</span></div><div class="line">     <span class="keyword">case</span> <span class="type">Nil</span> =&gt; <span class="number">0</span></div><div class="line">     <span class="comment">// &#x5047;&#x5982;&#x53EA;&#x6709;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x7684;&#x4E32;&#x5217;&#xFF0C;&#x90A3;&#x6700;&#x5927;&#x503C;&#x5C31;&#x70BA;&#x8A72;&#x5143;&#x7D20;</span></div><div class="line">     <span class="keyword">case</span> h :: <span class="type">Nil</span> =&gt; h</div><div class="line">     </div><div class="line">     <span class="comment">// &#x4E3B;&#x8981;&#x908F;&#x8F2F;</span></div><div class="line">     <span class="keyword">case</span> h :: t =&gt; <span class="type">Math</span>.max(h, findMax(t))</div><div class="line">   }</div><div class="line">}</div></pre></td></tr></table></figure>
<ul>
<li>&#x5728;&#x8FF4;&#x5708;&#x7248;&#x672C;&#x4E2D;&#xFF0C;&#x9010;&#x4E00;&#x6BCF;&#x500B;&#x5143;&#x7D20;&#x8DDF;&#x67D0;&#x4E00;&#x500B;mutable&#x8B8A;&#x6578;&#x6BD4;&#x5927;&#x5C0F;&#x3002;</li>
<li>&#x5728;&#x8FF4;&#x905E;&#x7248;&#x672C;&#x4E2D;&#xFF0C;&#x7B2C;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x8DDF;&#x53BB;&#x9664;&#x7B2C;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x7684;&#x4E32;&#x5217;&#x7684;&#x6700;&#x5927;&#x503C;&#x6BD4;&#x5927;&#x5C0F;&#x3002;</li>
</ul>
<p>&#x8FF4;&#x905E;&#x7684;&#x5BEB;&#x6CD5;&#x66F4;&#x662F;&#x7C21;&#x6F54;&#x548C;&#x8868;&#x9054;&#x51FA;&#x6574;&#x500B;&#x7A0B;&#x5F0F;&#x4E3B;&#x8981;&#x908F;&#x8F2F;&#xFF0C;&#x6211;&#x5011;&#x518D;&#x4F86;&#x591A;&#x8A66;&#x770B;&#x770B;&#x5E7E;&#x500B;&#x984C;&#x76EE;&#x3002;</p>
<h2 id="&#x5F9E;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x627E;&#x51FA;&#x6700;&#x5C0F;&#x503C;"><a href="#&#x5F9E;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x627E;&#x51FA;&#x6700;&#x5C0F;&#x503C;" class="headerlink" title="&#x5F9E;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x627E;&#x51FA;&#x6700;&#x5C0F;&#x503C;"></a>&#x5F9E;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x627E;&#x51FA;&#x6700;&#x5C0F;&#x503C;</h2><p>&#x505A;&#x6CD5;&#x8DDF;&#x627E;&#x51FA;&#x6700;&#x5927;&#x503C;&#x985E;&#x4F3C;&#xFF0C;&#x7B2C;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x8DDF;&#x53BB;&#x9664;&#x7B2C;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x7684;&#x4E32;&#x5217;&#x7684;&#x6700;&#x5C0F;&#x503C;&#x6BD4;&#x5927;&#x5C0F;&#x3002;</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">findMin(<span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>))</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">findMin</span></span>(list: <span class="type">List</span>[<span class="type">Int</span>]): <span class="type">Int</span> = {</div><div class="line">   list <span class="keyword">match</span>{</div><div class="line">     <span class="comment">// &#x5047;&#x5982;&#x662F;&#x7A7A;&#x7684;&#x4E32;&#x5217;&#xFF0C;&#x6211;&#x5011;&#x56DE;&#x50B3;0</span></div><div class="line">     <span class="keyword">case</span> <span class="type">Nil</span> =&gt; <span class="number">0</span></div><div class="line">     <span class="comment">// &#x5047;&#x5982;&#x53EA;&#x6709;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x7684;&#x4E32;&#x5217;&#xFF0C;&#x90A3;&#x6700;&#x5C0F;&#x503C;&#x5C31;&#x70BA;&#x8A72;&#x5143;&#x7D20;</span></div><div class="line">     <span class="keyword">case</span> h :: <span class="type">Nil</span> =&gt; h</div><div class="line">     </div><div class="line">     <span class="comment">// &#x4E3B;&#x8981;&#x908F;&#x8F2F;</span></div><div class="line">     <span class="keyword">case</span> h :: t =&gt; <span class="type">Math</span>.min(h, findMin(t))</div><div class="line">   }</div><div class="line">}</div></pre></td></tr></table></figure>
<h2 id="&#x6AA2;&#x67E5;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x662F;&#x5426;&#x5B58;&#x5728;&#x67D0;&#x500B;&#x7279;&#x5B9A;&#x503C;"><a href="#&#x6AA2;&#x67E5;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x662F;&#x5426;&#x5B58;&#x5728;&#x67D0;&#x500B;&#x7279;&#x5B9A;&#x503C;" class="headerlink" title="&#x6AA2;&#x67E5;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x662F;&#x5426;&#x5B58;&#x5728;&#x67D0;&#x500B;&#x7279;&#x5B9A;&#x503C;"></a>&#x6AA2;&#x67E5;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x4E2D;&#x662F;&#x5426;&#x5B58;&#x5728;&#x67D0;&#x500B;&#x7279;&#x5B9A;&#x503C;</h2><p>&#x6AA2;&#x67E5;&#x7B2C;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x662F;&#x5426;&#x7B49;&#x65BC;&#x76EE;&#x6A19;&#x503C;&#x6216;&#x662F;&#x53BB;&#x9664;&#x7B2C;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x7684;&#x4E32;&#x5217;&#x6709;&#x76EE;&#x6A19;&#x503C;</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">find(<span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>), <span class="number">5</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">find</span></span>(list: <span class="type">List</span>[<span class="type">Int</span>], target: <span class="type">Int</span>): <span class="type">Boolean</span> = {</div><div class="line">   list <span class="keyword">match</span>{</div><div class="line">     <span class="comment">// &#x5047;&#x5982;&#x662F;&#x7A7A;&#x7684;&#x4E32;&#x5217;&#xFF0C;&#x56DE;&#x50B3;false</span></div><div class="line">     <span class="keyword">case</span> <span class="type">Nil</span> =&gt; <span class="literal">false</span></div><div class="line">     <span class="comment">// &#x5047;&#x5982;&#x53EA;&#x6709;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x7684;&#x4E32;&#x5217;&#xFF0C;&#x800C;&#x4E14;&#x8A72;&#x5143;&#x7D20;&#x7B49;&#x65BC;target&#xFF0C;&#x56DE;&#x50B3;true</span></div><div class="line">     <span class="keyword">case</span> h :: <span class="type">Nil</span> <span class="keyword">if</span> (h == target) =&gt; <span class="literal">true</span></div><div class="line">     </div><div class="line">     <span class="comment">// &#x4E3B;&#x8981;&#x908F;&#x8F2F;</span></div><div class="line">     <span class="keyword">case</span> h :: t =&gt; (h == target) || find(t, target)</div><div class="line">   }</div><div class="line">}</div></pre></td></tr></table></figure>
<h2 id="&#x53CD;&#x8F49;&#x4E00;&#x500B;&#x5B57;&#x4E32;"><a href="#&#x53CD;&#x8F49;&#x4E00;&#x500B;&#x5B57;&#x4E32;" class="headerlink" title="&#x53CD;&#x8F49;&#x4E00;&#x500B;&#x5B57;&#x4E32;"></a>&#x53CD;&#x8F49;&#x4E00;&#x500B;&#x5B57;&#x4E32;</h2><p>&#x5148;&#x53CD;&#x8F49;&#x53BB;&#x9664;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x5143;&#x7684;&#x4E32;&#x5217;&#xFF0C;&#x4E4B;&#x5F8C;&#x518D;&#x5C07;&#x7B2C;&#x4E00;&#x5B57;&#x5143;&#x653E;&#x5728;&#x6700;&#x5F8C;&#x9762;</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">reverse(<span class="string">&quot;I should learn scala seriously!&quot;</span>.toList)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">reverse</span></span>(list: <span class="type">List</span>[<span class="type">Char</span>]): <span class="type">String</span> = {</div><div class="line">  list <span class="keyword">match</span> {</div><div class="line">    <span class="comment">// &#x5047;&#x5982;&#x662F;&#x7A7A;&#x7684;&#x4E32;&#x5217;&#xFF0C;&#x56DE;&#x50B3;false</span></div><div class="line">    <span class="keyword">case</span> <span class="type">Nil</span> =&gt; <span class="string">&quot;&quot;</span></div><div class="line">    <span class="comment">// &#x5047;&#x5982;&#x53EA;&#x6709;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x7684;&#x4E32;&#x5217;&#xFF0C;&#x56DE;&#x50B3;&#x8A72;&#x5143;&#x7D20;</span></div><div class="line">    <span class="keyword">case</span> h :: <span class="type">Nil</span> =&gt; h.toString</div><div class="line"></div><div class="line">    <span class="comment">// &#x4E3B;&#x8981;&#x908F;&#x8F2F;</span></div><div class="line">    <span class="keyword">case</span> h :: t =&gt; reverse(t) + h</div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>
<h2 id="&#x5224;&#x65B7;&#x4E00;&#x500B;&#x5B57;&#x4E32;&#x662F;&#x5426;&#x70BA;&#x53E6;&#x5916;&#x4E00;&#x500B;&#x5B57;&#x4E32;&#x7684;&#x5B50;&#x5B57;&#x4E32;"><a href="#&#x5224;&#x65B7;&#x4E00;&#x500B;&#x5B57;&#x4E32;&#x662F;&#x5426;&#x70BA;&#x53E6;&#x5916;&#x4E00;&#x500B;&#x5B57;&#x4E32;&#x7684;&#x5B50;&#x5B57;&#x4E32;" class="headerlink" title="&#x5224;&#x65B7;&#x4E00;&#x500B;&#x5B57;&#x4E32;&#x662F;&#x5426;&#x70BA;&#x53E6;&#x5916;&#x4E00;&#x500B;&#x5B57;&#x4E32;&#x7684;&#x5B50;&#x5B57;&#x4E32;"></a>&#x5224;&#x65B7;&#x4E00;&#x500B;&#x5B57;&#x4E32;&#x662F;&#x5426;&#x70BA;&#x53E6;&#x5916;&#x4E00;&#x500B;&#x5B57;&#x4E32;&#x7684;&#x5B50;&#x5B57;&#x4E32;</h2><p>&#x5B50;&#x5B57;&#x4E32;&#x7684;&#x5B9A;&#x7FA9;&#xFF1A;&#x5B57;&#x6578;&#xFF0C;&#x5167;&#x5BB9;&#x548C;&#x9806;&#x5E8F;&#x9700;&#x8981;&#x7B26;&#x5408;&#xFF0C;&#x7A7A;&#x5B57;&#x4E32;&#x70BA;&#x4EFB;&#x4F55;&#x5B57;&#x4E32;&#x7684;&#x5B50;&#x5B57;&#x4E32;<br>&#x4F8B;&#x5982;&#xFF1A;</p>
<ul>
<li>&#x201C;abc&#x201D; &#x70BA; &#x201C;XXXYYYabc&#x201D;&#x7684;&#x5B50;&#x5B57;&#x4E32;</li>
<li>&#x201C;XXXY&#x201D; &#x70BA; &#x201C;XXXYYYabc&#x201D;&#x7684;&#x5B50;&#x5B57;&#x4E32;</li>
<li>&#x201C;&#x201D; &#x70BA; &#x201C;XXXYYYabc&#x201D;&#x7684;&#x5B50;&#x5B57;&#x4E32;</li>
<li>&#x201C;ABC&#x201D; &#x4E0D;&#x70BA; &#x201C;XXXYYYabc&#x201D;&#x7684;&#x5B50;&#x5B57;&#x4E32;</li>
<li>&#x201C;QQWW&#x201D; &#x4E0D;&#x70BA; &#x201C;XXXYYYabc&#x201D;&#x7684;&#x5B50;&#x5B57;&#x4E32;</li>
<li>&#x201C;XXXaYYY&#x201D; &#x4E0D;&#x70BA; &#x201C;XXXYYYabc&#x201D;&#x7684;&#x5B50;&#x5B57;&#x4E32;</li>
</ul>
<p>&#x5148;&#x6BD4;&#x8F03;&#x4E3B;&#x8981;&#x5B57;&#x4E32;&#x548C;&#x5B50;&#x5B57;&#x4E32;&#x7684;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x6BCD;&#x662F;&#x5426;&#x4E00;&#x6A23;&#xFF0C;</p>
<ul>
<li>&#x82E5;&#x4E00;&#x6A23;&#x5247;&#x9019;&#x5169;&#x500B;&#x5B57;&#x4E32;&#x53BB;&#x9664;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x6BCD;&#x7E7C;&#x7E8C;&#x6BD4;</li>
<li>&#x82E5;&#x4E0D;&#x4E00;&#x6A23;&#xFF0C;&#x4E3B;&#x8981;&#x5B57;&#x4E32;&#x53BB;&#x9664;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x6BCD;&#x548C;&#x5B50;&#x5B57;&#x4E32;&#x7E7C;&#x7E8C;&#x6BD4;</li>
</ul>
<p>&#x4F8B;&#x5982;&#xFF1A;<br>&#x4E3B;&#x8981;&#x5B57;&#x4E32;&#xFF1A; &#x201C;abcdefghi&#x201D;<br>&#x5B50;&#x5B57;&#x4E32;: &#x201C;abc&#x201D;<br>&#x6AA2;&#x67E5;&#x4E3B;&#x8981;&#x5B57;&#x4E32;&#x524D;&#x4E09;&#x500B;&#x5B57;&#x6BCD;&#xFF08;abc&#xFF09;&#x662F;&#x5426;&#x548C;&#x5B50;&#x5B57;&#x4E32;&#xFF08;abc&#xFF09;&#x4E00;&#x6A23;&#xFF0C;&#x82E5;&#x4E00;&#x6A23;&#x5C31;&#x56DE;&#x50B3;<code>true</code></p>
<p>&#x4E3B;&#x8981;&#x5B57;&#x4E32;&#xFF1A; &#x201C;abcdefghi&#x201D;<br>&#x5B50;&#x5B57;&#x4E32;: &#x201C;defgh&#x201D;<br>&#x6AA2;&#x67E5;&#x4E3B;&#x8981;&#x5B57;&#x4E32;&#x524D;&#x4E94;&#x500B;&#x5B57;&#x6BCD;&#xFF08;abcde&#xFF09;&#x662F;&#x5426;&#x548C;&#x5B50;&#x5B57;&#x4E32;&#xFF08;defgh&#xFF09;&#x4E00;&#x6A23;&#xFF0C;&#x82E5;&#x4E0D;&#x4E00;&#x6A23;&#xFF0C;<br>&#x5247; &#x201C;bcdefghi&#x201D; &#x548C; &#x201C;defgh&#x201D; &#x7E7C;&#x7E8C;&#x6BD4;</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">println(isSubString(<span class="string">&quot;I should learn scala seriously!&quot;</span>.toList, <span class="string">&quot;scala&quot;</span>.toList))</div><div class="line">println(isSubString(<span class="string">&quot;I should learn scala seriously!&quot;</span>.toList, <span class="string">&quot;XXOO&quot;</span>.toList))</div><div class="line">println(isSubString(<span class="string">&quot;I should learn scala seriously!&quot;</span>.toList, <span class="string">&quot;scaxxyyla&quot;</span>.toList))</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">isSubString</span></span>(original: <span class="type">List</span>[<span class="type">Char</span>], target: <span class="type">List</span>[<span class="type">Char</span>]): <span class="type">Boolean</span> = {</div><div class="line">  (original, target) <span class="keyword">match</span> {</div><div class="line">    <span class="keyword">case</span> (<span class="type">Nil</span>, _) =&gt; <span class="literal">false</span></div><div class="line">    <span class="keyword">case</span> (_, <span class="type">Nil</span>) =&gt; <span class="literal">true</span></div><div class="line">    <span class="keyword">case</span> (o :: <span class="type">Nil</span>, t :: <span class="type">Nil</span>) <span class="keyword">if</span> (o == t) =&gt; <span class="literal">true</span></div><div class="line">    <span class="keyword">case</span> (o :: <span class="type">Nil</span>, t :: <span class="type">Nil</span>) <span class="keyword">if</span> (o != t) =&gt; <span class="literal">false</span></div><div class="line">    <span class="keyword">case</span> (o, t) <span class="keyword">if</span> (o.take(t.length) == t) =&gt; <span class="literal">true</span></div><div class="line">    <span class="keyword">case</span> (oh :: ot, t) =&gt; isSubString(ot, t)</div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>
<h2 id="&#x5C07;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x7531;&#x5C0F;&#x6392;&#x5230;&#x5927;"><a href="#&#x5C07;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x7531;&#x5C0F;&#x6392;&#x5230;&#x5927;" class="headerlink" title="&#x5C07;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x7531;&#x5C0F;&#x6392;&#x5230;&#x5927;"></a>&#x5C07;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x7531;&#x5C0F;&#x6392;&#x5230;&#x5927;</h2><p>&#x6211;&#x5011;&#x4F86;&#x5BE6;&#x4F5C;<a href="https://zh.wikipedia.org/wiki/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F" target="_blank" rel="external">Quicksort</a></p>
<ol>
<li>&#x5F9E;&#x6578;&#x5217;&#x4E2D;&#x6311;&#x51FA;&#x4E00;&#x500B;&#x5143;&#x7D20;&#xFF0C;&#x7A31;&#x70BA; &#x201C;&#x57FA;&#x6E96;&#x201D;&#xFF08;pivot&#xFF09;&#x3002;</li>
<li>&#x91CD;&#x65B0;&#x6392;&#x5E8F;&#x6578;&#x5217;&#xFF0C;&#x6240;&#x6709;&#x6BD4;&#x57FA;&#x6E96;&#x503C;&#x5C0F;&#x7684;&#x5143;&#x7D20;&#x64FA;&#x653E;&#x5728;&#x57FA;&#x6E96;&#x524D;&#x9762;&#xFF0C;&#x6240;&#x6709;&#x6BD4;&#x57FA;&#x6E96;&#x503C;&#x5927;&#x7684;&#x5143;&#x7D20;&#x64FA;&#x5728;&#x57FA;&#x6E96;&#x5F8C;&#x9762;&#xFF08;&#x76F8;&#x540C;&#x7684;&#x6578;&#x53EF;&#x4EE5;&#x5230;&#x4EFB;&#x4E00;&#x908A;&#xFF09;&#x3002;&#x5728;&#x9019;&#x500B;&#x5206;&#x5272;&#x7D50;&#x675F;&#x4E4B;&#x5F8C;&#xFF0C;&#x8A72;&#x57FA;&#x6E96;&#x5C31;&#x8655;&#x65BC;&#x6578;&#x5217;&#x7684;&#x4E2D;&#x9593;&#x4F4D;&#x7F6E;&#x3002;&#x9019;&#x500B;&#x7A31;&#x70BA;&#x5206;&#x5272;&#xFF08;partition&#xFF09;&#x64CD;&#x4F5C;&#x3002;</li>
<li>&#x905E;&#x8FF4;&#x5730;&#xFF08;recursively&#xFF09;&#x628A;&#x5C0F;&#x65BC;&#x57FA;&#x6E96;&#x503C;&#x5143;&#x7D20;&#x7684;&#x5B50;&#x6578;&#x5217;&#x548C;&#x5927;&#x65BC;&#x57FA;&#x6E96;&#x503C;&#x5143;&#x7D20;&#x7684;&#x5B50;&#x6578;&#x5217;&#x6392;&#x5E8F;&#x3002;</li>
</ol>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">quicksort(<span class="type">List</span>(<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">10</span>))</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">quicksort</span></span>(list: <span class="type">List</span>[<span class="type">Int</span>]): <span class="type">List</span>[<span class="type">Int</span>] = {</div><div class="line">  list <span class="keyword">match</span> {</div><div class="line">    <span class="keyword">case</span> <span class="type">Nil</span> =&gt; <span class="type">Nil</span></div><div class="line">    <span class="keyword">case</span> h :: <span class="type">Nil</span> =&gt; <span class="type">List</span>(h)</div><div class="line">    <span class="keyword">case</span> h :: t =&gt; quicksort(t.filter(_ &lt;= h)) ::: h :: quicksort(t.filter(_ &gt; h))</div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>
<h2 id="&#x5BEB;&#x51FA;&#x8CBB;&#x6C0F;&#x6578;&#x5217;"><a href="#&#x5BEB;&#x51FA;&#x8CBB;&#x6C0F;&#x6578;&#x5217;" class="headerlink" title="&#x5BEB;&#x51FA;&#x8CBB;&#x6C0F;&#x6578;&#x5217;"></a>&#x5BEB;&#x51FA;&#x8CBB;&#x6C0F;&#x6578;&#x5217;</h2><p>&#x4F55;&#x8B02;&#x8CBB;&#x6C0F;&#x6578;&#x5217;&#xFF1A;<a href="https://zh.wikipedia.org/wiki/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97" target="_blank" rel="external">&#x8CBB;&#x6C0F;&#x6578;&#x5217;</a></p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">fib(<span class="number">6</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span></span>(n: <span class="type">Int</span>): <span class="type">Int</span> = {</div><div class="line">  n <span class="keyword">match</span> {</div><div class="line">    <span class="keyword">case</span> <span class="number">0</span> =&gt; <span class="number">0</span></div><div class="line">    <span class="keyword">case</span> <span class="number">1</span> =&gt; <span class="number">1</span></div><div class="line">    <span class="keyword">case</span> _ =&gt; fib(n - <span class="number">1</span>) + fib(n - <span class="number">2</span>)</div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>
<p>&#x7D93;&#x904E;&#x5E7E;&#x6B21;&#x7684;&#x7DF4;&#x7FD2;&#xFF0C;&#x6211;&#x5011;&#x61C9;&#x8A72;&#x5927;&#x6982;&#x53EF;&#x4EE5;&#x6162;&#x6162;&#x638C;&#x63E1;&#x5230;&#x600E;&#x9EBC;&#x904B;&#x7528;&#x905E;&#x8FF4;&#x4F86;&#x9054;&#x5230;&#x8FF4;&#x5708;&#x76EE;&#x7684;&#x3002;</p>
<ol>
<li>&#x5148;&#x628A;&#x4E3B;&#x8981;&#x908F;&#x8F2F;&#x5BEB;&#x51FA;&#x4F86;</li>
<li>&#x518D;&#x628A;&#x908A;&#x754C;&#x689D;&#x4EF6;&#x8A2D;&#x597D;&#xFF0C;&#x6C92;&#x6709;&#x908A;&#x754C;&#x689D;&#x4EF6;&#x5C31;&#x6703;&#x7121;&#x7AAE;&#x7684;&#x8DD1;&#x4E0B;&#x53BB;&#x2026;<br>&#x905E;&#x8FF4;&#x4E3B;&#x8981;&#x662F;&#x900F;&#x904E;&#x81EA;&#x6211;&#x547C;&#x53EB;&#xFF0C;&#x628A;&#x6BCF;&#x4E00;&#x6B65;&#x7684;&#x72C0;&#x614B;&#x653E;&#x5728; <code>stack</code>&#xFF0C;&#x7B49;&#x8D70;&#x5230;&#x908A;&#x754C;&#x56DE;&#x50B3;&#x908A;&#x754C;&#x503C;&#x6216;&#x5B8C;&#x6210;&#x908A;&#x754C;&#x689D;&#x4EF6;&#x5F8C;&#xFF0C;&#x518D;&#x56DE;&#x6EAF;&#x56DE;&#x53BB;&#x3002;</li>
</ol>
<p>&#x628A;&#x554F;&#x984C;&#x900F;&#x904E;<a href="https://zh.wikipedia.org/wiki/%E5%88%86%E6%B2%BB%E6%B3%95" target="_blank" rel="external">Divide and conquer</a>&#x65B9;&#x5F0F;&#xFF0C;<br>&#x5927;&#x554F;&#x984C;&#x5206;&#x89E3;&#x6210;&#x6578;&#x500B;&#x5C0F;&#x554F;&#x984C;&#xFF0C;&#x82E5;&#x5C0F;&#x554F;&#x984C;&#x898F;&#x6A21;&#x8F03;&#x5C0F;&#x4E14;&#x6613;&#x65BC;&#x89E3;&#x6C7A;&#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x89E3;&#x3002;&#x5426;&#x5247;&#xFF0C;&#x905E;&#x6B78;&#x5730;&#x89E3;&#x6C7A;&#x5404;&#x5C0F;&#x554F;&#x984C;&#x3002;<br>&#x6700;&#x5F8C;&#x518D;&#x5C07;&#x6BCF;&#x500B;&#x5C0F;&#x554F;&#x984C;&#x7684;&#x7D50;&#x679C;&#x9010;&#x4E00;&#x5408;&#x4F75;&#x8D77;&#x4F86;&#x3002;</p>
<p>&#x905E;&#x8FF4;&#x7684;&#x5BEB;&#x6CD5;&#x5F88;&#x7C21;&#x6F54;&#xFF0C;&#x4F46;&#x662F;&#x6700;&#x5927;&#x7684;&#x554F;&#x984C;&#x662F;&#x6548;&#x80FD;&#x4E0D;&#x597D;&#x548C;&#x5BB9;&#x6613; <code>Stack Overflow</code>&#x3002;<br>&#x4E3B;&#x8981;&#x539F;&#x56E0;&#x662F;&#x6703;&#x53BB;&#x5617;&#x8A66;&#x8D70;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x7684;&#x8DEF;&#x5F91;&#x800C;&#x4E14;&#x628A;&#x6BCF;&#x4E00;&#x500B;&#x72C0;&#x614B;&#x653E;&#x5728;stack&#xFF0C;&#x7576;&#x72C0;&#x614B;&#x4E00;&#x591A;&#x5C31;&#x7206;&#x4E86;&#x3002;<br>&#x53BB;&#x5617;&#x8A66;&#x8D70;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x7684;&#x8DEF;&#x5F91;&#x4E5F;&#x662F;&#x9020;&#x6210;&#x6548;&#x80FD;&#x4E0D;&#x597D;&#x7684;&#x539F;&#x56E0;&#x3002;</p>
<p>&#x5047;&#x5982;&#xFF1A;</p>
<ol>
<li>&#x53BB;&#x5617;&#x8A66;&#x8D70;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x7684;&#x8DEF;&#x5F91;&#x4E0D;&#x591A;&#xFF0C;&#x4F46;&#x662F;&#x6BCF;&#x4E00;&#x500B;&#x6B65;&#x8A08;&#x7B97;&#x5F88;&#x82B1;&#x6642;&#x9593;&#xFF0C;&#x905E;&#x8FF4;&#x5BB9;&#x6613;&#x8F49;&#x63DB;&#x6210;&#x975E;&#x540C;&#x6B65;&#x7A0B;&#x5F0F;&#x3002;</li>
</ol>
<p>&#x4EE5;&#x6392;&#x5E8F;&#x70BA;&#x4F8B;&#xFF0C;&#x4E00;&#x500B;&#x4E32;&#x5217;&#x6578;&#x91CF;&#x5C0F;&#x65BC;&#x4E00;&#x5343;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;<a href="https://zh.wikipedia.org/wiki/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F" target="_blank" rel="external">Insertion Sort</a>&#xFF1B;&#x5927;&#x65BC;&#x4E00;&#x5343;&#x6539;&#x4F7F;&#x7528;Quicksort&#xFF1A;</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sort</span></span>(list: <span class="type">List</span>[<span class="type">Int</span>]): <span class="type">List</span>[<span class="type">Int</span>] = {</div><div class="line">  <span class="keyword">if</span>(list.length &lt; <span class="number">1000</span>){</div><div class="line">    <span class="comment">// &#x9700;&#x8981;&#x5927;&#x91CF;&#x6642;&#x9593;&#x8A08;&#x7B97;&#x624D;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;&#x7D50;&#x679C;</span></div><div class="line">    insertionSort(list)</div><div class="line">  }</div><div class="line">  <span class="keyword">else</span>{</div><div class="line">    list <span class="keyword">match</span> {</div><div class="line">      <span class="keyword">case</span> <span class="type">Nil</span> =&gt; <span class="type">Nil</span></div><div class="line">      <span class="keyword">case</span> h :: <span class="type">Nil</span> =&gt; <span class="type">List</span>(h)</div><div class="line">      <span class="keyword">case</span> h :: t =&gt; sort(t.filter(_ &lt;= h)) ::: h :: sort(t.filter(_ &gt; h))</div><div class="line">    }</div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>
<p>&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x8F15;&#x6613;&#x5C07;&#x5B83;&#x8F49;&#x63DB;&#x6210;&#x975E;&#x540C;&#x6B65;&#x7A0B;&#x5F0F;&#x3002;<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sort</span></span>(list: <span class="type">List</span>[<span class="type">Int</span>]): <span class="type">Future</span>[<span class="type">List</span>[<span class="type">Int</span>]] = {</div><div class="line">  <span class="keyword">if</span>(list.length &lt; <span class="number">1000</span>){</div><div class="line">    <span class="comment">// &#x9700;&#x8981;&#x5927;&#x91CF;&#x6642;&#x9593;&#x8A08;&#x7B97;&#x624D;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;&#x7D50;&#x679C; </span></div><div class="line">    <span class="type">Future</span>(insertionSort(list))</div><div class="line">  }</div><div class="line">  <span class="keyword">else</span>{</div><div class="line">    list <span class="keyword">match</span> {</div><div class="line">      <span class="keyword">case</span> <span class="type">Nil</span> =&gt; <span class="type">Future</span>(<span class="type">Nil</span>)</div><div class="line">      <span class="keyword">case</span> h :: <span class="type">Nil</span> =&gt; <span class="type">Future</span>(<span class="type">List</span>(h))</div><div class="line">      <span class="keyword">case</span> h :: t =&gt; <span class="type">Future</span>(sort(t.filter(_ &lt;= h)) ::: h :: sort(t.filter(_ &gt; h)))</div><div class="line">    }</div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>&#x975E;&#x905E;&#x8FF4;&#x7684;&#x7248;&#x672C;&#x5C31;&#x5F88;&#x96E3;&#x6539;&#x4E86;&#xFF0C;&#x56E0;&#x70BA;&#x4E3B;&#x8981;&#x5B58;&#x5728;&#x5171;&#x4EAB;&#x7684;mutable&#x8B8A;&#x6578;&#xFF0C;&#x591A;&#x500B;thread&#x6703;&#x5171;&#x4EAB;&#x540C;&#x4E00;&#x500B;&#x8B8A;&#x6578;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x505A;&#x540C;&#x6B65;&#x8655;&#x7406;&#x3002;<br>&#x540C;&#x6B65;&#x554F;&#x984C;&#x6C92;&#x6709;&#x5C0F;&#x5FC3;&#x8655;&#x7406;&#xFF0C;&#x7D50;&#x679C;&#x5F88;&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x3002;</p>
<ol>
<li>&#x5617;&#x8A66;&#x8D70;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x7684;&#x8DEF;&#x5F91;&#x5F88;&#x591A;</li>
</ol>
<p>&#x4F8B;&#x5982;&#xFF1A;&#x8A08;&#x7B97;&#x7B2C;&#x4E94;&#x5341;&#x500B;&#x8CBB;&#x6C0F;&#x6578;&#x5217;<br>&#x6839;&#x64DA;&#x8A08;&#x7B97;&#x8CBB;&#x6C0F;&#x6578;&#x5217;&#x7684;&#x905E;&#x8FF4;&#x516C;&#x5F0F;&#xFF0C;<code>n = 50</code> &#x7684;&#x6A39;&#x72C0;&#x7D50;&#x69CB;&#x6703;&#x76F8;&#x7576;&#x5927;&#x3002;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x900F;&#x904E; <a href="http://localhost:4000/2016/12/09/Scala-Tail-recursion/" target="_blank" rel="external">Tail recursion</a> &#x4F86;&#x89E3;&#x6C7A;&#x3002;<br>&#x628A;&#x4E0A;&#x4E00;&#x500B;&#x72C0;&#x614B;&#x7684;&#x7D50;&#x679C;&#x76F4;&#x63A5;&#x7576;&#x6210;&#x5E36;&#x5165;&#x53C3;&#x6578;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4F9D;&#x8CF4;&#x4E0A;&#x4E00;&#x500B;&#x72C0;&#x614B;&#x7684;&#x7D50;&#x679C;&#x3002;</p>
<p>&#x56E0;&#x70BA; <code>fib(n) = fib(n - 1) + fib(n - 2)</code>&#xFF0C;&#x5047;&#x5982;&#x53EF;&#x4EE5;&#x628A; <code>fib(n - 1)</code> &#x548C; <code>fib(n - 2)</code> &#x7576;&#x53C3;&#x6578;&#x5E36;&#x5165;&#xFF0C;<br>&#x9019;&#x6A23;&#x5C31;&#x53EF;&#x4EE5;&#x99AC;&#x4E0A;&#x5F97;&#x51FA; <code>fib(n)</code>&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x7B49;&#x7B97;&#x5B8C; <code>fib(n - 1)</code> &#x548C; <code>fib(n - 2)</code> &#x5F8C;&#x624D;&#x53EF;&#x4EE5;&#x5F97;&#x51FA; <code>fib(n)</code>&#x3002;</p>
<pre><code class="scala"><span class="keyword">import</span> scala.annotation.tailrec

fib(<span class="number">0</span>, <span class="number">1</span>, <span class="number">5</span>)

<span class="meta">@tailrec</span>
<span class="function"><span class="keyword">def</span> <span class="title">fib</span></span>(previous: <span class="type">Int</span>, current: <span class="type">Int</span>, n: <span class="type">Int</span>): <span class="type">Int</span> = {
  n <span class="keyword">match</span> {
    <span class="keyword">case</span> <span class="number">0</span> =&gt; previous
    <span class="keyword">case</span> <span class="number">1</span> =&gt; current
    <span class="keyword">case</span> _ =&gt; fib(current, previous + current, n - <span class="number">1</span>)
  }
}
</code></pre>
<p>&#x6709;&#x8208;&#x8DA3;&#x7684;&#x8B80;&#x8005;&#x53EF;&#x4EE5;&#x5230; <a href="https://scalataiwan.github.io/ScalaKitchen/recursive.html" target="_blank" rel="external">ScalaKitchen</a> &#x8A66;&#x73A9;&#x770B;&#x770B;&#xFF0C;&#x4E5F;&#x6709;&#x63D0;&#x4F9B;<a href="https://scalataiwan.github.io/ScalaKitchen/" target="_blank" rel="external">&#x4E2D;&#x6587;&#x7248;&#x672C;&#x7684;Scala&#x5165;&#x9580;&#x6559;&#x5B78;</a>&#x3002;</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;&amp;#x905E;&amp;#x8FF4;&quot;&gt;&lt;a href=&quot;#&amp;#x905E;&amp;#x8FF4;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x905E;&amp;#x8FF4;&quot;&gt;&lt;/a&gt;&amp;#x905E;&amp;#x8FF4;&lt;/h1&gt;&lt;p&gt;&amp;#x5728;functi
    
    </summary>
    
      <category term="Scala" scheme="https://pandaforme.github.io/categories/Scala/"/>
    
    
      <category term="Scala" scheme="https://pandaforme.github.io/tags/Scala/"/>
    
      <category term="Recursion" scheme="https://pandaforme.github.io/tags/Recursion/"/>
    
      <category term="Tail recursion" scheme="https://pandaforme.github.io/tags/Tail-recursion/"/>
    
  </entry>
  
  <entry>
    <title>[Scala] Use Either to hand error cases</title>
    <link href="https://pandaforme.github.io/2017/02/15/Scala-Use-Either-Try-to-hand-error/"/>
    <id>https://pandaforme.github.io/2017/02/15/Scala-Use-Either-Try-to-hand-error/</id>
    <published>2017-02-15T08:57:00.000Z</published>
    <updated>2017-02-16T04:08:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5728;OOP&#x7684;&#x8A9E;&#x8A00;&#x4E2D;&#xFF0C;&#x6211;&#x5011;exception&#x4F86;&#x8868;&#x9054;&#x7A0B;&#x5F0F;&#x932F;&#x8AA4;&#x6216;&#x662F;&#x7CFB;&#x7D71;crash&#xFF0E;Exception&#x53C8;&#x53EF;&#x4EE5;&#x5206;&#x70BA;<code>Checked Exception</code> &#x548C; <code>UnChecked Excpetion</code>&#xFF0E;</p>
<ul>
<li><p>Checked Exception: &#x6703;&#x5C07;&#x8981;&#x4E1F;&#x51FA;&#x7684;excpetion&#x5BEB;&#x5728;function&#x7684;signature&#xFF0E;<br>&#x4F8B;&#x5982;&#xFF1A;</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">interface <span class="type">Foo</span>() <span class="keyword">throws</span> <span class="type">XXXException</span>, <span class="type">YYYException</span></div></pre></td></tr></table></figure>
</li>
<li><p>UnChecked Excpetion: &#x8981;&#x4E1F;&#x51FA;&#x7684;excpetion&#x4E0D;&#x6703;&#x5BEB;&#x5728;function&#x7684;signature&#xFF0C;&#x547C;&#x53EB;function&#x7684;&#x4EBA;&#x9700;&#x8981;&#x77E5;&#x9053;&#x6709;exception&#x8981;&#x8655;&#x7406;&#xFF0E;</p>
</li>
</ul>
<p>Checked Exception&#x6703;&#x9055;&#x53CD;<a href="https://en.wikipedia.org/wiki/Open/closed_principle" target="_blank" rel="external">Open/Closed Principle</a>&#xFF0C;&#x7576;&#x6709;&#x65B0;&#x589E;&#x4E1F;&#x51FA;&#x7684;excpetion&#xFF0C;&#x9700;&#x8981;&#x4FEE;&#x6539;interface signature&#xFF1B;UnChecked Excpetion&#x5247;&#x662F;&#x9700;&#x8981;&#x77E5;&#x9053;&#x6709;&#x54EA;&#x4E9B;exception&#x9700;&#x8981;&#x8655;&#x7406;&#xFF0E;</p>
<p>&#x9019;&#x5169;&#x7A2E;exception&#x5B70;&#x597D;&#x5B70;&#x58DE;&#xFF0C;&#x5728; <code>Clean code: a handbook of agile software craftsmanship, Robert C. Martin</code> &#x6709;&#x63D0;&#x5230;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">The debate is over. For years Java programmers have debated over the benefits and liabilities of checked exceptions. When checked exceptions were introduced in the first version of Java, they seemed like a great idea. The signature of every method would list all of the exceptions that it could pass to its caller. Moreover, these exceptions were part of the type</div><div class="line">of the method. Your code literally wouldn&apos;t compile if the signature didn&apos;t match what your code could do.</div><div class="line"></div><div class="line">At the time, we thought that checked exceptions were a great idea; and yes, they can yield some benefit. However, it is clear now that they aren&apos;t necessary for the production of robust software. C# doesn&apos;t have checked exceptions, and despite valiant attempts, C++ doesn&apos;t either. Neither do Python or Ruby. Yet it is possible to write robust software in all of these languages. Because that is the case, we have to decide&#x2014;really&#x2014;whether checked exceptions are worth their price.</div><div class="line"></div><div class="line">Checked exceptions can sometimes be useful if you are writing a critical library: You must catch them. But in general application development the dependency costs outweigh the benefits</div></pre></td></tr></table></figure></p>
<p>&#x5728;Java&#x4E2D;&#x5EFA;&#x8B70;&#x4F7F;&#x7528;UnChecked Excpetion&#xFF0C;&#x4F46;&#x662F;&#x9019;&#x6703;&#x5C0E;&#x81F4;&#x53E6;&#x5916;&#x4E00;&#x500B;&#x707D;&#x96E3;&#x2026;</p>
<ol>
<li>&#x547C;&#x53EB;&#x8005;&#x4E0D;&#x77E5;&#x9053;&#x6703;&#x4E1F;&#x51FA;exception</li>
<li>&#x547C;&#x53EB;&#x8005;&#x4E0D;&#x77E5;&#x9053;&#x6709;&#x54EA;&#x4E9B;excpetion&#x8981;&#x8655;&#x7406;&#xFF0C;&#x7576;call chain&#x5F88;&#x6DF1;&#x7684;&#x6642;&#x5019;&#x66F4;&#x662F;&#x7CDF;&#x7CD5;&#x2026;</li>
<li>&#x5230;&#x8655;&#x5145;&#x6EFF;&#x4E86; <code>try{...} catch{...}</code></li>
</ol>
<p>&#x76F8;&#x4FE1;&#x4F7F;&#x7528;Java&#x958B;&#x767C;&#x7684;&#x5DE5;&#x7A0B;&#x5E2B;&#x61C9;&#x8A72;&#x611F;&#x89F8;&#x826F;&#x591A;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x5728;&#x7DAD;&#x8B77;&#x820A;&#x5C08;&#x6848;&#xFF0E;&#x4E00;&#x500B;call chain&#x9577;&#x9054;&#x5341;&#x5E7E;&#x5C64;&#xFF0C;&#x6BCF;&#x4E00;&#x5C64;&#x4E1F;&#x7684;excpetion&#x90FD;&#x4E0D;&#x4E00;&#x6A23;&#xFF0C;&#x6709;&#x4E9B;&#x5C64;&#x6703;&#x8655;&#x7406;exception&#xFF0C;&#x6709;&#x4E9B;&#x53C8;&#x4E0D;&#x6703;&#xFF0C;&#x6700;&#x5F8C;&#x7684;&#x5927;&#x7D55;&#x62DB;&#x5C31;&#x662F;&#x6BCF;&#x4E00;&#x5C64;&#x90FD;&#x52A0; <code>try{...} catch{...}</code>&#xFF0E;</p>
<p>&#x4F8B;&#x5916;&#x8655;&#x7406;&#x5728;OOP&#x662F;&#x4E00;&#x500B;&#x5F88;&#x91CD;&#x8981;&#x7684;&#x8B70;&#x984C;&#xFF0C;&#x6C92;&#x6709;&#x8B39;&#x614E;&#x8655;&#x7406;&#x5F88;&#x5BB9;&#x6613;&#x9020;&#x6210;&#x7DAD;&#x8B77;&#x56F0;&#x96E3;&#x548C;&#x767C;&#x751F;&#x554F;&#x984C;&#x4E0D;&#x5BB9;&#x6613;&#x627E;&#x5230;&#x554F;&#x984C;&#x9EDE;&#xFF0E;<br>&#x56E0;&#x70BA;Exception&#x662F;&#x6709;side effect&#xFF0C;&#x5728;FP&#x662F;&#x4E0D;&#x88AB;&#x51C6;&#x8A31;&#x7684;&#xFF0E;&#x6240;&#x4EE5;&#x5728;pure FP&#x7A0B;&#x5F0F;&#x4E2D;&#x662F;&#x770B;&#x4E0D;&#x5230;excpetion&#x548C; <code>try{...} catch{...}</code>&#xFF0E;</p>
<h1 id="Either"><a href="#Either" class="headerlink" title="Either"></a>Either</h1><p>&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x900F;&#x904E; <code>Either</code> &#x4F86;&#x9054;&#x6210;&#xFF0C;<code>Left</code> &#x653E;&#x932F;&#x8AA4;&#x7684;&#x7269;&#x4EF6;&#xFF0C;<code>Right</code> &#x653E;&#x6B63;&#x78BA;&#x7684;&#x7269;&#x4EF6;&#xFF1A;<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">sealed</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Either</span>[<span class="type">A</span>, <span class="type">B</span>]</span></div><div class="line"><span class="keyword">final</span> <span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">Left</span>[+<span class="type">A</span>, +<span class="type">B</span>](<span class="params">a: <span class="type">A</span></span>) <span class="keyword">extends</span> <span class="title">Either</span>[<span class="type">A</span>, <span class="type">B</span>]</span></div><div class="line"><span class="keyword">final</span> <span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">Right</span>[+<span class="type">A</span>, +<span class="type">B</span>](<span class="params">b: <span class="type">B</span></span>) <span class="keyword">extends</span> <span class="title">Either</span>[<span class="type">A</span>, <span class="type">B</span>]</span></div><div class="line"></div><div class="line"><span class="comment">// for exmple</span></div><div class="line"><span class="class"><span class="keyword">type</span> <span class="title">Error</span> </span>= <span class="type">String</span></div><div class="line"></div><div class="line"><span class="keyword">val</span> result = <span class="type">Right</span>[<span class="type">Error</span>, <span class="type">Int</span>](<span class="number">123</span>)</div><div class="line"><span class="keyword">val</span> error = <span class="type">Left</span>[<span class="type">Error</span>, <span class="type">Int</span>](<span class="string">&quot;Something wrong!!!&quot;</span>)</div></pre></td></tr></table></figure></p>
<p>&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x628A;&#x6B63;&#x78BA;&#x7684;&#x7D50;&#x679C;&#x6216;&#x932F;&#x8AA4;&#x653E;&#x5230; <code>Either</code> &#x9019;&#x500B;&#x5BB9;&#x5668;&#xFF0C;&#x547C;&#x53EB;&#x8005;&#x53EF;&#x4EE5;&#x6E05;&#x695A;&#x77E5;&#x9053;&#x6709;&#x9700;&#x8981;&#x8655;&#x7406;&#x932F;&#x8AA4;&#x60C5;&#x6CC1;&#xFF0C;&#x518D;&#x4F86;&#x7A0B;&#x5F0F;&#x78BC;&#x4E0D;&#x518D;&#x5230;&#x8655;&#x5145;&#x65A5; <code>try{...} catch{...}</code>&#xFF0E;</p>
<p>&#x6211;&#x5011;&#x4F7F;&#x7528;&#x56DB;&#x5247;&#x904B;&#x7B97;&#x4F86;&#x7576;&#x7BC4;&#x4F8B;&#xFF0C;&#x5982;&#x4F55;&#x4F7F;&#x7528; <code>Either</code><br><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">div</span></span>(a: <span class="type">Double</span>, b: <span class="type">Double</span>): <span class="type">Either</span>[<span class="type">String</span>, <span class="type">Double</span>] = {</div><div class="line">  <span class="keyword">if</span>(b == <span class="number">0</span>) <span class="type">Left</span>[<span class="type">String</span>, <span class="type">Double</span>](<span class="string">&quot;Can&apos;t divide by 0 !!!&quot;</span>)</div><div class="line">  <span class="keyword">else</span> <span class="type">Right</span>[<span class="type">String</span>, <span class="type">Double</span>](a / b)</div><div class="line">}</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span></span>(a: <span class="type">Double</span>, b: <span class="type">Double</span>): <span class="type">Either</span>[<span class="type">String</span>, <span class="type">Double</span>] = {</div><div class="line">  <span class="type">Right</span>[<span class="type">String</span>, <span class="type">Double</span>](a + b)</div><div class="line">}</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">minus</span></span>(a: <span class="type">Double</span>, b: <span class="type">Double</span>): <span class="type">Either</span>[<span class="type">String</span>, <span class="type">Double</span>] = {</div><div class="line">  <span class="type">Right</span>[<span class="type">String</span>, <span class="type">Double</span>](a - b)</div><div class="line">}</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">mul</span></span>(a: <span class="type">Double</span>, b: <span class="type">Double</span>): <span class="type">Either</span>[<span class="type">String</span>, <span class="type">Double</span>] = {</div><div class="line">  <span class="type">Right</span>[<span class="type">String</span>, <span class="type">Double</span>](a * b)</div><div class="line">}</div><div class="line"></div><div class="line"><span class="comment">// ((((1 + 2) * 3) / 4) - 5)</span></div><div class="line"></div><div class="line"><span class="keyword">val</span> result = <span class="keyword">for</span> {</div><div class="line">  r1 &lt;- add(<span class="number">1</span>, <span class="number">2</span>)</div><div class="line">  r2 &lt;- mul(r1, <span class="number">3</span>)</div><div class="line">  r3 &lt;- div(r2, <span class="number">4</span>)</div><div class="line">  r4 &lt;- minus(r3, <span class="number">5</span>)</div><div class="line">} <span class="keyword">yield</span> {</div><div class="line">  r4</div><div class="line">}</div><div class="line"></div><div class="line"><span class="comment">// result: scala.util.Either[String,Double] = Right(-2.75)</span></div><div class="line"></div><div class="line"><span class="comment">// ((((1 + 2) * 3) / 0) - 5)</span></div><div class="line"></div><div class="line"><span class="keyword">val</span> result = <span class="keyword">for</span> {</div><div class="line">  r1 &lt;- add(<span class="number">1</span>, <span class="number">2</span>)</div><div class="line">  r2 &lt;- mul(r1, <span class="number">3</span>)</div><div class="line">  r3 &lt;- div(r2, <span class="number">0</span>)</div><div class="line">  r4 &lt;- minus(r3, <span class="number">5</span>)</div><div class="line">} <span class="keyword">yield</span> {</div><div class="line">  r4</div><div class="line">}</div><div class="line"></div><div class="line"><span class="comment">// result: scala.util.Either[String,Double] = Left(Can&apos;t divide by 0 !!!)</span></div></pre></td></tr></table></figure></p>
<p>&#x6839;&#x64DA;&#x4E0A;&#x9762;&#x7C21;&#x55AE;&#x7684;&#x7BC4;&#x4F8B;&#xFF0C;&#x9019;&#x6A23;&#x7684;&#x5BEB;&#x6CD5;&#x5F88;&#x660E;&#x986F;&#x512A;&#x65BC;&#x50B3;&#x7D71;OOP&#x7528;excpetion&#x4F86;&#x8655;&#x7406;&#x932F;&#x8AA4;&#xFF1A;</p>
<ul>
<li>&#x4E0D;&#x518D;&#x6709; <code>try{...} catch{...}</code> &#x5145;&#x65A5;&#x5728;&#x6BCF;&#x500B;&#x5730;&#x65B9;&#xFF0E;</li>
<li>&#x547C;&#x53EB;&#x8005;&#x53EF;&#x4EE5;&#x6839;&#x64DA;fucntion signature&#x77E5;&#x9053;&#x662F;&#x5426;&#x6703;&#x7522;&#x751F;&#x932F;&#x8AA4;&#xFF0E;</li>
<li>&#x66F4;&#x53EF;&#x4EE5;&#x5C08;&#x5FC3;&#x5728;&#x5546;&#x696D;&#x908F;&#x8F2F;&#xFF0C;&#x800C;&#x4E0D;&#x7528;&#x82B1;&#x591A;&#x9918;&#x7684;&#x5FC3;&#x529B;&#x5728;&#x8655;&#x7406;&#x4F8B;&#x5916;&#xFF0E;</li>
</ul>
<h1 id="Try"><a href="#Try" class="headerlink" title="Try"></a>Try</h1><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">sealed</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Try</span>[+<span class="type">T</span>]</span></div><div class="line"></div><div class="line"><span class="keyword">final</span> <span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">Failure</span>[+<span class="type">T</span>](<span class="params">exception: <span class="type">Throwable</span></span>) <span class="keyword">extends</span> <span class="title">Try</span>[<span class="type">T</span>] </span></div><div class="line"></div><div class="line"><span class="keyword">final</span> <span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">Success</span>[+<span class="type">T</span>](<span class="params">value: <span class="type">T</span></span>) <span class="keyword">extends</span> <span class="title">Try</span>[<span class="type">T</span>]</span></div></pre></td></tr></table></figure>
<p><code>Try</code> &#x4E5F;&#x662F;&#x985E;&#x4F3C;&#x65BC; <code>Either</code> &#x7684;context&#xFF0C;&#x6709;&#x8208;&#x8DA3;&#x7684;&#x8B80;&#x8005;&#x53EF;&#x4EE5;&#x8A66;&#x7528;&#x770B;&#x770B;&#xFF0E;&#x5728;&#x5BE6;&#x52D9;&#x4E0A;&#x5927;&#x90E8;&#x5206;&#x90FD;&#x63A1;&#x7528; <code>Either</code>&#xFF0C;&#x4E0D;&#x63A1;&#x7528; <code>Try</code>&#x7684;&#x539F;&#x56E0;&#x662F;&#xFF1A;</p>
<ul>
<li>&#x6C92;&#x6709;&#x8FA6;&#x6CD5;&#x5C0D;exception&#x505A; <code>exhaustive pattern match</code>&#xFF0C;&#x7576;&#x662F;Failure&#x7684;&#x6642;&#x5019;&#xFF0C;&#x547C;&#x53EB;&#x8005;&#x4E0D;&#x77E5;&#x9053;&#x6709;&#x54EA;&#x4E9B;exception&#x6703;&#x4E1F;&#x51FA;&#xFF0C;&#x53EA;&#x77E5;&#x9053;&#x6703;&#x4E1F;&#x51FA;&#x4E00;&#x500B; <code>Throwable class</code>&#xFF0E;</li>
</ul>
<p>&#x4F7F;&#x7528; <code>Either</code> &#x6211;&#x5011;&#x53EF;&#x4EE5;&#x81EA;&#x8A02;Error type&#xFF0C;&#x7576;&#x5931;&#x6557;&#x6642;&#x5019;&#x5C31;&#x53EF;&#x4EE5;&#x5C0D;Error type&#x505A; <code>exhaustive pattern match</code>&#xFF0C;&#x4F9D;&#x64DA;&#x4E0D;&#x540C;&#x7684;&#x932F;&#x8AA4;&#x505A;&#x4E0D;&#x540C;&#x7684;&#x8655;&#x7406;&#xFF0E;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x5728;OOP&amp;#x7684;&amp;#x8A9E;&amp;#x8A00;&amp;#x4E2D;&amp;#xFF0C;&amp;#x6211;&amp;#x5011;exception&amp;#x4F86;&amp;#x8868;&amp;#x9054;&amp;#x7A0B;&amp;#x5F0F;&amp;#x932F;&amp;#x8AA4;&amp;#x62
    
    </summary>
    
      <category term="Scala" scheme="https://pandaforme.github.io/categories/Scala/"/>
    
    
      <category term="Scala" scheme="https://pandaforme.github.io/tags/Scala/"/>
    
      <category term="Exception" scheme="https://pandaforme.github.io/tags/Exception/"/>
    
      <category term="Either" scheme="https://pandaforme.github.io/tags/Either/"/>
    
      <category term="Try" scheme="https://pandaforme.github.io/tags/Try/"/>
    
  </entry>
  
  <entry>
    <title>[Scala] How to use Option correctly</title>
    <link href="https://pandaforme.github.io/2016/12/20/Scala-How-to-use-Option-correctly/"/>
    <id>https://pandaforme.github.io/2016/12/20/Scala-How-to-use-Option-correctly/</id>
    <published>2016-12-20T07:13:00.000Z</published>
    <updated>2017-02-15T09:51:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5C0D;&#x65BC;Scala&#x6211;&#x4E00;&#x76F4;&#x628A;&#x5B83;&#x7576;&#x6210;&#x9032;&#x968E;&#x7248;&#x672C;&#x7684;Java&#xFF0C;&#x7576;&#x8D8A;&#x4F86;&#x8D8A;&#x4E86;&#x89E3;Functional Programming&#x7684;&#x7CBE;&#x795E;&#xFF0C;&#x624D;&#x767C;&#x73FE;&#x4E4B;&#x524D;&#x60F3;&#x6CD5;&#x9084;&#x883B;&#x5929;&#x771F;&#x7684;&#xFF0E;</p>
<p>&#x53EF;&#x4EE5;&#x5F9E;&#x5982;&#x4F55;&#x6B63;&#x78BA;&#x4F7F;&#x7528; <code>Option</code> &#xFF0C;&#x8B93;&#x6211;&#x5011;&#x6162;&#x6162;&#x4F86;&#x9032;&#x5165;Functional Programming&#x7684;&#x4E16;&#x754C;&#xFF0E;</p>
<p>&#x5148;&#x5F9E;&#x4E00;&#x500B;&#x7C21;&#x55AE;&#x7684;API&#x5BE6;&#x4F8B;&#x4F86;&#x958B;&#x59CB;&#xFF1A; &#x5047;&#x5982;&#x6709;&#x4E00;&#x500B;API&#xFF0C;Admin&#x4F7F;&#x7528;&#x8005;&#x53EF;&#x4EE5;&#x627E;&#x51FA;&#x67D0;&#x500B;&#x570B;&#x5BB6;&#x7684;&#x6240;&#x6709;&#x4F7F;&#x7528;&#x8005;&#xFF1B;&#x4E0D;&#x662F;Admin&#x4F7F;&#x7528;&#x8005;&#x5C31;&#x56DE;&#x50B3;&#x7A7A;&#x5B57;&#x4E32;&#xFF0E;</p>
<p>&#x4F7F;&#x7528;&#x8005;&#x6703;&#x5E36;&#x4E0A; <code>userName</code> , <code>password</code> &#x548C; <code>country</code> &#x547C;&#x53EB;&#x6B64;API&#xFF0C;&#x9019;&#x500B;API&#x6703;</p>
<ol>
<li>&#x6AA2;&#x67E5;&#x683C;&#x5F0F;&#x662F;&#x5426;&#x6B63;&#x78BA;</li>
<li>&#x67E5;&#x8A62;&#x8CC7;&#x6599;&#x5EAB;&#x662F;&#x5426;&#x6709;&#x4F7F;&#x7528;&#x8005;</li>
<li>&#x82E5;&#x6709;&#xFF0C;&#x6AA2;&#x67E5; <code>userType</code> &#x4F7F;&#x5426;&#x70BA; <code>Admin</code></li>
<li>&#x6839;&#x64DA; <code>country</code> &#x53BB;&#x8CC7;&#x6599;&#x5EAB;&#x6488;&#x53D6;&#x8A72;&#x570B;&#x5BB6;&#x7684;&#x6240;&#x6709;&#x4F7F;&#x7528;&#x8005;</li>
<li>&#x5C07;&#x7D50;&#x679C;&#x8F49;&#x6210; <code>json</code> &#x653E;&#x5230; http response</li>
</ol>
<p>&#x5148;&#x5B9A;&#x7FA9; <code>Data Type</code>&#xFF1A;<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">sealed</span> <span class="class"><span class="keyword">trait</span> <span class="title">Name</span></span></div><div class="line"><span class="keyword">final</span> <span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">UserName</span>(<span class="params">name: <span class="type">String</span></span>) <span class="keyword">extends</span> <span class="title">Password</span></span></div><div class="line"></div><div class="line"><span class="keyword">sealed</span> <span class="class"><span class="keyword">trait</span> <span class="title">Password</span></span></div><div class="line"><span class="keyword">final</span> <span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">MD5Password</span>(<span class="params">plainText: <span class="type">String</span></span>) <span class="keyword">extends</span> <span class="title">Password</span></span></div><div class="line"></div><div class="line"><span class="keyword">sealed</span> <span class="class"><span class="keyword">trait</span> <span class="title">Country</span></span></div><div class="line"><span class="keyword">final</span> <span class="keyword">case</span> <span class="class"><span class="keyword">object</span> <span class="title">TAIWAN</span> <span class="keyword">extends</span> <span class="title">Country</span></span></div><div class="line"><span class="keyword">final</span> <span class="keyword">case</span> <span class="class"><span class="keyword">object</span> <span class="title">CHINA</span> <span class="keyword">extends</span> <span class="title">Country</span></span></div><div class="line"></div><div class="line"><span class="keyword">sealed</span> <span class="class"><span class="keyword">trait</span> <span class="title">UserType</span></span></div><div class="line"><span class="keyword">final</span> <span class="keyword">case</span> <span class="class"><span class="keyword">object</span> <span class="title">ADMIN</span> <span class="keyword">extends</span> <span class="title">UserType</span></span></div><div class="line"><span class="keyword">final</span> <span class="keyword">case</span> <span class="class"><span class="keyword">object</span> <span class="title">EMAIL</span> <span class="keyword">extends</span> <span class="title">UserType</span></span></div><div class="line"><span class="keyword">final</span> <span class="keyword">case</span> <span class="class"><span class="keyword">object</span> <span class="title">PHONE</span> <span class="keyword">extends</span> <span class="title">UserType</span></span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">sealed</span> <span class="class"><span class="keyword">trait</span> <span class="title">Account</span> </span>{</div><div class="line">  <span class="keyword">val</span> name: <span class="type">String</span></div><div class="line">}</div><div class="line"><span class="keyword">final</span> <span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountWithCredential</span>(<span class="params">name: <span class="type">UserName</span>, password: <span class="type">Password</span>, userType: <span class="type">UserType</span></span>) <span class="keyword">extends</span> <span class="title">Account</span></span></div><div class="line"><span class="keyword">final</span> <span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountWithProfile</span>(<span class="params">name: <span class="type">UserName</span>, country: <span class="type">Country</span>, age: <span class="type">Int</span></span>) <span class="keyword">extends</span> <span class="title">Account</span></span></div></pre></td></tr></table></figure></p>
<p>&#x9019;&#x6A23;&#x7684; <code>Data Type</code> &#x4E5F;&#x662F;&#x6240;&#x8B02;&#x7684; <code>Algebraic Type</code>&#xFF0C;<br>&#x4EE5; <code>Account</code> &#x70BA;&#x4F8B;&#xFF1A;</p>
<ul>
<li>&#x5B83;&#x6709;&#x5169;&#x7A2E; subtype <code>AccountWithCredential</code> &#x548C; <code>AccountWithProfile</code>&#xFF0C;&#x70BA; <code>Account</code> &#x7684; <code>Sum Type</code></li>
<li>&#x5404;&#x7A2E;&#x4E0D;&#x540C; subtype &#x6709;&#x5B83;&#x5011;&#x7684;&#x53C3;&#x6578;&#xFF0C;&#x4E5F;&#x7A31;&#x4E4B;  <code>Product Type</code></li>
</ul>
<p>&#x9019;&#x7A2E;&#x5B9A;&#x7FA9;&#x65B9;&#x5F0F;&#x6709;&#x9EDE;&#x50CF;Java&#x4E16;&#x754C;&#x4E2D;&#x7684; <code>Value Object</code>&#xFF0C;&#x628A;&#x8CC7;&#x6599;&#x548C;&#x884C;&#x70BA;&#x5206;&#x958B;&#x662F;&#x6709;&#x597D;&#x8655;&#x7684;&#xFF0C;&#x907F;&#x514D;&#x8CC7;&#x6599;&#x548C;&#x884C;&#x70BA;&#x8026;&#x5408;&#x904E;&#x7DCA;&#xFF0E;<a href="https://en.wikipedia.org/wiki/Software_design_pattern" target="_blank" rel="external">Design Pattern</a> &#x4E5F;&#x662F;&#x900F;&#x904E;pattern&#x53BB;&#x5206;&#x96E2;&#x8CC7;&#x6599;&#x548C;&#x884C;&#x70BA;&#xFF0E;</p>
<p>&#x518D;&#x4F86;&#x6211;&#x5011;&#x4F86;&#x5B9A;&#x7FA9;&#x884C;&#x70BA;&#xFF1A;<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">trait</span> <span class="title">Repo</span> </span>{</div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">login</span></span>(name: <span class="type">UserName</span>, password: <span class="type">Password</span>): <span class="type">Option</span>[<span class="type">AccountWithCredential</span>]</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">getAccountsByCountry</span></span>(country: <span class="type">Country</span>): <span class="type">Option</span>[<span class="type">List</span>[<span class="type">AccountWithProfile</span>]]</div><div class="line">}</div></pre></td></tr></table></figure></p>
<p><code>login</code> &#x7684;&#x56DE;&#x50B3;&#x503C;&#x70BA;&#x4E00;&#x500B; <code>Option</code> context&#xFF0C;&#x88E1;&#x9762;&#x88DD;&#x8457; <code>AccountWithCredential</code>&#xFF0E;</p>
<ul>
<li>&#x82E5;&#x6709;&#x627E;&#x5230;&#x5C31;&#x56DE;&#x50B3; <code>Some[AccountWithCredential]</code></li>
<li>&#x82E5;&#x6C92;&#x6709;&#x627E;&#x5C31;&#x56DE;&#x50B3; <code>None</code></li>
</ul>
<p>&#x5728; <code>Java 7</code> &#x4E4B;&#x524D;&#x7684;&#x7248;&#x672C;&#x6703;&#x5B9A;&#x7FA9;&#x627E;&#x4E0D;&#x5230;&#x6703;&#x56DE;&#x50B3; <code>Null</code>&#xFF0C;<code>Null</code> &#x6703;&#x9020;&#x6210;&#x8A9E;&#x610F;&#x4E0D;&#x6E05;&#x548C;&#x7A0B;&#x5F0F;&#x78BC;&#x5145;&#x65A5;&#x8457;&#x4E00;&#x5806;&#x6AA2;&#x67E5;&#x662F;&#x5426;&#x70BA; <code>Null</code> &#x7684;&#x7A0B;&#x5F0F;&#x78BC;&#xFF0E;<br>&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x900F;&#x904E; <a href="https://en.wikipedia.org/wiki/Null_Object_pattern" target="_blank" rel="external">Null Object pattern</a> &#x4F86;&#x89E3;&#x6C7A;&#x9019;&#x500B;&#x554F;&#x984C;&#xFF0E;<br>&#x5728; <code>Scala</code> &#x6216; <code>Java 8</code> &#x5247;&#x662F;&#x900F;&#x904E; <code>Option</code> / <code>Optional</code> data type&#x4F86;&#x89E3;&#x6C7A;&#x4E4B;&#xFF0E;</p>
<p>&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x5BE6;&#x4F5C;API&#xFF1A;<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">object</span> <span class="title">Api</span> <span class="keyword">extends</span> <span class="title">App</span> </span>{</div><div class="line">  <span class="keyword">val</span> name: <span class="type">Option</span>[<span class="type">UserName</span>] = parse(<span class="type">UserName</span>(args(<span class="number">0</span>)))</div><div class="line">  <span class="keyword">val</span> password: <span class="type">Option</span>[<span class="type">MD5Password</span>] = parse(<span class="type">MD5Password</span>(args(<span class="number">1</span>)))</div><div class="line"></div><div class="line">  <span class="comment">// Step1: login</span></div><div class="line">  <span class="comment">// Step2: check isAdmin == true</span></div><div class="line">  <span class="comment">// Step3: get accounts by country</span></div><div class="line">  <span class="comment">// Step4: convert accounts to json</span></div><div class="line">  <span class="comment">// Step5: add json to HttpResponse</span></div><div class="line"></div><div class="line">  <span class="keyword">if</span> (name.isEmpty) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="type">RuntimeException</span>(<span class="string">&quot;bad id&quot;</span>)</div><div class="line">  <span class="keyword">if</span> (password.isEmpty) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="type">RuntimeException</span>(<span class="string">&quot;bad password&quot;</span>)</div><div class="line">  <span class="keyword">val</span> json: <span class="type">Option</span>[<span class="type">String</span>] = getJsonProfile(name.get, password.get, <span class="type">CHINA</span>)</div><div class="line">  <span class="keyword">if</span> (json.isDefined) {</div><div class="line">    returnHttpResponse(json.get)</div><div class="line">  } <span class="keyword">else</span> {</div><div class="line">    returnHttpResponse(<span class="string">&quot;&quot;</span>)</div><div class="line">  }</div><div class="line">  </div><div class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">parse</span></span>[<span class="type">A</span>](a: =&gt; <span class="type">A</span>): <span class="type">Option</span>[<span class="type">A</span>] = ???</div><div class="line"></div><div class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">getJsonProfile</span></span>(name: <span class="type">UserName</span>,</div><div class="line">                             password: <span class="type">Password</span>,</div><div class="line">                             country: <span class="type">Country</span>): <span class="type">Option</span>[<span class="type">String</span>] = {</div><div class="line">    <span class="keyword">val</span> accountWithCredential: <span class="type">Option</span>[<span class="type">AccountWithCredential</span>] =</div><div class="line">      <span class="type">Repo</span>.login(name, password)</div><div class="line">    <span class="keyword">if</span> (accountWithCredential.isDefined) {</div><div class="line">      accountWithCredential.get.userType <span class="keyword">match</span> {</div><div class="line">        <span class="keyword">case</span> <span class="type">ADMIN</span> =&gt;</div><div class="line">          <span class="keyword">val</span> accounts: <span class="type">Option</span>[<span class="type">List</span>[<span class="type">AccountWithProfile</span>]] =</div><div class="line">            <span class="type">Repo</span>.getAccountsByCountry(country)</div><div class="line">          <span class="keyword">if</span> (accounts.isDefined) {</div><div class="line">            listToJson(accounts.get)</div><div class="line">          } <span class="keyword">else</span> {</div><div class="line">            <span class="type">None</span></div><div class="line">          }</div><div class="line">        <span class="keyword">case</span> _: <span class="type">UserType</span> =&gt; <span class="type">None</span></div><div class="line">      }</div><div class="line">    } <span class="keyword">else</span> {</div><div class="line">      <span class="type">None</span></div><div class="line">    }</div><div class="line">  }</div><div class="line"></div><div class="line">  <span class="comment">// convert a list of Account to json String</span></div><div class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">listToJson</span></span>[<span class="type">A</span>](list: <span class="type">List</span>[<span class="type">A</span>]): <span class="type">Option</span>[<span class="type">String</span>] = ???</div><div class="line"></div><div class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">returnHttpResponse</span></span>(message: <span class="type">String</span>): <span class="type">Unit</span> = ???</div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>&#x9019;&#x500B;&#x7248;&#x672C;&#x5229;&#x7528; <code>isDefined</code> &#x53BB;&#x5224;&#x5B9A;&#x662F;&#x5426;&#x70BA;&#x7A7A;&#x503C;&#xFF0C;&#x9019;&#x6A23;&#x7684;&#x5BEB;&#x6CD5;&#x8DDF;&#x4F7F;&#x7528; <code>Null</code> &#x7576;&#x56DE;&#x50B3;&#x503C;&#x4E00;&#x6A23;&#xFF0C;&#x5728;&#x9019;&#x500B;&#x7248;&#x672C;&#x5B8C;&#x5168;&#x770B;&#x4E0D;&#x51FA;&#x4F7F;&#x7528; <code>Option</code> &#x597D;&#x8655;&#xFF0C;&#x53CD;&#x800C;&#x986F;&#x5F97;&#x5197;&#x9918;&#xFF0E;</p>
<p>&#x6211;&#x5011;&#x6539;&#x5BEB;&#x53E6;&#x5916;&#x4E00;&#x500B;&#x7248;&#x672C; <code>getJsonProfile</code> &#xFF1A;<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">getJsonProfile</span></span>(name: <span class="type">UserName</span>, password: <span class="type">Password</span>, country: <span class="type">Country</span>): <span class="type">Option</span>[<span class="type">String</span>] = {</div><div class="line">    <span class="type">Repo</span>.login(name, password).flatMap(</div><div class="line">      account =&gt; {</div><div class="line">        <span class="keyword">if</span> (account.userType == <span class="type">ADMIN</span>) {</div><div class="line">          <span class="type">Repo</span>.getAccountsByCountry(country).flatMap(profiles =&gt; listToJson(profiles))</div><div class="line">        }</div><div class="line">        <span class="keyword">else</span> <span class="type">None</span></div><div class="line">      })</div><div class="line">  }</div></pre></td></tr></table></figure></p>
<p>&#x6211;&#x5011;&#x5229;&#x7528; <code>flatMap</code> &#x4F86;&#x5E6B;&#x4E32;&#x63A5;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5617;&#x8A66;&#x53D6;&#x5F97; <code>Option</code> &#x88E1;&#x9762;&#x7684;&#x503C;&#xFF0C;<code>Option</code> &#x7684; <code>flatMap</code> &#x7684; signature &#x70BA; <code>A =&gt; Option[B]</code>&#xFF0E;</p>
<p>&#x4F8B;&#x5982;&#xFF1A; <code>getAccountsByCountry</code> &#x9700;&#x4F9D;&#x8CF4; <code>login</code> &#x7684;&#x7D50;&#x679C;&#xFF0C;&#x624D;&#x53EF;&#x4EE5;&#x9032;&#x884C;&#x4E4B;&#x5F8C;&#x7684;&#x52D5;&#x4F5C;&#xFF0E;&#x6211;&#x5011;&#x662F;&#x900F;&#x904E; <code>flatMap</code> &#x5C07;&#x9019;&#x5169;&#x500B;&#x52D5;&#x4F5C;&#x4E32;&#x63A5;&#x8D77;&#x4F86;&#xFF0C;<br>&#x9019;&#x6A23;&#x5C31;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x4E00;&#x5806;&#x5197;&#x9918; <code>if else</code> &#x6AA2;&#x67E5;&#xFF0E;</p>
<p>&#x518D;&#x8209;&#x4E00;&#x500B;&#x62BD;&#x8C61;&#x7684;&#x4F8B;&#x5B50;&#xFF1A;<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">A</span></span>(a: <span class="type">A</span>): <span class="type">Option</span>[<span class="type">B</span>] = ???</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">B</span></span>(b: <span class="type">B</span>): <span class="type">Option</span>[<span class="type">C</span>] = ???</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">C</span></span>(c: <span class="type">C</span>): <span class="type">Option</span>[<span class="type">D</span>] = ???</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">total</span></span>(input: <span class="type">Option</span>[<span class="type">A</span>]): <span class="type">Option</span>[<span class="type">D</span>] = {</div><div class="line">  input.flatMap(<span class="type">A</span>(_).flatMap(<span class="type">B</span>(_).flatMap(<span class="type">C</span>(_))))</div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>&#x53EF;&#x4EE5;&#x900F;&#x904E; <code>flatMap</code> &#x4E32;&#x63A5; <code>A</code>, <code>B</code>, <code>C</code> &#x9019;&#x4E09;&#x500B;function&#xFF0C;&#x5047;&#x5982;&#x7528; <code>isDefined</code> &#x4F86;&#x4E32;&#x63A5;&#xFF0C;&#x7A0B;&#x5F0F;&#x78BC;&#x7684;&#x53EF;&#x8B80;&#x6027;&#x548C;&#x7DAD;&#x8B77;&#x6027;&#x6703;&#x5927;&#x5E45;&#x4E0B;&#x964D;&#xFF0E;<br>&#x5728; <code>Function Programming</code>&#x4E2D;&#xFF0C;&#x5E38;&#x898B;&#x7684;pattern&#x6703;&#x5C07;&#x503C;&#x653E;&#x5230;&#x4E00;&#x500B;context&#x88E1;&#x9762;&#xFF0C;&#x5728;&#x4F7F;&#x7528;&#x6642;&#x5019;&#x4E26;&#x4E0D;&#x6703;&#x5C07;&#x503C;&#x53D6;&#x51FA;&#x4F86;&#xFF0C;&#x800C;&#x662F;&#x900F;&#x904E; <code>flatMap</code> &#x6216; <code>map</code> &#x4F86;&#x8F49;&#x63DB;context&#x88E1;&#x9762;&#x7684;&#x503C;&#xFF0E;</p>
<p>&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x50B3;&#x5165; <code>parse</code> &#x904E;&#x5F8C;&#x7684;&#x7D50;&#x679C;&#xFF0C;&#x5C07;&#x6240;&#x6709;&#x7684;function&#x4E32;&#x63A5;&#x5728;&#x4E00;&#x8D77;&#xFF1A;<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">object</span> <span class="title">Api</span> <span class="keyword">extends</span> <span class="title">App</span> </span>{</div><div class="line">  <span class="keyword">val</span> name: <span class="type">Option</span>[<span class="type">UserName</span>] = parse(<span class="type">UserName</span>(args(<span class="number">0</span>)))</div><div class="line">  <span class="keyword">val</span> password: <span class="type">Option</span>[<span class="type">MD5Password</span>] = parse(<span class="type">MD5Password</span>(args(<span class="number">1</span>)))</div><div class="line"></div><div class="line"></div><div class="line">  <span class="keyword">val</span> json: <span class="type">Option</span>[<span class="type">String</span>] = getJsonProfile(name, password, <span class="type">CHINA</span>)</div><div class="line">  <span class="keyword">if</span> (json.isDefined) {</div><div class="line">    returnHttpResponse(json.get)</div><div class="line">  } <span class="keyword">else</span> {</div><div class="line">    returnHttpResponse(<span class="string">&quot;&quot;</span>)</div><div class="line">  }</div><div class="line">  </div><div class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">getJsonProfile</span></span>(name: <span class="type">Option</span>[<span class="type">UserName</span>], password: <span class="type">Option</span>[<span class="type">Password</span>], country: <span class="type">Country</span>): <span class="type">Option</span>[<span class="type">String</span>] = {</div><div class="line">    name.flatMap(name1 =&gt;</div><div class="line">      password.flatMap(password1 =&gt;</div><div class="line">        <span class="type">Repo</span>().login(name1, password1).flatMap(</div><div class="line">          account =&gt; {</div><div class="line">            <span class="keyword">if</span> (account.userType == <span class="type">ADMIN</span>) {</div><div class="line">              <span class="type">Repo</span>().getAccountsByCountry(country).flatMap(profiles =&gt; listToJson(profiles))</div><div class="line">            }</div><div class="line">            <span class="keyword">else</span> <span class="type">None</span></div><div class="line">          })</div><div class="line">      ))</div><div class="line">  }</div><div class="line">  </div><div class="line">  <span class="comment">// other functions</span></div><div class="line">  <span class="comment">// ...</span></div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>&#x53EF;&#x4EE5;&#x767C;&#x73FE;&#x4E32;&#x63A5;&#x7684;function&#x8D8A;&#x591A;&#xFF0C;&#x6703;&#x8D8A;&#x5BEB;&#x8D8A;&#x53F3;&#x908A;&#xFF0C;&#x6709;&#x9EDE;&#x985E;&#x4F3C; <code>Callback hell</code> &#xFF0C;&#x6216;&#x8A31;&#x4E5F;&#x53EF;&#x4EE5;&#x7A31;&#x70BA; <code>flatMap hell</code>&#x2026;<br>&#x597D;&#x96AA;Scala&#x6709;&#x63D0;&#x4F9B;&#x5F88;&#x597D;&#x7684; syntax sugar <code>for comprehension</code> &#x4F86;&#x89E3;&#x6C7A; <code>flatMap hell</code></p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">object</span> <span class="title">Api</span> <span class="keyword">extends</span> <span class="title">App</span> </span>{</div><div class="line">  <span class="keyword">val</span> name: <span class="type">Option</span>[<span class="type">UserName</span>] = parse(<span class="type">UserName</span>(args(<span class="number">0</span>)))</div><div class="line">  <span class="keyword">val</span> password: <span class="type">Option</span>[<span class="type">MD5Password</span>] = parse(<span class="type">MD5Password</span>(args(<span class="number">1</span>)))</div><div class="line">  </div><div class="line">  <span class="keyword">for</span> {</div><div class="line">    name1 &lt;- name</div><div class="line">    password1 &lt;- password</div><div class="line">    account &lt;- <span class="type">Repo</span>().login(name1, password1).filter(a =&gt; a.userType == <span class="type">ADMIN</span>)</div><div class="line">    profiles &lt;- <span class="type">Repo</span>().getAccountsByCountry(<span class="type">CHINA</span>)</div><div class="line">    json &lt;- listToJson(profiles)</div><div class="line">  } <span class="keyword">yield</span> {</div><div class="line">    returnHttpResponse(json)</div><div class="line">  }</div><div class="line">      </div><div class="line">  <span class="comment">// other functions</span></div><div class="line">  <span class="comment">// ...</span></div><div class="line">}</div></pre></td></tr></table></figure>
<p>&#x6BD4;&#x8F03;&#x7B2C;&#x4E00;&#x500B;&#x7248;&#x672C;&#x548C;&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x7248;&#x672C;&#x7684;&#x7A0B;&#x5F0F;&#x78BC;&#xFF0C;&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x7248;&#x672C;&#x53EF;&#x4EE5;&#x5F88;&#x6E05;&#x695A;&#x8868;&#x9054;&#x6574;&#x500B;&#x7A0B;&#x5F0F;&#x610F;&#x5716;&#xFF0C;&#x800C;&#x4E0D;&#x6703;&#x88AB;&#x4E00;&#x5806; <code>if else</code> &#x6AA2;&#x67E5;&#x800C;&#x5E72;&#x64FE;&#xFF0E;<br>&#x900F;&#x904E;&#x6B63;&#x78BA;&#x4F7F;&#x7528; <code>Option</code> &#x6211;&#x5011;&#x53EF;&#x4EE5;&#x5B78;&#x7FD2;&#x5230;&#xFF1A;</p>
<ol>
<li>&#x5206;&#x96E2;&#x8CC7;&#x6599;&#x548C;&#x884C;&#x70BA;</li>
<li>&#x5C07;&#x8CC7;&#x6599;&#x653E;&#x5165;context</li>
<li>&#x5229;&#x7528; <code>flatMap</code>, <code>map</code> &#x8F49;&#x63DB;context&#x88E1;&#x9762;&#x7684;&#x503C;</li>
</ol>
<h3 id="&#x884D;&#x751F;&#x9700;&#x6C42;"><a href="#&#x884D;&#x751F;&#x9700;&#x6C42;" class="headerlink" title="&#x884D;&#x751F;&#x9700;&#x6C42;"></a>&#x884D;&#x751F;&#x9700;&#x6C42;</h3><p>&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x7248;&#x672C;&#x53EF;&#x4EE5;&#x767C;&#x73FE;<br>payload&#x4E0D;&#x6B63;&#x78BA;&#x6216;&#x67D0;&#x500B;&#x570B;&#x5BB6;&#x7684;&#x4F7F;&#x7528;&#x8005;&#x70BA;&#x96F6;</p>
<p>&#x7D50;&#x679C;&#x7ADF;&#x7136;&#x90FD;&#x662F;<code>None</code>&#xFF0C;&#x9019;&#x6A23;&#x6703;&#x9020;&#x6210;&#x4F7F;&#x7528;&#x8005;&#x9AD4;&#x9A57;&#x4E0D;&#x4F73;&#x548C;&#x7DAD;&#x8B77;&#x4E0A;&#x7684;&#x56F0;&#x96E3;&#xFF0E;&#x90A3;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x600E;&#x9EBC;&#x6539;&#x5584;&#x5462;&#xFF1F;</p>
<p>&#x53EF;&#x4EE5;&#x6539;&#x7528; <code>Try</code> &#x6216; <code>Either</code> &#x4F86;&#x8868;&#x9054;&#x932F;&#x8AA4;&#xFF0C;&#x5728;&#x9019;&#x908A;&#x4F7F;&#x7528; <code>Option</code> &#x4F86;&#x8868;&#x793A;parse&#x5B8C;&#x7684;&#x7D50;&#x679C;&#x4E0D;&#x592A;&#x6D3D;&#x7576;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x5C55;&#x793A;&#x53EF;&#x4EE5;&#x900F;&#x904E;compse&#x65B9;&#x5F0F;&#x4F86;&#x4E32;&#x63A5;&#x591A;&#x500B;function&#xFF0C;&#x4E0B;&#x4E00;&#x7BC7;&#x5C07;&#x6539;&#x7528; <code>Try</code> &#x6216; <code>Either</code> &#xFF0C;&#x8B93;&#x524D;&#x7AEF;&#x53EF;&#x4EE5;&#x6E05;&#x695A;&#x77E5;&#x9053;&#x932F;&#x8AA4;&#x8A0A;&#x606F;&#xFF0E;</p>
<h3 id="&#x53C3;&#x8003;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#xFF1A;"></a>&#x53C3;&#x8003;&#xFF1A;</h3><ol>
<li><a href="http://tpolecat.github.io/presentations/algebraic_types.html#1" target="_blank" rel="external">Introduction to Algebraic Types in Scala</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x5C0D;&amp;#x65BC;Scala&amp;#x6211;&amp;#x4E00;&amp;#x76F4;&amp;#x628A;&amp;#x5B83;&amp;#x7576;&amp;#x6210;&amp;#x9032;&amp;#x968E;&amp;#x7248;&amp;#x672C;&amp;#x7684;Java&amp;#xFF0C;&amp;#x7576;
    
    </summary>
    
      <category term="Scala" scheme="https://pandaforme.github.io/categories/Scala/"/>
    
    
      <category term="Scala" scheme="https://pandaforme.github.io/tags/Scala/"/>
    
      <category term="Option" scheme="https://pandaforme.github.io/tags/Option/"/>
    
  </entry>
  
  <entry>
    <title>[Java] Java is Pass by Value and Not Pass by Reference</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-Java-is-Pass-by-Value-and-Not-Pass-by-Reference/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-Java-is-Pass-by-Value-and-Not-Pass-by-Reference/</id>
    <published>2016-12-09T11:00:43.000Z</published>
    <updated>2016-12-13T07:25:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>Java&#x5230;&#x5E95;&#x662F;pass by value&#x9084;&#x662F;pass by reference&#xFF1F;&#x8AAA;&#x6CD5;&#x773E;&#x8AAA;&#x7D1B;&#x7D1C;&#xFF0C;&#x5F8C;&#x4F86;&#x770B;&#x5230;&#x9019;&#x7BC7;&#x6587;&#x7AE0;<a href="http://www.journaldev.com/3884/java-is-pass-by-value-and-not-pass-by-reference" target="_blank" rel="external">Java is Pass by Value and Not Pass by Reference</a>&#x5F8C;&#xFF0C;&#x89C0;&#x5FF5;&#x624D;&#x6574;&#x500B;&#x91D0;&#x6E05;&#x3002;</p>
<p><strong><em>Java&#x662F;pass by value!</em></strong></p>
<h3 id="&#x7BC4;&#x4F8B;&#xFF1A;"><a href="#&#x7BC4;&#x4F8B;&#xFF1A;" class="headerlink" title="&#x7BC4;&#x4F8B;&#xFF1A;"></a>&#x7BC4;&#x4F8B;&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Balloon</span> </span>{</div><div class="line"></div><div class="line">	<span class="keyword">private</span> String	color;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Balloon</span><span class="params">()</span> </span>{</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Balloon</span><span class="params">(String c)</span> </span>{</div><div class="line">		<span class="keyword">this</span>.color = c;</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getColor</span><span class="params">()</span> </span>{</div><div class="line">		<span class="keyword">return</span> color;</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setColor</span><span class="params">(String color)</span> </span>{</div><div class="line">		<span class="keyword">this</span>.color = color;</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</div><div class="line">		Balloon red = <span class="keyword">new</span> Balloon(<span class="string">&quot;Red&quot;</span>);</div><div class="line">		Balloon blue = <span class="keyword">new</span> Balloon(<span class="string">&quot;Blue&quot;</span>);</div><div class="line"></div><div class="line">		swap(red, blue);</div><div class="line">		System.out.println(<span class="string">&quot;red color=&quot;</span> + red.getColor());</div><div class="line">		System.out.println(<span class="string">&quot;blue color=&quot;</span> + blue.getColor());</div><div class="line"></div><div class="line">		foo(blue);</div><div class="line">		System.out.println(<span class="string">&quot;blue color=&quot;</span> + blue.getColor());</div><div class="line"></div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">foo</span><span class="params">(Balloon balloon)</span> </span>{</div><div class="line">		balloon.setColor(<span class="string">&quot;Red&quot;</span>);</div><div class="line">		balloon = <span class="keyword">new</span> Balloon(<span class="string">&quot;Green&quot;</span>);</div><div class="line">		balloon.setColor(<span class="string">&quot;Blue&quot;</span>);</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(Object o1, Object o2)</span> </span>{</div><div class="line">		Object temp = o1;</div><div class="line">		o1 = o2;</div><div class="line">		o2 = temp;</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swap1</span><span class="params">(Balloon o1, Balloon o2)</span> </span>{</div><div class="line">		String temp = o1.getColor();</div><div class="line">		o1.setColor(o2.getColor());</div><div class="line">		o2.setColor(temp);</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure>
<p>&#x7D50;&#x679C;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">//&#x4F7F;&#x7528;swap()</div><div class="line">red color=Red</div><div class="line">blue color=Blue</div><div class="line">blue color=Red</div><div class="line"></div><div class="line">//&#x4F7F;&#x7528;swap1()</div><div class="line">red color=Blue</div><div class="line">blue color=Red</div><div class="line">blue color=Red</div></pre></td></tr></table></figure></p>
<p>&#x5206;&#x6790;&#xFF1A;</p>
<ol>
<li>&#x5C1A;&#x672A;&#x57F7;&#x884C;swap()&#xFF1A;<img src="/2016/12/09/Java-Java-is-Pass-by-Value-and-Not-Pass-by-Reference/Untitled-7--1.png" alt=""></li>
<li>&#x57F7;&#x884C;swap()&#xFF0C;o1&#x6307;&#x5411;red&#xFF0C;o2&#x6307;&#x5411;blue&#xFF1A;<img src="/2016/12/09/Java-Java-is-Pass-by-Value-and-Not-Pass-by-Reference/Untitled-1---1--1.png" alt=""></li>
<li>swap()&#x57F7;&#x884C;&#x7D50;&#x675F;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x7269;&#x4EF6;&#x4E26;&#x6C92;&#x6709;&#x4E92;&#x76F8;&#x4EA4;&#x63DB;&#xFF1A;<img src="/2016/12/09/Java-Java-is-Pass-by-Value-and-Not-Pass-by-Reference/Untitled-2--1.png" alt=""></li>
<li>&#x57F7;&#x884C;foo()&#xFF0C;ballon&#x6307;&#x5411;blue&#xFF1A;<img src="/2016/12/09/Java-Java-is-Pass-by-Value-and-Not-Pass-by-Reference/Untitled-3--1.png" alt=""></li>
<li>&#x57F7;&#x884C;foo()&#x7B2C;&#x4E00;&#x884C;&#xFF0C;&#x900F;&#x904E;&#x539F;&#x672C;&#x7269;&#x4EF6;&#x7684;setter method&#x4FEE;&#x6539;&#x503C;&#xFF1A;<img src="/2016/12/09/Java-Java-is-Pass-by-Value-and-Not-Pass-by-Reference/Untitled-4--1.png" alt=""></li>
<li>&#x57F7;&#x884C;foo()&#x7B2C;&#x4E8C;&#x884C;&#xFF1A;<img src="/2016/12/09/Java-Java-is-Pass-by-Value-and-Not-Pass-by-Reference/Untitled-5--2.png" alt=""></li>
<li>&#x57F7;&#x884C;foo()&#x7B2C;&#x4E09;&#x884C;&#xFF1A;<img src="/2016/12/09/Java-Java-is-Pass-by-Value-and-Not-Pass-by-Reference/Untitled-6--2.png" alt=""></li>
</ol>
<p>&#x56E0;&#x70BA;Java&#x662F;&#x63A1;&#x7528;pass by value&#x4F5C;&#x6CD5;&#xFF0C;&#x7576;&#x4EE5;&#x7269;&#x4EF6;&#x4F5C;&#x70BA;&#x53C3;&#x6578;&#x50B3;&#x5165;&#x5230;method&#xFF0C;&#x5728;method&#x88E1;&#x9762;&#x60F3;&#x8981;&#x4FEE;&#x6539;&#x7269;&#x4EF6;&#x7684;&#x503C;&#xFF0C;&#x9700;&#x900F;&#x904E;&#x7269;&#x4EF6;&#x7684;setter method&#xFF0C;&#x9019;&#x6A23;&#x539F;&#x672C;&#x7269;&#x4EF6;&#x7684;&#x503C;&#x624D;&#x6703;&#x9023;&#x5E36;&#x4E00;&#x8D77;&#x8B8A;&#x66F4;&#x3002;&#x900F;&#x904E;assign(=)&#x6216;new&#x7B49;&#x65B9;&#x5F0F;&#xFF0C;&#x539F;&#x672C;&#x7269;&#x4EF6;&#x7684;&#x503C;&#x90FD;&#x4E0D;&#x6703;&#x6709;&#x8B8A;&#x5316;&#x3002;</p>
<h3 id="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</h3><ul>
<li><a href="http://www.journaldev.com/3884/java-is-pass-by-value-and-not-pass-by-reference" target="_blank" rel="external">Java is Pass by Value and Not Pass by Reference</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java&amp;#x5230;&amp;#x5E95;&amp;#x662F;pass by value&amp;#x9084;&amp;#x662F;pass by reference&amp;#xFF1F;&amp;#x8AAA;&amp;#x6CD5;&amp;#x773E;&amp;#x8AAA;&amp;#x7D1B;&amp;#x7D1C;&amp;#xFF0C
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>[Java]  Java String Pool</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-Java-String-Pool/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-Java-String-Pool/</id>
    <published>2016-12-09T10:57:57.000Z</published>
    <updated>2016-12-13T07:25:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5047;&#x5982;&#x6C92;&#x6709;string pool&#x9019;&#x6A23;&#x7684;&#x6A5F;&#x5236;&#xFF0C;&#x9047;&#x5230;string&#x5C31;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x9019;&#x6A23;&#x8A18;&#x61B6;&#x9AD4;&#x5C31;&#x5F88;&#x5FEB;&#x5C31;&#x6703;&#x7206;&#x6389;&#x4E86;&#x3002;</p>
<p>&#x5728;java&#x4E2D;&#x63A1;&#x53D6;<a href="http://en.wikipedia.org/wiki/Flyweight_pattern" target="_blank" rel="external">Flyweight pattern</a>&#x4F5C;&#x6CD5;&#xFF0C;&#x53EF;&#x4EE5;&#x5171;&#x4EAB;&#x540C;&#x6A23;&#x7684;string object&#x3002;</p>
<p><img src="http://www.journaldev.com/wp-content/uploads/2012/11/String-Pool-Java1.png" alt=""></p>
<p>&#x5EFA;&#x7ACB;string object&#x6709;&#x5169;&#x7A2E;&#x65B9;&#x5F0F;&#xFF1A;</p>
<ol>
<li>String string = &#x201C;Cat&#x201D;;</li>
<li>String string = new String(&#x201C;Cat&#x201D;);</li>
</ol>
<p>&#x63A1;&#x7528;&#x7B2C;&#x4E00;&#x7A2E;&#x65B9;&#x6CD5;&#xFF0C;&#x6703;&#x5148;&#x6AA2;&#x67E5;string pool&#x662F;&#x5426;&#x6709;&#x76F8;&#x540C;&#x7684;string&#x3002;&#x82E5;&#x6709;&#x5C31;&#x5171;&#x7528;&#xFF0C;&#x6C92;&#x6709;&#x5247;&#x5EFA;&#x7ACB;&#x4E4B;&#x3002;</p>
<p>&#x63A1;&#x7528;&#x7B2C;&#x4E8C;&#x7A2E;&#x65B9;&#x6CD5;&#xFE50;&#x4E0D;&#x6703;&#x4F7F;&#x7528;&#x5230;string pool&#x6A5F;&#x5236;&#xFF0C;&#x800C;&#x662F;&#x5728;heap&#x5EFA;&#x7ACB;&#x4E00;&#x500B;&#x65B0;&#x7684;string object&#x3002;&#x82E5;&#x4E4B;&#x5F8C;&#x60F3;&#x8981;&#x4F7F;&#x7528;string pool&#x6A5F;&#x5236;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#intern%28%29" target="_blank" rel="external">intern</a>&#x3002;</p>
<h3 id="&#x7BC4;&#x4F8B;&#xFF1A;"><a href="#&#x7BC4;&#x4F8B;&#xFF1A;" class="headerlink" title="&#x7BC4;&#x4F8B;&#xFF1A;"></a>&#x7BC4;&#x4F8B;&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringExample</span> </span>{</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>{</div><div class="line">		String s1 = <span class="string">&quot;Cat&quot;</span>;</div><div class="line">		String s2 = <span class="string">&quot;Cat&quot;</span>;</div><div class="line">		String s3 = <span class="keyword">new</span> String(<span class="string">&quot;Cat&quot;</span>);</div><div class="line"></div><div class="line">		System.out.println(<span class="string">&quot;s1 == s2 ?&quot;</span> + (s1 == s2));</div><div class="line">		System.out.println(<span class="string">&quot;s1 == s3 ?&quot;</span> + (s1 == s3));</div><div class="line">		System.out.println(<span class="string">&quot;s1 == s3.intern() ?&quot;</span> + (s1 == s3.intern()));</div><div class="line">		System.out.println(<span class="string">&quot;s1 equals s3 ?&quot;</span> + s1.equals(s3));</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure>
<p>&#x7D50;&#x679C;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">s1 == s2 ?true</div><div class="line">s1 == s3 ?false</div><div class="line">s1 == s3.intern() ?true</div><div class="line">s1 equals s3 ?true</div></pre></td></tr></table></figure></p>
<h3 id="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</h3><ul>
<li><a href="http://www.journaldev.com/797/what-is-java-string-pool" target="_blank" rel="external">What is Java String Pool?</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x5047;&amp;#x5982;&amp;#x6C92;&amp;#x6709;string pool&amp;#x9019;&amp;#x6A23;&amp;#x7684;&amp;#x6A5F;&amp;#x5236;&amp;#xFF0C;&amp;#x9047;&amp;#x5230;string&amp;#x5C31;&amp;#x5EFA;&amp;#x7ACB;
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>[SQL] How to get rank using ANSI SQL</title>
    <link href="https://pandaforme.github.io/2016/12/09/SQL-How-to-get-rank-using-ANSI-SQL/"/>
    <id>https://pandaforme.github.io/2016/12/09/SQL-How-to-get-rank-using-ANSI-SQL/</id>
    <published>2016-12-09T10:57:02.000Z</published>
    <updated>2016-12-13T07:16:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x8981;&#x5C0D;&#x5206;&#x6578;&#x505A;&#x6392;&#x540D;&#xFF0C;&#x6700;&#x76F4;&#x63A5;&#x7684;&#x60F3;&#x6CD5;&#x5C31;&#x5C0D;&#x5B83;&#x5011;&#x505A;ORDER BY&#x3002;&#x4F46;&#x662F;&#x7576;&#x5206;&#x6578;&#x6709;&#x91CD;&#x8907;&#x6642;&#x5019;&#x6392;&#x540D;&#x662F;&#x8981;&#x4E00;&#x6A23;&#xFF0C;&#x9019;&#x6642;&#x5019;ORDER BY&#x5C31;&#x767C;&#x63EE;&#x4E0D;&#x4E86;&#x4F5C;&#x7528;&#x3002;</p>
<p>&#x4E0D;&#x540C;&#x7684;&#x5EE0;&#x5546;&#x7684;&#x8CC7;&#x6599;&#x5EAB;&#x6709;&#x63D0;&#x4F9B;&#x4E0D;&#x540C;&#x7684;&#x51FD;&#x6578;&#x53EF;&#x4EE5;&#x89E3;&#x6C7A;&#x9019;&#x500B;&#x554F;&#x984C;&#xFF0C;&#x5047;&#x5982;&#x6C92;&#x6709;&#x4F7F;&#x7528;&#x51FD;&#x6578;&#x8A72;&#x5982;&#x4F55;&#x505A;&#x5230;&#x5462;?</p>
<h4 id="&#x5EFA;&#x7ACB;&#x8CC7;&#x6599;&#x8868;&#xFF1A;"><a href="#&#x5EFA;&#x7ACB;&#x8CC7;&#x6599;&#x8868;&#xFF1A;" class="headerlink" title="&#x5EFA;&#x7ACB;&#x8CC7;&#x6599;&#x8868;&#xFF1A;"></a>&#x5EFA;&#x7ACB;&#x8CC7;&#x6599;&#x8868;&#xFF1A;</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`golf`</span> (</div><div class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</div><div class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">45</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`score`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</div><div class="line">);</div></pre></td></tr></table></figure>
<h4 id="&#x65B0;&#x589E;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x65B0;&#x589E;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x65B0;&#x589E;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x65B0;&#x589E;&#x8CC7;&#x6599;&#xFF1A;</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`golf`</span>(<span class="string">`name`</span>,<span class="string">`score`</span>) <span class="keyword">VALUES</span> (A,<span class="number">74</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`golf`</span>(<span class="string">`name`</span>,<span class="string">`score`</span>) <span class="keyword">VALUES</span> (B,<span class="number">79</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`golf`</span>(<span class="string">`name`</span>,<span class="string">`score`</span>) <span class="keyword">VALUES</span> (C,<span class="number">79</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`golf`</span>(<span class="string">`name`</span>,<span class="string">`score`</span>) <span class="keyword">VALUES</span> (D,<span class="number">82</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`golf`</span>(<span class="string">`name`</span>,<span class="string">`score`</span>) <span class="keyword">VALUES</span> (E,<span class="number">89</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`golf`</span>(<span class="string">`name`</span>,<span class="string">`score`</span>) <span class="keyword">VALUES</span> (F,<span class="number">89</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`golf`</span>(<span class="string">`name`</span>,<span class="string">`score`</span>) <span class="keyword">VALUES</span> (G,<span class="number">98</span>);</div></pre></td></tr></table></figure>
<h4 id="&#x67E5;&#x8A62;&#xFF1A;"><a href="#&#x67E5;&#x8A62;&#xFF1A;" class="headerlink" title="&#x67E5;&#x8A62;&#xFF1A;"></a>&#x67E5;&#x8A62;&#xFF1A;</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> </div><div class="line">    tmp.name,</div><div class="line">    tmp.score,</div><div class="line">    (<span class="keyword">SELECT</span> </div><div class="line">            <span class="keyword">COUNT</span>(*) + <span class="number">1</span></div><div class="line">        <span class="keyword">FROM</span></div><div class="line">            (<span class="keyword">SELECT</span> </div><div class="line">                golf.score</div><div class="line">            <span class="keyword">FROM</span></div><div class="line">                golf</div><div class="line">            <span class="keyword">GROUP</span> <span class="keyword">BY</span> golf.score) <span class="keyword">AS</span> tmp1</div><div class="line">        <span class="keyword">WHERE</span></div><div class="line">            tmp1.score &gt; tmp.score) <span class="keyword">AS</span> <span class="keyword">rank</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line">    golf <span class="keyword">AS</span> tmp</div><div class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> tmp.score <span class="keyword">DESC</span>;</div></pre></td></tr></table></figure>
<h4 id="&#x7D50;&#x679C;&#xFF1A;"><a href="#&#x7D50;&#x679C;&#xFF1A;" class="headerlink" title="&#x7D50;&#x679C;&#xFF1A;"></a>&#x7D50;&#x679C;&#xFF1A;</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">name	score	rank</div><div class="line">G		98		1</div><div class="line">E		89		2</div><div class="line">F		89		2</div><div class="line">D		82		3</div><div class="line">B		79		4</div><div class="line">C		79		4</div><div class="line">A		74		5</div></pre></td></tr></table></figure>
<h4 id="&#x60F3;&#x6CD5;&#xFF1A;"><a href="#&#x60F3;&#x6CD5;&#xFF1A;" class="headerlink" title="&#x60F3;&#x6CD5;&#xFF1A;"></a>&#x60F3;&#x6CD5;&#xFF1A;</h4><p>&#x5148;&#x5F9E;&#x6392;&#x540D;&#x9019;&#x500B;&#x6982;&#x5FF5;&#x4E0B;&#x624B;&#xFF0C;&#x5047;&#x5982;&#x6709;&#x4E09;&#x500B;&#x4EBA;&#x7684;&#x5206;&#x6578;(&#x9019;&#x4E09;&#x4EBA;&#x5206;&#x6578;&#x90FD;&#x4E0D;&#x4E00;&#x6A23;)&#x5927;&#x65BC;&#x6211;&#x7684;&#x5206;&#x6578;&#xFF0C;&#x90A3;&#x9EBC;&#x6211;&#x5C31;&#x662F;&#x6392;&#x540D;&#x7B2C;&#x56DB;&#x3002;&#x56E0;&#x70BA;&#x5206;&#x6578;&#x91CD;&#x8907;&#x7684;&#x6392;&#x540D;&#x662F;&#x4E00;&#x6A23;&#x7684;&#xFF0C;&#x9700;&#x8981;&#x5148;&#x5C0D;&#x5206;&#x6578;&#x505A;&#x4E00;&#x6B21;GROUP BY&#xFF0C;&#x518D;&#x6839;&#x64DA;&#x4E0A;&#x8FF0;&#x7684;&#x6982;&#x5FF5;&#x53BB;&#x7B97;&#x51FA;&#x6392;&#x540D;&#x3002;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x8981;&amp;#x5C0D;&amp;#x5206;&amp;#x6578;&amp;#x505A;&amp;#x6392;&amp;#x540D;&amp;#xFF0C;&amp;#x6700;&amp;#x76F4;&amp;#x63A5;&amp;#x7684;&amp;#x60F3;&amp;#x6CD5;&amp;#x5C31;&amp;#x5C0D;&amp;#x5B83;&amp;
    
    </summary>
    
      <category term="SQL" scheme="https://pandaforme.github.io/categories/SQL/"/>
    
    
      <category term="SQL" scheme="https://pandaforme.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>[Java] Synchronize in Java</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-Synchronize-in-Java/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-Synchronize-in-Java/</id>
    <published>2016-12-09T09:31:00.000Z</published>
    <updated>2016-12-09T10:04:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5728;&#x4E86;&#x89E3;Java&#x7684;synchronized&#x6A5F;&#x5236;&#x4E4B;&#x524D;&#xFF0C;&#x5148;&#x4F86;&#x8907;&#x7FD2;&#x4E00;&#x4E0B;Monitor&#x3002;</p>
<p>&#x53EF;&#x4EE5;&#x628A;Monitor&#x60F3;&#x50CF;&#x6210;&#x5B83;&#x5C31;&#x662F;&#x4E00;&#x500B;&#x985E;&#x5225;&#xFF0C;&#x88E1;&#x9762;&#x5B58;&#x653E;&#x8457;&#x5171;&#x4EAB;&#x8B8A;&#x6578;&#x3001;&#x65B9;&#x6CD5;&#x548C;&#x5EFA;&#x69CB;&#x5B50;&#x3002;<br><img src="/2016/12/09/Java-Synchronize-in-Java/Monitor.png" alt="Monitor"><br>Monitor&#x6703;&#x78BA;&#x4FDD;&#x53EA;&#x6709;&#x4E00;&#x500B;Process&#x53EF;&#x4EE5;&#x9032;&#x5165;&#xFF0C;&#x5176;&#x4ED6;&#x4E5F;&#x60F3;&#x8981;&#x9032;&#x5165;&#x7684;Process&#xFF0C;&#x5C31;&#x5FC5;&#x9808;&#x5728;queue&#x88E1;&#x9762;&#x7B49;&#x5F85;&#x3002;&#x7A0B;&#x5F0F;&#x8A2D;&#x8A08;&#x5E2B;&#x53EF;&#x4EE5;&#x6839;&#x64DA;&#x4E0D;&#x540C;&#x7684;&#x60C5;&#x6CC1;&#xFF0C;&#x6C7A;&#x5B9A;&#x662F;&#x5426;&#x8981;&#x8B93;&#x6B63;&#x5728;Monitor&#x7684;Process&#x9032;&#x5165;waiting state&#x6216;&#x662F;&#x559A;&#x9192;&#x5176;&#x4ED6;&#x5728;waiting state&#x7684;Process&#x3002;</p>
<p>&#x4F8B;&#x5982;&#xFF1A;&#x7576;&#x67D0;&#x500B;Process&#x53D6;&#x5F97;Monitor&#x7684;&#x57F7;&#x884C;&#x6B0A;&#x5229;&#xFF0C;&#x5728;&#x57F7;&#x884C;&#x904E;&#x7A0B;&#x4E2D;&#x767C;&#x73FE;&#x4E0D;&#x7B26;&#x5408;x&#x60C5;&#x6CC1;&#xFF0C;&#x5FC5;&#x9808;&#x9032;&#x5165;waiting state&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;x.wait()&#x3002;&#x60F3;&#x8981;&#x559A;&#x9192;x queue&#x4E2D;&#x7684;waiting Process&#xFF0C;&#x53EF;&#x4EE5;&#x900F;&#x904E;x.signal()&#x3002;&#x8A73;&#x7D30;&#x53EF;&#x4EE5;&#x53C3;&#x8003;<a href="http://www.amazon.com/Operating-System-Concepts-Abraham-Silberschatz/dp/1118063333/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1409112396&amp;sr=1-1&amp;keywords=Operating+System+Concepts" target="_blank" rel="external">Operating System Concepts</a>&#x3002;</p>
<p>Java&#x7684;synchronized&#x5C31;&#x662F;&#x5BE6;&#x4F5C;&#x4E86;Monitor&#xFF0C;Object&#x7684;wait()&#x548C;notify()&#x5C31;&#x76F8;&#x7576;&#x65BC;wait()&#x548C;signal()&#x3002;&#x6709;&#x4E86;&#x9019;&#x6A23;&#x7684;&#x6982;&#x5FF5;&#x5F8C;&#xFF0C;&#x5728;&#x4F7F;&#x7528;synchronized&#x5C31;&#x6BD4;&#x8F03;&#x4E0D;&#x6703;&#x767C;&#x751F;&#x9396;&#x932F;&#x5C0D;&#x8C61;&#x7684;&#x554F;&#x984C;&#x3002;</p>
<p>synchronized&#x4F7F;&#x7528;&#x65B9;&#x5F0F;&#x53EF;&#x4EE5;&#x5206;&#x70BA;&#x5169;&#x7A2E;&#xFF1A;</p>
<ol>
<li>synchronized mehtod </li>
<li>synchronized block</li>
</ol>
<p>###&#x7BC4;&#x4F8B;&#xFF1A;<br>TargetObject.java&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TargetObject</span> </span>{</div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>	count	= <span class="number">0</span>;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span> </span>{</div><div class="line">		count++;</div><div class="line">		System.out.println(Thread.currentThread().getName() + <span class="string">&quot; in method1 and count = &quot;</span> + count);</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method2</span><span class="params">()</span> </span>{</div><div class="line">		count++;</div><div class="line">		System.out.println(Thread.currentThread().getName() + <span class="string">&quot; in method2 and count = &quot;</span> + count);</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">staticMethod1</span><span class="params">()</span> </span>{</div><div class="line">		count++;</div><div class="line">		System.out.println(Thread.currentThread().getName() + <span class="string">&quot; in static method1 and count = &quot;</span> + count);</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">staticMethod2</span><span class="params">()</span> </span>{</div><div class="line">		count++;</div><div class="line">		System.out.println(Thread.currentThread().getName() + <span class="string">&quot; in static method2 and count = &quot;</span> + count);</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>Thread1.java&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Thread1</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>{</div><div class="line">	<span class="keyword">private</span> TargetObject	targetObject;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Thread1</span><span class="params">(TargetObject targetObject)</span> </span>{</div><div class="line">		<span class="keyword">this</span>.targetObject = targetObject;</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line">		<span class="keyword">while</span> (<span class="keyword">true</span>) {</div><div class="line">			<span class="keyword">this</span>.targetObject.method1();</div><div class="line">			<span class="keyword">try</span> {</div><div class="line">				Thread.sleep(<span class="number">1000</span>);</div><div class="line">			}</div><div class="line">			<span class="keyword">catch</span> (InterruptedException e) {</div><div class="line">				e.printStackTrace();</div><div class="line">			}</div><div class="line">		}</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>Thread2.java&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Thread2</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>{</div><div class="line">	<span class="keyword">private</span> TargetObject	targetObject;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Thread1</span><span class="params">(TargetObject targetObject)</span> </span>{</div><div class="line">		<span class="keyword">this</span>.targetObject = targetObject;</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line">		<span class="keyword">while</span> (<span class="keyword">true</span>) {</div><div class="line">			<span class="keyword">this</span>.targetObject.method2();</div><div class="line">			<span class="keyword">try</span> {</div><div class="line">				Thread.sleep(<span class="number">1000</span>);</div><div class="line">			}</div><div class="line">			<span class="keyword">catch</span> (InterruptedException e) {</div><div class="line">				e.printStackTrace();</div><div class="line">			}</div><div class="line">		}</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>Run.java&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Run</span> </span>{</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</div><div class="line">		TargetObject	targetObject	= <span class="keyword">new</span> TargetObject();</div><div class="line">		Thread thread1 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Thread1(targetObject), <span class="string">&quot;Thread1&quot;</span>);</div><div class="line">		Thread thread2 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Thread2(targetObject), <span class="string">&quot;Thread2&quot;</span>);</div><div class="line">		thread1.start();</div><div class="line">		thread2.start();</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>&#x57F7;&#x884C;&#x7D50;&#x679C;&#xFF1A;&#x6C92;&#x6709;&#x505A;&#x540C;&#x6B65;&#x8655;&#x7406;&#xFF0C;&#x6703;&#x5B58;&#x5728;race condition&#x3002;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Thread1 in method1 and count = <span class="number">2</span></div><div class="line">Thread2 in method2 and count = <span class="number">2</span></div><div class="line">Thread2 in method2 and count = <span class="number">3</span></div><div class="line">Thread1 in method1 and count = <span class="number">4</span></div><div class="line">Thread2 in method2 and count = <span class="number">5</span></div><div class="line">Thread2 in method2 and count = <span class="number">6</span></div></pre></td></tr></table></figure></p>
<hr>
<ul>
<li>&#x4F7F;&#x7528;synchronized method</li>
</ul>
<p>&#x5728;TargetObject.java&#x4E2D;&#x7684;method1&#x548C;method2&#x52A0;&#x4E0A;synchronized&#x5C31;&#x53EF;&#x4EE5;&#x9396;&#x5B9A;&#x7531;TargetObject&#x985E;&#x5225;&#x6240;&#x5BE6;&#x9AD4;&#x5316;&#x7684;&#x7269;&#x4EF6;targetObject&#x3002;</p>
<p>TargetObject.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TargetObject</span> </span>{</div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>	count	= <span class="number">0</span>;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span> </span>{</div><div class="line">		count++;</div><div class="line">		System.out.println(Thread.currentThread().getName() + <span class="string">&quot; in method1 and count = &quot;</span> + count);</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">method2</span><span class="params">()</span> </span>{</div><div class="line">		count++;</div><div class="line">		System.out.println(Thread.currentThread().getName() + <span class="string">&quot; in method2 and count = &quot;</span> + count);</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">staticMethod1</span><span class="params">()</span> </span>{</div><div class="line">		count++;</div><div class="line">		System.out.println(Thread.currentThread().getName() + <span class="string">&quot; in static method1 and count = &quot;</span> + count);</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">staticMethod2</span><span class="params">()</span> </span>{</div><div class="line">		count++;</div><div class="line">		System.out.println(Thread.currentThread().getName() + <span class="string">&quot; in static method2 and count = &quot;</span> + count);</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>&#x57F7;&#x884C;&#x7D50;&#x679C;&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Thread1 in method1 and count = <span class="number">1</span></div><div class="line">Thread2 in method2 and count = <span class="number">2</span></div><div class="line">Thread2 in method2 and count = <span class="number">3</span></div><div class="line">Thread1 in method1 and count = <span class="number">4</span></div><div class="line">Thread2 in method2 and count = <span class="number">5</span></div><div class="line">Thread2 in method2 and count = <span class="number">6</span></div><div class="line">Thread1 in method1 and count = <span class="number">7</span></div><div class="line">Thread2 in method2 and count = <span class="number">8</span></div><div class="line">Thread2 in method2 and count = <span class="number">9</span></div></pre></td></tr></table></figure></p>
<hr>
<p>&#x70BA;&#x4E86;&#x66F4;&#x6E05;&#x695A;&#x4E86;&#x89E3;&#x9396;&#x5B9A;&#x7684;&#x5C0D;&#x8C61;&#xFF0C;&#x73FE;&#x5728;&#x5148;&#x79FB;&#x9664;method1&#x7684;synchronized&#xFF0C;&#x5C07;&#x540C;&#x6B65;&#x6A5F;&#x5236;&#x5BEB;&#x5230;Thread1.java&#x3002;</p>
<p>Thread1.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Thread1</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>{</div><div class="line">	<span class="keyword">private</span> TargetObject	targetObject;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Thread1</span><span class="params">(TargetObject targetObject)</span> </span>{</div><div class="line">		<span class="keyword">this</span>.targetObject = targetObject;</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line">		<span class="keyword">while</span> (<span class="keyword">true</span>) {</div><div class="line">			<span class="keyword">synchronized</span> (targetObject) {</div><div class="line">				<span class="keyword">this</span>.targetObject.method1();</div><div class="line">				<span class="keyword">try</span> {</div><div class="line">					Thread.sleep(<span class="number">1000</span>);</div><div class="line">				}</div><div class="line">				<span class="keyword">catch</span> (InterruptedException e) {</div><div class="line">					e.printStackTrace();</div><div class="line">				}</div><div class="line">			}</div><div class="line">		}</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>&#x57F7;&#x884C;&#x7D50;&#x679C;&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Thread1 in method1 and count = <span class="number">1</span></div><div class="line">Thread2 in method2 and count = <span class="number">2</span></div><div class="line">Thread2 in method2 and count = <span class="number">3</span></div><div class="line">Thread1 in method1 and count = <span class="number">4</span></div><div class="line">Thread2 in method2 and count = <span class="number">5</span></div><div class="line">Thread2 in method2 and count = <span class="number">6</span></div><div class="line">Thread1 in method1 and count = <span class="number">7</span></div><div class="line">Thread2 in method2 and count = <span class="number">8</span></div><div class="line">Thread2 in method2 and count = <span class="number">9</span></div></pre></td></tr></table></figure></p>
<p>&#x5F9E;&#x57F7;&#x884C;&#x7D50;&#x679C;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x4E0A;&#x9396;&#x7684;&#x5C0D;&#x8C61;&#x662F;&#x5728;Run.java&#x4E2D;&#x5BE6;&#x9AD4;&#x5316;&#x7684;targetObject&#x3002;</p>
<hr>
<p>&#x82E5;&#x5C07;</p>
<ul>
<li>Thread1.java&#x4E2D;&#x7684;this.targetObject.method1()&#x6539;&#x6210;TargetObject.staticMethod1()&#x3002;</li>
<li>Thread2.java&#x4E2D;&#x7684;this.targetObject.method2()&#x6539;&#x6210;TargetObject.staticMethod2()&#x3002;</li>
</ul>
<p>&#x5FC5;&#x9808;&#x5C0D;TargetObject&#x7684;staticMethod1&#x548C;staticMethod2&#x505A;synchronized&#x3002;<br>&#x900F;&#x904E;&#x4E0A;&#x8FF0;&#x7684;&#x65B9;&#x5F0F;&#x53EF;&#x4EE5;&#x77E5;&#x9053;synchronized static method&#x662F;&#x9396;&#x5B9A;TargetObject.class&#x3002;</p>
<hr>
<ul>
<li>&#x4F7F;&#x7528;synchronized block</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">synchronized</span>(&#x60F3;&#x8981;&#x9396;&#x5B9A;&#x7684;&#x7269;&#x4EF6;&#x6216;&#x662F;<span class="class"><span class="keyword">class</span> <span class="title">literal</span>)</span>{</div><div class="line">  <span class="comment">//do something</span></div><div class="line">}</div></pre></td></tr></table></figure>
<p>synchronized block&#x8F03;&#x6709;&#x5F48;&#x6027;&#xFF0C;&#x53EF;&#x4EE5;&#x9078;&#x64C7;&#x9396;&#x5B9A;&#x7684;&#x5C0D;&#x8C61;&#x3002;<br>Thread1.java&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Thread1</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>{</div><div class="line">	<span class="keyword">private</span> TargetObject	targetObject;</div><div class="line">	<span class="keyword">private</span> <span class="keyword">byte</span>[]			lock;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Thread1</span><span class="params">(TargetObject targetObject, <span class="keyword">byte</span>[] lock)</span> </span>{</div><div class="line">		<span class="keyword">this</span>.targetObject = targetObject;</div><div class="line">		<span class="keyword">this</span>.lock = lock;</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line">		<span class="keyword">while</span> (<span class="keyword">true</span>) {</div><div class="line">			<span class="keyword">synchronized</span> (<span class="keyword">this</span>.lock) {</div><div class="line">				<span class="keyword">this</span>.targetObject.method1();</div><div class="line">				<span class="keyword">try</span> {</div><div class="line">					Thread.sleep(<span class="number">1000</span>);</div><div class="line">				}</div><div class="line">				<span class="keyword">catch</span> (InterruptedException e) {</div><div class="line">					e.printStackTrace();</div><div class="line">				}</div><div class="line">			}</div><div class="line">		}</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>Thread2.java&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Thread2</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>{</div><div class="line">	<span class="keyword">private</span> TargetObject	targetObject;</div><div class="line">	<span class="keyword">private</span> <span class="keyword">byte</span>[]			lock;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Thread2</span><span class="params">(TargetObject targetObject, <span class="keyword">byte</span>[] lock)</span> </span>{</div><div class="line">		<span class="keyword">this</span>.targetObject = targetObject;</div><div class="line">		<span class="keyword">this</span>.lock = lock;</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line">		<span class="keyword">while</span> (<span class="keyword">true</span>) {</div><div class="line">			<span class="keyword">synchronized</span> (<span class="keyword">this</span>.lock) {</div><div class="line">				<span class="keyword">this</span>.targetObject.method2();</div><div class="line">				<span class="keyword">try</span> {</div><div class="line">					Thread.sleep(<span class="number">1000</span>);</div><div class="line">				}</div><div class="line">				<span class="keyword">catch</span> (InterruptedException e) {</div><div class="line">					e.printStackTrace();</div><div class="line">				}</div><div class="line">			}</div><div class="line">		}</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>Run.java&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Run</span> </span>{</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</div><div class="line">		TargetObject targetObject = <span class="keyword">new</span> TargetObject();</div><div class="line">		<span class="keyword">final</span> <span class="keyword">byte</span>[] lock = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">0</span>];</div><div class="line">		Thread thread1 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Thread1(targetObject, lock), <span class="string">&quot;Thread1&quot;</span>);</div><div class="line">		Thread thread2 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Thread2(targetObject, lock), <span class="string">&quot;Thread2&quot;</span>);</div><div class="line">		thread1.start();</div><div class="line">		thread2.start();</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>&#x5728;&#x4F7F;&#x7528;synchronized&#x7684;&#x6642;&#x5019;&#xFF0C;&#x52D9;&#x5FC5;&#x8981;&#x641E;&#x6E05;&#x695A;&#x9396;&#x5B9A;&#x7684;&#x5C0D;&#x8C61;&#xFF0C;&#x6C92;&#x6709;&#x641E;&#x6E05;&#x695A;&#x53CD;&#x800C;&#x7B49;&#x540C;&#x65BC;&#x6C92;&#x6709;&#x540C;&#x6B65;&#x3002;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x5728;&amp;#x4E86;&amp;#x89E3;Java&amp;#x7684;synchronized&amp;#x6A5F;&amp;#x5236;&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x5148;&amp;#x4F86;&amp;#x8907;&amp;#x7FD2;&amp;#x4E00;&amp;#x4E0B;M
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>[SQL] 5 types of SQL JOIN</title>
    <link href="https://pandaforme.github.io/2016/12/09/SQL-5-types-of-SQL-JOIN/"/>
    <id>https://pandaforme.github.io/2016/12/09/SQL-5-types-of-SQL-JOIN/</id>
    <published>2016-12-09T09:30:08.000Z</published>
    <updated>2016-12-13T07:16:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>ANSI-standard SQL&#x6709;&#x4E94;&#x7A2E;JOIN&#xFF1A;</p>
<ol>
<li>INNER JOIN</li>
<li>LEFT OUTER JOIN</li>
<li>RIGHT OUTER JOIN</li>
<li>FULL OUTER JOIN</li>
<li>CROSS JOIN</li>
</ol>
<p><a href="http://blog.codinghorror.com/a-visual-explanation-of-sql-joins/" target="_blank" rel="external">A Visual Explanation of SQL Joins</a>&#x7528;<a href="http://en.wikipedia.org/wiki/Venn_diagram" target="_blank" rel="external">Venn diagrams</a>&#x65B9;&#x5F0F;&#x5716;&#x89E3;JOIN&#x3002;</p>
<h3 id="&#x7BC4;&#x4F8B;&#xFF1A;"><a href="#&#x7BC4;&#x4F8B;&#xFF1A;" class="headerlink" title="&#x7BC4;&#x4F8B;&#xFF1A;"></a>&#x7BC4;&#x4F8B;&#xFF1A;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">TableA        TableB</div><div class="line">id name       id  name</div><div class="line">-- ----       --  ----</div><div class="line">1  Pirate     1   Rutabaga</div><div class="line">2  Monkey     2   Pirate</div><div class="line">3  Ninja      3   Darth Vader</div><div class="line">4  Spaghetti  4   Ninja</div></pre></td></tr></table></figure>
<ul>
<li>INNER JOIN&#xFF1A;</li>
</ul>
<p>SQL&#xFF1A;<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TableA</div><div class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> TableB</div><div class="line"><span class="keyword">ON</span> TableA.name = TableB.name</div></pre></td></tr></table></figure></p>
<p>&#x7D50;&#x679C;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">TableA         TableB</div><div class="line">id  name       id   name</div><div class="line">--  ----       --   ----</div><div class="line">1   Pirate     2    Pirate</div><div class="line">3   Ninja      4    Ninja</div></pre></td></tr></table></figure></p>
<p>Venn diagram&#xFF1A;<br><img src="http://blog.codinghorror.com/content/images/uploads/2007/10/6a0120a85dcdae970b012877702708970c-pi.png" alt=""></p>
<p><em>&#x5217;&#x51FA;&#x5169;&#x500B;Table&#x5171;&#x6709;&#x7684;&#x8CC7;&#x6599;&#xFF0C;&#x5373;&#x5169;&#x500B;Table&#x7684;&#x4EA4;&#x96C6;&#x3002;</em></p>
<hr>
<ul>
<li>LEFT OUTER JOIN&#xFF1A;</li>
</ul>
<p>SQL&#xFF1A;<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TableA</div><div class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> TableB</div><div class="line"><span class="keyword">ON</span> TableA.name = TableB.name</div></pre></td></tr></table></figure></p>
<p>&#x7D50;&#x679C;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">TableA         TableB</div><div class="line">id  name       id    name</div><div class="line">--  ----       --    ----</div><div class="line">1   Pirate     2     Pirate</div><div class="line">2   Monkey     null  null</div><div class="line">3   Ninja      4     Ninja</div><div class="line">4   Spaghetti  null  null</div></pre></td></tr></table></figure></p>
<p>Venn diagram&#xFF1A;<br><img src="http://blog.codinghorror.com/content/images/uploads/2007/10/6a0120a85dcdae970b01287770273e970c-pi.png" alt=""><br><em>&#x4EE5;&#x5DE6;&#x908A;Table&#x70BA;&#x4E3B;&#xFF0C;&#x82E5;&#x6C92;&#x6709;&#x914D;&#x5C0D;&#x5230;&#x8CC7;&#x6599;&#xFF0C;&#x986F;&#x793A;null&#x3002;</em></p>
<hr>
<ul>
<li>RIGHT OUTER JOIN&#xFF1A;</li>
</ul>
<p>&#x8DDF;LEFT OUTER JOIN&#x5927;&#x540C;&#x5C0F;&#x7570;&#xFF0C;&#x7D50;&#x679C;&#x6539;&#x6210;&#x4EE5;Table B&#x70BA;&#x4E3B;&#xFF0C;&#x4E0D;&#x518D;&#x8D05;&#x8FF0;&#x3002;</p>
<hr>
<ul>
<li>FULL OUTER JOIN&#xFF1A;</li>
</ul>
<p>SQL&#xFF1A;<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TableA</div><div class="line"><span class="keyword">FULL</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> TableB</div><div class="line"><span class="keyword">ON</span> TableA.name = TableB.name</div></pre></td></tr></table></figure></p>
<p>&#x7D50;&#x679C;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">TableA           TableB</div><div class="line">id    name       id    name</div><div class="line">--    ----       --    ----</div><div class="line">1     Pirate     2     Pirate</div><div class="line">2     Monkey     null  null</div><div class="line">3     Ninja      4     Ninja</div><div class="line">4     Spaghetti  null  null</div><div class="line">null  null       1     Rutabaga</div><div class="line">null  null       3     Darth Vader</div></pre></td></tr></table></figure></p>
<p>Venn diagram&#xFF1A;<br><img src="http://blog.codinghorror.com/content/images/uploads/2007/10/6a0120a85dcdae970b012877702725970c-pi.png" alt=""><br><em>&#x70BA;&#x5169;&#x500B;Table&#x7684;&#x806F;&#x96C6;&#xFF0C;&#x82E5;&#x6C92;&#x6709;&#x914D;&#x5C0D;&#x5230;&#x8CC7;&#x6599;&#x4EE5;null&#x986F;&#x793A;&#x3002;</em></p>
<hr>
<ul>
<li>CROSS JOIN&#xFF1A;<br>&#x5373;&#x662F;<a href="http://en.wikipedia.org/wiki/Cartesian_product" target="_blank" rel="external">Cartesian product</a>&#xFF0C;&#x6703;&#x7522;&#x751F;&#x5169;&#x500B;Table&#x6240;&#x6709;&#x7684;&#x7D44;&#x5408;&#x3002;<br>SQL&#xFF1A;<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TableA</div><div class="line"><span class="keyword">CROSS</span> <span class="keyword">JOIN</span> TableB</div></pre></td></tr></table></figure>
</li>
</ul>
<p>&#x7D50;&#x679C;&#xFF1A;<br>4*4 = 16&#x7A2E;&#x7D44;&#x5408;</p>
<p><em>&#x56E0;&#x70BA;CROSS JOIN&#x6703;&#x5C07;&#x6240;&#x6709;&#x7D44;&#x5408;&#x5217;&#x51FA;&#x4F86;&#xFF0C;&#x6240;&#x4EE5;&#x7576;&#x8CC7;&#x6599;&#x91CF;&#x9F90;&#x5927;&#x6642;&#x5019;&#xFF0C;&#x6548;&#x80FD;&#x6703;&#x8B8A;&#x5F97;&#x5F88;&#x5DEE;&#x3002;</em></p>
<h3 id="&#x7E3D;&#x7D50;&#xFF1A;"><a href="#&#x7E3D;&#x7D50;&#xFF1A;" class="headerlink" title="&#x7E3D;&#x7D50;&#xFF1A;"></a>&#x7E3D;&#x7D50;&#xFF1A;</h3><p>&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x4EE5;&#x4E0A;&#x7684;&#x4E94;&#x7A2E;JOIN&#x548C;&#x904E;&#x6FFE;&#x65B9;&#x5F0F;&#xFF0C;&#x5C0D;&#x5169;&#x500B;&#x96C6;&#x5408;&#x9032;&#x884C;&#x4EA4;&#x96C6;&#x3001;&#x806F;&#x96C6;&#x3001;&#x5DEE;&#x96C6;&#x7B49;&#x64CD;&#x4F5C;&#x3002;<br><img src="http://edwarcardona.files.wordpress.com/2013/03/sql_server_joins.jpg" alt="SQL JOINS"></p>
<h3 id="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</h3><ul>
<li><a href="http://blog.codinghorror.com/a-visual-explanation-of-sql-joins/" target="_blank" rel="external">A Visual Explanation of SQL Joins</a></li>
<li><a href="https://en.wikipedia.org/wiki/Join_(SQL" target="_blank" rel="external">Join (SQL)</a>)</li>
<li><a href="http://coolshell.cn/articles/3463.html" target="_blank" rel="external">&#x5716;&#x89E3;SQL&#x7684;Join</a>&#x3000;</li>
<li><a href="http://www.codeproject.com/Articles/33052/Visual-Representation-of-SQL-Joins" target="_blank" rel="external">Visual Representation of SQL Joins</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ANSI-standard SQL&amp;#x6709;&amp;#x4E94;&amp;#x7A2E;JOIN&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;INNER JOIN&lt;/li&gt;
&lt;li&gt;LEFT OUTER JOIN&lt;/li&gt;
&lt;li&gt;RIGHT OUTER JOIN&lt;/li&gt;
&lt;li
    
    </summary>
    
      <category term="SQL" scheme="https://pandaforme.github.io/categories/SQL/"/>
    
    
      <category term="SQL" scheme="https://pandaforme.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>使用Tor隱藏身份</title>
    <link href="https://pandaforme.github.io/2016/12/09/%E4%BD%BF%E7%94%A8Tor%E9%9A%B1%E8%97%8F%E8%BA%AB%E4%BB%BD/"/>
    <id>https://pandaforme.github.io/2016/12/09/使用Tor隱藏身份/</id>
    <published>2016-12-09T09:29:05.000Z</published>
    <updated>2016-12-09T09:29:46.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="&#x9700;&#x6C42;&#xFF1A;"><a href="#&#x9700;&#x6C42;&#xFF1A;" class="headerlink" title="&#x9700;&#x6C42;&#xFF1A;"></a>&#x9700;&#x6C42;&#xFF1A;</h3><p>&#x4F7F;&#x7528;&#x7DB2;&#x8DEF;&#x722C;&#x87F2;&#x9032;&#x884C;&#x722C;&#x53D6;&#x8CC7;&#x6599;&#x6642;&#xFF0C;&#x76EE;&#x6A19;&#x7DB2;&#x7AD9;&#x6709;&#x53EF;&#x80FD;&#x56E0;&#x70BA;&#x5B58;&#x53D6;&#x904E;&#x65BC;&#x983B;&#x7E41;&#xFF0C;&#x800C;&#x963B;&#x64CB;&#x7DB2;&#x8DEF;&#x722C;&#x87F2;&#x6293;&#x53D6;&#x8CC7;&#x6599;&#x3002;&#x5728;stackoverflow&#x6709;&#x4EBA;&#x63D0;&#x51FA;&#x76F8;&#x95DC;&#x7684;&#x554F;&#x984C;<a href="http://stackoverflow.com/questions/7644036/prevent-custom-web-crawler-from-being-blocked" target="_blank" rel="external">Prevent Custom Web Crawler from being blocked</a>&#xFF0C;&#x5047;&#x5982;&#x4E0D;&#x8003;&#x616E;&#x7522;&#x80FD;&#x548C;&#x901F;&#x5EA6;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;<a href="https://www.torproject.org/index.html.en" target="_blank" rel="external">Tor</a> &#x548C; <a href="http://www.privoxy.org/" target="_blank" rel="external">Privoxy</a>&#x3002;</p>
<h3 id="Tor&#x7684;&#x8A2A;&#x554F;&#x6D41;&#x7A0B;&#xFF1A;"><a href="#Tor&#x7684;&#x8A2A;&#x554F;&#x6D41;&#x7A0B;&#xFF1A;" class="headerlink" title="Tor&#x7684;&#x8A2A;&#x554F;&#x6D41;&#x7A0B;&#xFF1A;"></a>Tor&#x7684;&#x8A2A;&#x554F;&#x6D41;&#x7A0B;&#xFF1A;</h3><ol>
<li>&#x5148;&#x8DDF;&#x76EE;&#x9304;&#x4F3A;&#x670D;&#x5668;&#x53D6;&#x5F97;&#x6240;&#x6709;&#x7684;Tor&#x7BC0;&#x9EDE;&#xFF1A;<img src="https://www.torproject.org/images/htw1.png" alt=""></li>
<li>&#x96A8;&#x6A5F;&#x7522;&#x751F;&#x4E00;&#x689D;&#x8DEF;&#x5F91;&#xFF1A;<img src="https://www.torproject.org/images/htw2.png" alt=""></li>
<li>&#x4E4B;&#x5F8C;&#xFF0C;&#x82E5;&#x8981;&#x8A2A;&#x554F;&#x5176;&#x4ED6;&#x76EE;&#x7684;&#x9EDE;&#xFF0C;&#x518D;&#x96A8;&#x6A5F;&#x7522;&#x751F;&#x4E00;&#x689D;&#x8DEF;&#x5F91;&#xFF1A;<img src="https://www.torproject.org/images/htw3.png" alt=""></li>
</ol>
<p><strong><a href="http://en.wikipedia.org/wiki/Onion_routing" target="_blank" rel="external">&#x66F4;&#x8A73;&#x7D30;&#x7684;&#x8AAA;&#x660E;</a></strong></p>
<h3 id="&#x5B89;&#x88DD;Tor&#x548C;Privoxy&#xFF1A;"><a href="#&#x5B89;&#x88DD;Tor&#x548C;Privoxy&#xFF1A;" class="headerlink" title="&#x5B89;&#x88DD;Tor&#x548C;Privoxy&#xFF1A;"></a>&#x5B89;&#x88DD;Tor&#x548C;Privoxy&#xFF1A;</h3><p><a href="http://www.cyberciti.biz/faq/debian-ubuntu-linux-install-onionrouter-software/" target="_blank" rel="external">Linux Install tor and privoxy To Communicate Anonymously On the Internet</a></p>
<h3 id="&#x78BA;&#x8A8D;Tor&#x662F;&#x5426;&#x6B63;&#x78BA;&#x5B89;&#x88DD;&#x6210;&#x529F;&#xFF1A;"><a href="#&#x78BA;&#x8A8D;Tor&#x662F;&#x5426;&#x6B63;&#x78BA;&#x5B89;&#x88DD;&#x6210;&#x529F;&#xFF1A;" class="headerlink" title="&#x78BA;&#x8A8D;Tor&#x662F;&#x5426;&#x6B63;&#x78BA;&#x5B89;&#x88DD;&#x6210;&#x529F;&#xFF1A;"></a>&#x78BA;&#x8A8D;Tor&#x662F;&#x5426;&#x6B63;&#x78BA;&#x5B89;&#x88DD;&#x6210;&#x529F;&#xFF1A;</h3><p><a href="https://check.torproject.org/" target="_blank" rel="external">Check Tor</a></p>
<h3 id="&#x5982;&#x4F55;&#x4F7F;&#x7528;&#x7A0B;&#x5F0F;&#x63A7;&#x5236;Tor&#xFF1A;"><a href="#&#x5982;&#x4F55;&#x4F7F;&#x7528;&#x7A0B;&#x5F0F;&#x63A7;&#x5236;Tor&#xFF1A;" class="headerlink" title="&#x5982;&#x4F55;&#x4F7F;&#x7528;&#x7A0B;&#x5F0F;&#x63A7;&#x5236;Tor&#xFF1A;"></a>&#x5982;&#x4F55;&#x4F7F;&#x7528;&#x7A0B;&#x5F0F;&#x63A7;&#x5236;Tor&#xFF1A;</h3><ul>
<li><p>&#x5728;torrc&#x65B0;&#x589E;&#xFF1A;</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ControlPort 9051</div><div class="line">CookieAuthentication 1</div><div class="line"><span class="comment"># 1.&#x57F7;&#x884C;tor --hash-password &quot;my_password&quot;</span></div><div class="line"><span class="comment"># 2.&#x53D6;&#x5F97;&#x5C0D;&#x61C9;&#x7684;hash code &#x4F8B;&#x5982;&#xFF1A;16:E600ADC1B52C80BB6022A0E999A7734571A451EB6AE50FED489B72E3DF</span></div><div class="line"></div><div class="line">HashedControlPassword 16:E600ADC1B52C80BB6022A0E999A7734571A451EB6AE50FED489B72E3DF</div></pre></td></tr></table></figure>
</li>
<li><p>&#x4F7F;&#x7528;Python <a href="https://stem.torproject.org/index.html" target="_blank" rel="external">Stem</a>&#x5957;&#x4EF6;&#x4F86;&#x63A7;&#x5236;Tor&#xFF1A;</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> stem <span class="keyword">import</span> CircStatus</div><div class="line"><span class="keyword">from</span> stem.control <span class="keyword">import</span> Controller</div><div class="line"></div><div class="line"><span class="keyword">with</span> Controller.from_port() <span class="keyword">as</span> controller:</div><div class="line">  controller.authenticate(<span class="string">&apos;my_password&apos;</span>)</div><div class="line"></div><div class="line">  <span class="keyword">for</span> circ <span class="keyword">in</span> controller.get_circuits():</div><div class="line">    <span class="keyword">if</span> circ.status != CircStatus.BUILT:</div><div class="line">      <span class="keyword">continue</span>  <span class="comment"># skip circuits that aren&apos;t yet usable</span></div><div class="line"></div><div class="line">    entry_fingerprint = circ.path[<span class="number">0</span>][<span class="number">0</span>]</div><div class="line">    entry_descriptor = controller.get_network_status(entry_fingerprint, <span class="keyword">None</span>)</div><div class="line"></div><div class="line">    <span class="keyword">if</span> entry_descriptor:</div><div class="line">      <span class="keyword">print</span> <span class="string">&quot;Circuit %s starts with %s&quot;</span> % (circ.id, entry_descriptor.address)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">      <span class="keyword">print</span> <span class="string">&quot;Unable to determine the address belonging to circuit %s&quot;</span> % circ.id</div></pre></td></tr></table></figure>
</li>
<li><p>&#x900F;&#x904E;PHP&#x53D6;&#x5F97;&#x65B0;&#x7684;Tor identity&#xFF1A;<a href="http://w-shadow.com/blog/2008/06/20/tor-how-to-new-identity-with-php/" target="_blank" rel="external">TOR : How To Switch To a New Identity Using PHP</a></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Switch TOR to a new identity.</div><div class="line"> **/</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">tor_new_identity</span><span class="params">($tor_ip=<span class="string">&apos;127.0.0.1&apos;</span>, $control_port=<span class="string">&apos;9051&apos;</span>, $auth_code=<span class="string">&apos;&apos;</span>)</span></span>{</div><div class="line">    $fp = fsockopen($tor_ip, $control_port, $errno, $errstr, <span class="number">30</span>);</div><div class="line">    <span class="keyword">if</span> (!$fp) <span class="keyword">return</span> <span class="keyword">false</span>; <span class="comment">//can&apos;t connect to the control port</span></div><div class="line"></div><div class="line">    fputs($fp, <span class="string">&quot;AUTHENTICATE $auth_code\r\n&quot;</span>);</div><div class="line">    $response = fread($fp, <span class="number">1024</span>);</div><div class="line">    <span class="keyword">list</span>($code, $text) = explode(<span class="string">&apos; &apos;</span>, $response, <span class="number">2</span>);</div><div class="line">    <span class="keyword">if</span> ($code != <span class="string">&apos;250&apos;</span>) <span class="keyword">return</span> <span class="keyword">false</span>; <span class="comment">//authentication failed</span></div><div class="line"></div><div class="line">    <span class="comment">//send the request to for new identity</span></div><div class="line">    fputs($fp, <span class="string">&quot;signal NEWNYM\r\n&quot;</span>);</div><div class="line">    $response = fread($fp, <span class="number">1024</span>);</div><div class="line">    <span class="keyword">list</span>($code, $text) = explode(<span class="string">&apos; &apos;</span>, $response, <span class="number">2</span>);</div><div class="line">    <span class="keyword">if</span> ($code != <span class="string">&apos;250&apos;</span>) <span class="keyword">return</span> <span class="keyword">false</span>; <span class="comment">//signal failed</span></div><div class="line"></div><div class="line">    fclose($fp);</div><div class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">}</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Load the TOR&apos;s &quot;magic cookie&quot; from a file and encode it in hexadecimal.</div><div class="line"> **/</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">tor_get_cookie</span><span class="params">($filename)</span></span>{</div><div class="line">    $cookie = file_get_contents($filename);</div><div class="line">    <span class="comment">//convert the cookie to hexadecimal</span></div><div class="line">    $hex = <span class="string">&apos;&apos;</span>;</div><div class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>;$i&lt;strlen($cookie);$i++){</div><div class="line">        $h = dechex(ord($cookie[$i]));</div><div class="line">        $hex .= str_pad($h, <span class="number">2</span>, <span class="string">&apos;0&apos;</span>, STR_PAD_LEFT);</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> strtoupper($hex);</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">if</span> (tor_new_identity(<span class="string">&apos;127.0.0.01&apos;</span>, <span class="string">&apos;9051&apos;</span>, <span class="string">&apos;&quot;my_password&quot;&apos;</span>)) {</div><div class="line">    <span class="keyword">echo</span> <span class="string">&quot;Identity switched!&quot;</span>;</div><div class="line">}</div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;&amp;#x9700;&amp;#x6C42;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#&amp;#x9700;&amp;#x6C42;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x9700;&amp;#x6C42;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;&amp;#x9700;&amp;#x6C4
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Producer and Consumer Problem</title>
    <link href="https://pandaforme.github.io/2016/12/09/Producer-and-Consumer-Problem/"/>
    <id>https://pandaforme.github.io/2016/12/09/Producer-and-Consumer-Problem/</id>
    <published>2016-12-09T09:28:00.000Z</published>
    <updated>2016-12-13T07:17:26.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="&#x554F;&#x984C;&#xFF1A;"><a href="#&#x554F;&#x984C;&#xFF1A;" class="headerlink" title="&#x554F;&#x984C;&#xFF1A;"></a>&#x554F;&#x984C;&#xFF1A;</h4><p>&#x6709;&#x5169;&#x500B;process&#x5206;&#x5225;&#x70BA;producer&#x548C;consumer&#xFF0C;&#x4ED6;&#x5011;&#x6703;&#x5171;&#x4EAB;&#x4E00;&#x500B;&#x6709;&#x9650;&#x7684;queue&#x3002;</p>
<p>producer&#x6703;&#x57F7;&#x7E8C;&#x65B0;&#x589E;&#x8CC7;&#x6599;&#x5230;queue&#xFF0C;consumer&#x4E5F;&#x6703;&#x6301;&#x7E8C;&#x5F9E;queue&#x53D6;&#x51FA;&#x8CC7;&#x6599;&#x3002;</p>
<p>&#x8981;&#x5982;&#x4F55;&#x78BA;&#x4FDD;&#x7576;queue&#x6EFF;&#x4E86;&#xFF0C;producer&#x4E0D;&#x6703;&#x518D;&#x65B0;&#x589E;&#x8CC7;&#x6599;&#x5230;queue&#x3002;</p>
<p>&#x8981;&#x5982;&#x4F55;&#x78BA;&#x4FDD;&#x7576;queue&#x7A7A;&#x4E86;&#xFF0C;consumer&#x4E0D;&#x6703;&#x518D;&#x5F9E;queue&#x53D6;&#x51FA;&#x8CC7;&#x6599;&#x3002;</p>
<h4 id="&#x89E3;&#x6C7A;&#x65B9;&#x6CD5;&#xFF1A;"><a href="#&#x89E3;&#x6C7A;&#x65B9;&#x6CD5;&#xFF1A;" class="headerlink" title="&#x89E3;&#x6C7A;&#x65B9;&#x6CD5;&#xFF1A;"></a>&#x89E3;&#x6C7A;&#x65B9;&#x6CD5;&#xFF1A;</h4><p>&#x7576;queue&#x6EFF;&#x4E86;&#xFF0C;&#x5247;producer sleep&#x3002;&#x4E00;&#x76F4;&#x5230;consumer&#x53D6;&#x51FA;&#x8CC7;&#x6599;&#x4E26;&#x4E14;wake up producer&#xFF0C;producer&#x624D;&#x958B;&#x59CB;&#x7E7C;&#x7E8C;&#x65B0;&#x589E;&#x8CC7;&#x6599;&#x3002;</p>
<p>&#x7576;queue&#x7A7A;&#x4E86;&#xFF0C;&#x5247;consumer sleep&#x3002;&#x4E00;&#x76F4;&#x5230;producer&#x65B0;&#x589E;&#x8CC7;&#x6599;&#x4E26;&#x4E14;wake up consumer&#xFF0C;consumer&#x624D;&#x958B;&#x59CB;&#x7E7C;&#x7E8C;&#x53D6;&#x51FA;&#x8CC7;&#x6599;&#x3002;</p>
<h4 id="&#x540C;&#x6B65;&#x554F;&#x984C;&#xFF1A;"><a href="#&#x540C;&#x6B65;&#x554F;&#x984C;&#xFF1A;" class="headerlink" title="&#x540C;&#x6B65;&#x554F;&#x984C;&#xFF1A;"></a>&#x540C;&#x6B65;&#x554F;&#x984C;&#xFF1A;</h4><p>&#x56E0;&#x70BA;producer&#x548C;consumer&#x6709;&#x53EF;&#x80FD;&#x540C;&#x6642;&#x5C0D;queue&#x505A;&#x5B58;&#x53D6;&#xFF0C;producer&#x5728;&#x4FEE;&#x6539;queue size&#x6642;&#x5019;&#x6709;&#x53EF;&#x80FD;&#x88AB;&#x8FEB;&#x4E2D;&#x65B7;&#xFF0C;consumer&#x63A5;&#x8457;&#x4E5F;&#x5C0D;queue size&#x4FEE;&#x6539;&#xFF0C;&#x6700;&#x5F8C;&#x624D;&#x8F2A;&#x5230;producer&#x5B8C;&#x6210;&#x5979;&#x5C1A;&#x672A;&#x5B8C;&#x6210;&#x7684;&#x5DE5;&#x4F5C;&#xFF0C;&#x6B64;&#x6642;queue size&#x4E0D;&#x6B63;&#x78BA;&#x3002;&#x4EE5;&#x4E0A;&#x662F;&#x60C5;&#x6CC1;&#x4E4B;&#x4E00;&#xFF0C;&#x4E5F;&#x6709;&#x53EF;&#x80FD;&#x50CF;<a href="http://en.wikipedia.org/wiki/Producer%E2%80%93consumer_problem" target="_blank" rel="external">Producer&#x2013;consumer problem</a>&#x6240;&#x63D0;&#x5230;&#x6703;&#x7522;&#x751F;deadlock&#x3002;</p>
<h4 id="&#x89E3;&#x6C7A;&#x65B9;&#x5F0F;&#xFF1A;"><a href="#&#x89E3;&#x6C7A;&#x65B9;&#x5F0F;&#xFF1A;" class="headerlink" title="&#x89E3;&#x6C7A;&#x65B9;&#x5F0F;&#xFF1A;"></a>&#x89E3;&#x6C7A;&#x65B9;&#x5F0F;&#xFF1A;</h4><p>&#x56E0;&#x70BA;&#x9019;&#x662F;&#x4E00;&#x500B;&#x540C;&#x6B65;&#x554F;&#x984C;&#xFF0C;&#x6240;&#x4EE5;&#x5FC5;&#x9808;&#x5C0D;queue&#x7684;&#x65B0;&#x589E;&#x548C;&#x53D6;&#x51FA;&#x52D5;&#x4F5C;&#x9032;&#x884C;&#x4E00;&#x500B;&#x4E0A;&#x9396;&#x7684;&#x52D5;&#x4F5C;&#x3002;&#x53EF;&#x4EE5;&#x63A1;&#x7528;<a href="http://en.wikipedia.org/wiki/Semaphore_(programming" target="_blank" rel="external">Semaphore</a>)&#x6216;<a href="http://en.wikipedia.org/wiki/Monitor_(synchronization" target="_blank" rel="external">Monitor</a>)&#x7B49;&#x76F8;&#x95DC;&#x7684;&#x6A5F;&#x5236;&#x3002;&#x7531;&#x65BC;&#x56E0;&#x70BA;&#x4E0A;&#x9396;&#x7684;&#x95DC;&#x4FC2;&#xFF0C;&#x6548;&#x80FD;&#x6703;&#x4E0B;&#x964D;&#x3002;</p>
<p>&#x82E5;&#x8003;&#x616E;&#x6548;&#x80FD;&#x53EF;&#x4EE5;&#x63A1;&#x7528;<a href="http://en.wikipedia.org/wiki/Compare-and-swap" target="_blank" rel="external">Compare-and-swap</a>(&#x7C21;&#x7A31;CAS)&#x6280;&#x8853;&#x3002;</p>
<h4 id="Java&#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x5F0F;&#xFF1A;"><a href="#Java&#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x5F0F;&#xFF1A;" class="headerlink" title="Java&#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x5F0F;&#xFF1A;"></a>Java&#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x5F0F;&#xFF1A;</h4><ul>
<li>&#x63A1;&#x7528;&#x4E0A;&#x9396;&#x65B9;&#x5F0F;&#xFF1A;<a href="http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/LinkedBlockingQueue.html" target="_blank" rel="external">LinkedBlockingQueue</a></li>
<li>&#x63A1;&#x7528;CAS&#x65B9;&#x5F0F;&#xFF1A;<a href="http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ConcurrentLinkedQueue.html" target="_blank" rel="external">ConcurrentLinkedQueue</a></li>
</ul>
<h4 id="&#x76F8;&#x95DC;&#x8A0E;&#x8AD6;&#xFF1A;"><a href="#&#x76F8;&#x95DC;&#x8A0E;&#x8AD6;&#xFF1A;" class="headerlink" title="&#x76F8;&#x95DC;&#x8A0E;&#x8AD6;&#xFF1A;"></a>&#x76F8;&#x95DC;&#x8A0E;&#x8AD6;&#xFF1A;</h4><p><a href="http://en.wikipedia.org/wiki/Producer%E2%80%93consumer_problem" target="_blank" rel="external">Producer&#x2013;consumer problem</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;&amp;#x554F;&amp;#x984C;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#&amp;#x554F;&amp;#x984C;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x554F;&amp;#x984C;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;&amp;#x554F;&amp;#x984
    
    </summary>
    
      <category term="Algorithm" scheme="https://pandaforme.github.io/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="https://pandaforme.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>The Law of Demeter</title>
    <link href="https://pandaforme.github.io/2016/12/09/The-Law-of-Demeter/"/>
    <id>https://pandaforme.github.io/2016/12/09/The-Law-of-Demeter/</id>
    <published>2016-12-09T09:27:16.000Z</published>
    <updated>2016-12-09T09:27:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x66F4;&#x8A73;&#x7D30;&#x7684;&#x8AAA;&#x6CD5;&#x662F;&#x201C;Law of Demeter for Functions/Methods&#x201D; (LoD-F)&#xFF0C;&#x7C21;&#x55AE;&#x5316;Object&#x4E4B;&#x9593;&#x7684;&#x4E92;&#x52D5;&#xFF0C;&#x8B93;&#x591A;&#x500B;Object&#x4E0D;&#x8981;&#x4E92;&#x76F8;&#x76F8;&#x4F9D;&#x3002;</p>
<h2 id="&#x5B9A;&#x7FA9;&#xFF1A;"><a href="#&#x5B9A;&#x7FA9;&#xFF1A;" class="headerlink" title="&#x5B9A;&#x7FA9;&#xFF1A;"></a>&#x5B9A;&#x7FA9;&#xFF1A;</h2><p>The Law of Demeter for functions requires that a method M of an object O may only invoke the methods of the following kinds of objects:</p>
<ol>
<li>O itself</li>
<li>M&#x2019;s parameters</li>
<li>Any objects created/instantiated within M</li>
<li>O&#x2019;s direct component objects</li>
<li>A global variable, accessible by O, in the scope of M</li>
</ol>
<h2 id="&#x7BC4;&#x4F8B;&#xFF1A;"><a href="#&#x7BC4;&#x4F8B;&#xFF1A;" class="headerlink" title="&#x7BC4;&#x4F8B;&#xFF1A;"></a>&#x7BC4;&#x4F8B;&#xFF1A;</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * A Law of Demeter example in Java.</div><div class="line"> * Created by Alvin Alexander, &lt;a href=&quot;http://devdaily.com&quot; title=&quot;http://devdaily.com&quot;&gt;http://devdaily.com&lt;/a&gt;.</div><div class="line"> * This is an adaptation of the source code example from the book</div><div class="line"> * The Pragmatic Programmer.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LawOfDemeterInJava</span></span></div><div class="line">{</div><div class="line">  <span class="keyword">private</span> Topping cheeseTopping;</div><div class="line">   </div><div class="line">  <span class="comment">/**</span></div><div class="line">   * Good examples of following the Law of Demeter.</div><div class="line">   */</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">goodExamples</span><span class="params">(Pizza pizza)</span></span></div><div class="line">  {</div><div class="line">    Foo foo = <span class="keyword">new</span> Foo();</div><div class="line">     </div><div class="line">    <span class="comment">// (1) it&apos;s okay to call our own methods</span></div><div class="line">    doSomething();</div><div class="line">     </div><div class="line">    <span class="comment">// (2) it&apos;s okay to call methods on objects passed in to our method</span></div><div class="line">    <span class="keyword">int</span> price = pizza.getPrice();</div><div class="line">     </div><div class="line">    <span class="comment">// (3) it&apos;s okay to call methods on any objects we create</span></div><div class="line">    cheeseTopping = <span class="keyword">new</span> CheeseTopping();</div><div class="line">    <span class="keyword">float</span> weight = cheeseTopping.getWeightUsed();</div><div class="line">     </div><div class="line">    <span class="comment">// (4) any directly held component objects</span></div><div class="line">    foo.doBar();</div><div class="line">  }</div><div class="line">   </div><div class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doSomething</span><span class="params">()</span></span></div><div class="line">  {</div><div class="line">    <span class="comment">// do something here ...</span></div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>
<h2 id="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</h2><ul>
<li><a href="http://en.wikipedia.org/wiki/Law_of_Demeter" target="_blank" rel="external">Law_of_Demeter</a></li>
<li><a href="http://alvinalexander.com/java/java-law-of-demeter-java-examples" target="_blank" rel="external">Law of Demeter - Java examples</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x66F4;&amp;#x8A73;&amp;#x7D30;&amp;#x7684;&amp;#x8AAA;&amp;#x6CD5;&amp;#x662F;&amp;#x201C;Law of Demeter for Functions/Methods&amp;#x201D; (LoD-F)&amp;#xFF0C;&amp;#x7C21;&amp;#x55
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[Java] Object equality in Java</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-Object-equality-in-Java/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-Object-equality-in-Java/</id>
    <published>2016-12-09T09:26:05.000Z</published>
    <updated>2016-12-13T07:25:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5728;Java&#x4E2D;&#xFF0C;&#x8981;&#x6BD4;&#x8F03;&#x5169;&#x500B;&#x57FA;&#x672C;&#x578B;&#x614B;&#x7684;&#x8B8A;&#x6578;&#xFF0C;&#x8981;&#x4F7F;&#x7528;<code>==</code>&#x3002;<br>&#x8981;&#x6BD4;&#x8F03;&#x5169;&#x500B;&#x7269;&#x4EF6;&#x578B;&#x614B;&#x7684;&#x8B8A;&#x6578;&#xFF0C;&#x8981;&#x4F7F;&#x7528;<code>equals</code>&#x3002;</p>
<p>&#x56E0;&#x70BA;&#x6240;&#x6709;&#x7684;&#x7269;&#x4EF6;&#x90FD;&#x662F;&#x7E7C;&#x627F;Object&#xFF0C;&#x52A0;&#x4E0A;Object&#x7684;equals()&#x662F;&#x4F7F;&#x7528;<code>==</code>&#x5224;&#x5B9A;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;Override Object&#x7684;<code>equals()</code>&#x51FD;&#x5F0F;&#x3002;</p>
<p>Object&#x7684;<code>equals()</code>&#x51FD;&#x5F0F;&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object paramObject)</span> </span>{</div><div class="line">	<span class="keyword">return</span> (<span class="keyword">this</span> == paramObject);</div><div class="line">}</div></pre></td></tr></table></figure></p>
<h4 id="&#x7BC4;&#x4F8B;&#xFF1A;"><a href="#&#x7BC4;&#x4F8B;&#xFF1A;" class="headerlink" title="&#x7BC4;&#x4F8B;&#xFF1A;"></a>&#x7BC4;&#x4F8B;&#xFF1A;</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Point</span> </span>{</div><div class="line">	<span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span>	x;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span>	y;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Point</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>{</div><div class="line">		<span class="keyword">this</span>.x = x;</div><div class="line">		<span class="keyword">this</span>.y = y;</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object that)</span> </span>{</div><div class="line">		<span class="keyword">if</span> (that <span class="keyword">instanceof</span> Point) {</div><div class="line">			Point point = (Point) that;</div><div class="line">			<span class="keyword">return</span> <span class="keyword">this</span>.x == point.x &amp;&amp; <span class="keyword">this</span>.y == point.y;</div><div class="line">		}</div><div class="line"></div><div class="line">		<span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">	}</div><div class="line">    </div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>{</div><div class="line">		<span class="keyword">return</span> Objects.hash(x,y);</div><div class="line">	}    </div><div class="line">}</div></pre></td></tr></table></figure>
<ul>
<li>&#x6CE8;&#x610F;&#xFF1A;&#x7576;Override equals&#x6642;&#xFF0C;hashCode&#x6700;&#x597D;&#x4E5F;&#x8981;Override&#x3002;</li>
</ul>
<p>&#x4F8B;&#x5982;&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PointTest</span> </span>{</div><div class="line">	<span class="keyword">private</span> Object	point1;</div><div class="line">	<span class="keyword">private</span> Point	point2;</div><div class="line"></div><div class="line">	<span class="meta">@Before</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUp</span><span class="params">()</span> </span>{</div><div class="line">		point1 = <span class="keyword">new</span> Point(<span class="number">1</span>, <span class="number">1</span>);</div><div class="line">		point2 = <span class="keyword">new</span> Point(<span class="number">1</span>, <span class="number">1</span>);</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="meta">@Test</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCase</span><span class="params">()</span> </span>{</div><div class="line">		Set&lt;Object&gt; set = <span class="keyword">new</span> HashSet&lt;Object&gt;();</div><div class="line">		set.add(point1);</div><div class="line">		assertTrue(set.contains(point2));</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure></p>
<ol>
<li>&#x8A08;&#x7B97;point2&#x7684;hashCode</li>
<li>&#x8A08;&#x7B97;point1&#x7684;hashCode</li>
<li>&#x82E5;hashCode&#x4E00;&#x6A23;&#x4EE3;&#x8868;&#x843D;&#x5728;&#x540C;&#x4E00;&#x500B;bucket</li>
<li>&#x518D;&#x900F;&#x904E;equals&#x5224;&#x5225;&#x662F;&#x5426;&#x76F8;&#x7B49;</li>
</ol>
<p>hashCode&#x53EF;&#x4EE5;&#x900F;&#x904E;Objects.hash()&#x5354;&#x52A9;&#x8A08;&#x7B97;&#xFF0C;&#x6216;&#x662F;&#x81EA;&#x884C;&#x8A2D;&#x8A08;&#x516C;&#x5F0F;&#x3002;<br>&#x4F8B;&#x5982;&#xFF1A;<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#hashCode(" target="_blank" rel="external">String&#x7684;hashCode</a>)&#x3002;</p>
<p>&#x6709;&#x883B;&#x591A;&#x985E;&#x4F3C;&#x7684;&#x6587;&#x7AE0;&#x63D0;&#x5230;&#x70BA;&#x4EC0;&#x9EBC;&#x8981;&#x7528;31&#x7576;&#x4E58;&#x6578;&#x5462;?&#x4F8B;&#x5982;&#xFF1A;<a href="http://stackoverflow.com/questions/299304/why-does-javas-hashcode-in-string-use-31-as-a-multiplier" target="_blank" rel="external">Why does Java&#x2019;s hashCode() in String use 31 as a multiplier?</a></p>
<p>&#x67E5;&#x4E86;&#x76F8;&#x95DC;&#x7684;&#x8A0E;&#x8AD6;&#x5E7E;&#x4E4E;&#x90FD;&#x662F;31&#x5F0F;&#x8CEA;&#x6578;&#x4E26;&#x4E14;jvm&#x53EF;&#x4EE5;&#x5C0D;&#x5176;&#x505A;&#x6700;&#x4F73;&#x5316;&#xFF0C;&#x500B;&#x4EBA;&#x63A8;&#x6E2C;&#x4E3B;&#x8981;&#x539F;&#x56E0;31&#x53EF;&#x4EE5;&#x5927;&#x5E45;&#x964D;&#x4F4E;collision&#x7684;&#x6A5F;&#x6703;&#xFF0C;&#x6216;&#x8A31;&#x6F14;&#x7B97;&#x6CD5;&#x6216;&#x662F;&#x6709;&#x76F8;&#x95DC;&#x7684;&#x8AD6;&#x6587;&#x6703;&#x6709;&#x66F4;&#x8A73;&#x7D30;&#x7684;&#x8AAA;&#x660E;&#x3002;</p>
<h4 id="&#x76F8;&#x95DC;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x76F8;&#x95DC;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x76F8;&#x95DC;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x76F8;&#x95DC;&#x8CC7;&#x6599;&#xFF1A;</h4><p><a href="http://www.codedata.com.tw/java/object-equality-1/" target="_blank" rel="external">&#x7269;&#x4EF6;&#x76F8;&#x7B49;&#x6027;&#xFF08;&#x4E0A;&#xFF09;</a></p>
<h4 id="&#x7BC4;&#x4F8B;&#x7684;&#x539F;&#x59CB;&#x78BC;&#xFF1A;https-github-com-pandaforme-ObjectEqual"><a href="#&#x7BC4;&#x4F8B;&#x7684;&#x539F;&#x59CB;&#x78BC;&#xFF1A;https-github-com-pandaforme-ObjectEqual" class="headerlink" title="&#x7BC4;&#x4F8B;&#x7684;&#x539F;&#x59CB;&#x78BC;&#xFF1A;https://github.com/pandaforme/ObjectEqual"></a>&#x7BC4;&#x4F8B;&#x7684;&#x539F;&#x59CB;&#x78BC;&#xFF1A;<a href="https://github.com/pandaforme/ObjectEqual" target="_blank" rel="external">https://github.com/pandaforme/ObjectEqual</a></h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x5728;Java&amp;#x4E2D;&amp;#xFF0C;&amp;#x8981;&amp;#x6BD4;&amp;#x8F03;&amp;#x5169;&amp;#x500B;&amp;#x57FA;&amp;#x672C;&amp;#x578B;&amp;#x614B;&amp;#x7684;&amp;#x8B8A;&amp;#x6578;&amp;#xFF0C;&amp;#x89
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>[Java] Multiple parameters in a constructor</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-Multiple-parameters-in-a-constructor/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-Multiple-parameters-in-a-constructor/</id>
    <published>2016-12-09T09:25:31.000Z</published>
    <updated>2016-12-13T07:25:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5728;&#x958B;&#x767C;&#x7684;&#x904E;&#x7A0B;&#x4E2D;&#x5F88;&#x5E38;&#x6703;&#x78B0;&#x5230;&#x9700;&#x8981;&#x50B3;&#x5165;&#x5927;&#x91CF;&#x7684;&#x53C3;&#x6578;&#x5230;&#x5EFA;&#x69CB;&#x5B50;&#x7684;&#x60C5;&#x6CC1;&#xFF0C;&#x9019;&#x6A23;&#x505A;&#x6CD5;&#x6703;&#x8B93;&#x5176;&#x4ED6;&#x4EBA;&#x4E0D;&#x6613;&#x7406;&#x89E3;&#xFF0C;&#x9020;&#x6210;&#x7DAD;&#x8B77;&#x548C;&#x6E2C;&#x8A66;&#x4E0A;&#x7684;&#x56F0;&#x96E3;&#x3002;&#x5728;<a href="http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882" target="_blank" rel="external">Clean Code: A Handbook of Agile Software Craftsmanship</a>&#x6709;&#x63D0;&#x5230;&#xFF1A;&#x51FD;&#x5F0F;&#x7684;&#x53C3;&#x6578;&#x6700;&#x597D;&#x4E0D;&#x8981;&#x8D85;&#x904E;&#x4E09;&#x500B;&#x3002;</p>
<p>&#x90A3;&#x9019;&#x6A23;&#x7684;&#x60C5;&#x6CC1;&#x61C9;&#x8A72;&#x8981;&#x600E;&#x9EBC;&#x505A;&#x6703;&#x6BD4;&#x8F03;&#x597D;&#x5462;&#xFF1F;&#x53EF;&#x4EE5;&#x5229;&#x7528;<a href="http://www.amazon.com/Effective-Java-Edition-Joshua-Bloch/dp/0321356683" target="_blank" rel="external">Effective Java (2nd Edition)</a>&#x4E2D;&#x6240;&#x63D0;&#x5230;&#x7684;Builder pattern&#x4F86;&#x89E3;&#x6C7A;&#x3002;</p>
<p><em>&#x4E26;&#x4E0D;&#x662F;&#x6BCF;&#x7A2E;&#x60C5;&#x6CC1;&#x90FD;&#x9069;&#x5408;&#x4F7F;&#x7528;Builder pattern&#x4F86;&#x89E3;&#x6C7A;&#xFF0C;Builder pattern&#x662F;&#x89E3;&#x6CD5;&#x4E4B;&#x4E00;&#x3002;</em></p>
<h3 id="&#x7BC4;&#x4F8B;&#xFF1A;"><a href="#&#x7BC4;&#x4F8B;&#xFF1A;" class="headerlink" title="&#x7BC4;&#x4F8B;&#xFF1A;"></a>&#x7BC4;&#x4F8B;&#xFF1A;</h3><p>&#x9084;&#x6C92;&#x6709;&#x4F7F;&#x7528;Builder pattern&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NutritionFacts</span> </span>{</div><div class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> servingSize;     <span class="comment">// (mL) required            </span></div><div class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> servings;        <span class="comment">// (per container) required </span></div><div class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> calories;        <span class="comment">// optional                 </span></div><div class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> fat;             <span class="comment">// (g) optional             </span></div><div class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> sodium;          <span class="comment">// (mg) optional            </span></div><div class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> carbohydrate;    <span class="comment">// (g)  optional            </span></div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">NutritionFacts</span><span class="params">(<span class="keyword">int</span> servingSize, <span class="keyword">int</span> servings)</span> </span>{</div><div class="line">    <span class="keyword">this</span>(servingSize, servings, <span class="number">0</span>);</div><div class="line">  }</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">NutritionFacts</span><span class="params">(<span class="keyword">int</span> servingSize, <span class="keyword">int</span> servings,</span></span></div><div class="line">                        <span class="keyword">int</span> calories) {</div><div class="line">    <span class="keyword">this</span>(servingSize, servings, calories, <span class="number">0</span>);</div><div class="line">  }</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">NutritionFacts</span><span class="params">(<span class="keyword">int</span> servingSize, <span class="keyword">int</span> servings,</span></span></div><div class="line">                        <span class="keyword">int</span> calories, <span class="keyword">int</span> fat) {</div><div class="line">    <span class="keyword">this</span>(servingSize, servings, calories, fat, <span class="number">0</span>);</div><div class="line">  }</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">NutritionFacts</span><span class="params">(<span class="keyword">int</span> servingSize, <span class="keyword">int</span> servings,</span></span></div><div class="line">                        <span class="keyword">int</span> calories, <span class="keyword">int</span> fat, <span class="keyword">int</span> sodium) {</div><div class="line">    <span class="keyword">this</span>(servingSize, servings, calories, fat, sodium, <span class="number">0</span>);</div><div class="line">  }</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">NutritionFacts</span><span class="params">(<span class="keyword">int</span> servingSize, <span class="keyword">int</span> servings,</span></span></div><div class="line">                        <span class="keyword">int</span> calories, <span class="keyword">int</span> fat, <span class="keyword">int</span> sodium,</div><div class="line">                        <span class="keyword">int</span> carbohydrate) {</div><div class="line">    <span class="keyword">this</span>.servingSize = servingSize;</div><div class="line">    <span class="keyword">this</span>.servings = servings;</div><div class="line">    <span class="keyword">this</span>.calories = calories;</div><div class="line">    <span class="keyword">this</span>.fat = fat;</div><div class="line">    <span class="keyword">this</span>.sodium = sodium;</div><div class="line">    <span class="keyword">this</span>.carbohydrate = carbohydrate;</div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>&#x4F7F;&#x7528;Builder pattern&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NutritionFacts</span> </span>{</div><div class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> servingSize;</div><div class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> servings;</div><div class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> calories;</div><div class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> fat;</div><div class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> sodium;</div><div class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> carbohydrate;</div><div class="line"></div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span> </span>{</div><div class="line">    <span class="comment">// Required parameters</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> servingSize;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> servings;</div><div class="line">    <span class="comment">// Optional parameters - initialized to default values</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> calories = <span class="number">0</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> fat = <span class="number">0</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> carbohydrate = <span class="number">0</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> sodium = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Builder</span><span class="params">(<span class="keyword">int</span> servingSize, <span class="keyword">int</span> servings)</span> </span>{</div><div class="line">      <span class="keyword">this</span>.servingSize = servingSize;</div><div class="line">      <span class="keyword">this</span>.servings = servings;</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Builder <span class="title">calories</span><span class="params">(<span class="keyword">int</span> val)</span> </span>{</div><div class="line">      calories = val;</div><div class="line">      <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Builder <span class="title">fat</span><span class="params">(<span class="keyword">int</span> val)</span> </span>{</div><div class="line">      fat = val;</div><div class="line">      <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Builder <span class="title">carbohydrate</span><span class="params">(<span class="keyword">int</span> val)</span> </span>{</div><div class="line">      carbohydrate = val;</div><div class="line">      <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Builder <span class="title">sodium</span><span class="params">(<span class="keyword">int</span> val)</span> </span>{</div><div class="line">      sodium = val;</div><div class="line">      <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> NutritionFacts <span class="title">build</span><span class="params">()</span> </span>{</div><div class="line">      <span class="keyword">return</span> <span class="keyword">new</span> NutritionFacts(<span class="keyword">this</span>);</div><div class="line">    }</div><div class="line">  }</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">private</span> <span class="title">NutritionFacts</span><span class="params">(Builder builder)</span> </span>{</div><div class="line">    servingSize = builder.servingSize;</div><div class="line">    servings = builder.servings;</div><div class="line">    calories = builder.calories;</div><div class="line">    fat = builder.fat;</div><div class="line">    sodium = builder.sodium;</div><div class="line">    carbohydrate = builder.carbohydrate;</div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>initialize NutritionFacts&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">NutritionFacts sodaDrink = <span class="keyword">new</span> NutritionFacts.Builder(<span class="number">240</span>, <span class="number">8</span>).</div><div class="line">      calories(<span class="number">100</span>).sodium(<span class="number">35</span>).carbohydrate(<span class="number">27</span>).build();</div></pre></td></tr></table></figure></p>
<h3 id="&#x6BD4;&#x8F03;&#xFF1A;"><a href="#&#x6BD4;&#x8F03;&#xFF1A;" class="headerlink" title="&#x6BD4;&#x8F03;&#xFF1A;"></a>&#x6BD4;&#x8F03;&#xFF1A;</h3><p>&#x512A;&#x9EDE;&#xFF1A;</p>
<ol>
<li>&#x589E;&#x52A0;&#x53EF;&#x8B80;&#x6027;&#x3002;</li>
<li>&#x8B93;&#x7269;&#x4EF6;&#x70BA;immutable&#x3002;</li>
</ol>
<p>&#x7F3A;&#x9EDE;&#xFF1A;</p>
<ol>
<li>builder&#x548C;object&#x7684;&#x7A0B;&#x5F0F;&#x78BC;&#x91CD;&#x8907;&#x6027;&#x5F88;&#x9AD8;&#x3002;</li>
<li>&#x65B0;&#x589E;&#x6216;&#x522A;&#x9664;object&#x7684;attribute&#xFF0C;&#x9700;&#x8981;&#x56DE;&#x982D;&#x4FEE;&#x6539;builder&#x7A0B;&#x5F0F;&#x78BC;&#x3002;&#x4F8B;&#x5982;&#xFF1A;&#x540C;&#x6642;&#x8981;Override object&#x548C;builder&#x7684;equals(),hashCode()&#x3002;</li>
</ol>
<p><em>&#x9019;&#x88E1;&#x7684;Builder pattern&#x548C;<a href="http://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612" target="_blank" rel="external">Design Patterns: Elements of Reusable Object-Oriented Software</a>&#x4E2D;&#x6240;&#x63D0;&#x5230;&#x7684;<a href="http://en.wikipedia.org/wiki/Builder_pattern" target="_blank" rel="external">Builder pattern</a>&#x4F3C;&#x4E4E;&#x4E0D;&#x4E00;&#x6A23;&#xFF0C;&#x4F46;&#x662F;&#x6982;&#x5FF5;&#x4E0A;&#x5F88;&#x76F8;&#x8FD1;&#x3002;&#x5F8C;&#x8005;&#x6703;&#x6709;&#x4E00;&#x500B;&#x5171;&#x7528;&#x7D44;&#x88DD;&#x548C;&#x5EFA;&#x69CB;Product&#x7684;interface&#xFF1B;&#x524D;&#x8005;&#x56E0;&#x70BA;&#x7D44;&#x88DD;&#x548C;&#x5EFA;&#x69CB;&#x6D41;&#x7A0B;&#x5DEE;&#x7570;&#x904E;&#x5927;&#xFF0C;&#x6240;&#x4EE5;&#x6C92;&#x6709;&#x5171;&#x7528;&#x7684;interface&#x3002;&#x6240;&#x4EE5;&#x524D;&#x8005;&#x5F88;&#x96E3;&#x505A;&#x5230;&#x62BD;&#x63DB;&#x4E0D;&#x540C;&#x7684;Concrete Builder&#x5C31;&#x53EF;&#x4EE5;&#x7522;&#x751F;&#x4E0D;&#x540C;&#x7684;&#x7684;Product&#x3002;</em></p>
<h3 id="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</h3><ul>
<li><a href="http://www.javaspecialists.eu/archive/Issue163.html" target="_blank" rel="external">Book Review: Effective Java 2nd Edition</a></li>
<li><a href="http://www.informit.com/articles/article.aspx?p=1216151&amp;seqNum=1" target="_blank" rel="external">Creating and Destroying Java Objects</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x5728;&amp;#x958B;&amp;#x767C;&amp;#x7684;&amp;#x904E;&amp;#x7A0B;&amp;#x4E2D;&amp;#x5F88;&amp;#x5E38;&amp;#x6703;&amp;#x78B0;&amp;#x5230;&amp;#x9700;&amp;#x8981;&amp;#x50B3;&amp;#x5165;&amp;#x5927;&amp;
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>[Java] 4 types of Java inner classes</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-4-types-of-Java-inner-classes/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-4-types-of-Java-inner-classes/</id>
    <published>2016-12-09T09:24:23.000Z</published>
    <updated>2016-12-13T07:25:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>Java&#x4E2D;&#x6709;&#x56DB;&#x7A2E;inner class&#xFF0C;&#x5206;&#x5225;&#x662F;&#xFF1A;</p>
<ol>
<li>static inner class</li>
<li>member inner Class</li>
<li>local inner class</li>
<li>anonymous inner class</li>
</ol>
<h3 id="Static-inner-class&#xFF1A;"><a href="#Static-inner-class&#xFF1A;" class="headerlink" title="Static inner class&#xFF1A;"></a>Static inner class&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OutterClass</span> </span>{</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">InnerClass</span> </span>{</div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>{</div><div class="line">			System.out.println(<span class="string">&quot;I am a static inner class&quot;</span>);</div><div class="line">		}</div><div class="line">	}</div><div class="line">    </div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</div><div class="line">		OutterClass.InnerClass innerClass = <span class="keyword">new</span> OutterClass.InnerClass();</div><div class="line">		innerClass.print();</div><div class="line">	}    </div><div class="line">}</div></pre></td></tr></table></figure>
<p><em>static inner class&#x4E0D;&#x80FD;&#x5B58;&#x53D6;outter class&#x7684;memeber&#x6216;method&#xFF01;&#x82E5;&#x662F;&#x4E00;&#x5B9A;&#x8981;&#x5B58;&#x53D6;&#xFF0C;&#x5247;memeber&#x6216;method&#x8981;&#x7528;static&#x4FEE;&#x98FE;&#x3002;</em></p>
<h3 id="Member-inner-Class&#xFF1A;"><a href="#Member-inner-Class&#xFF1A;" class="headerlink" title="Member inner Class&#xFF1A;"></a>Member inner Class&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OutterClass</span> </span>{</div><div class="line">	<span class="keyword">private</span> <span class="keyword">int</span>			x	= <span class="number">0</span>;</div><div class="line">	<span class="keyword">private</span> InnerClass	innerClass;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">OutterClass</span><span class="params">()</span> </span>{</div><div class="line">		innerClass = <span class="keyword">new</span> InnerClass();</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">InnerClass</span> </span>{</div><div class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>{</div><div class="line">			x = x++;</div><div class="line">			System.out.println(<span class="string">&quot;Outer x is &quot;</span> + x);</div><div class="line">		}</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>{</div><div class="line">		innerClass.print();</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</div><div class="line">		OutterClass outterClass = <span class="keyword">new</span> OutterClass();</div><div class="line">		outterClass.print();</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure>
<ol>
<li><em>inner class&#x53EF;&#x4EE5;&#x81EA;&#x7531;&#x5B58;&#x53D6;outter class&#x7684;member&#x6216;method&#x3002;</em></li>
<li><p><em>&#x901A;&#x5E38;&#x6703;&#x7528;private&#x4FEE;&#x98FE;inner class&#xFF0C;&#x9019;&#x6A23;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x516C;&#x4F48;&#x592A;&#x591A;&#x7684;&#x7D30;&#x7BC0;&#xFF0C;&#x9055;&#x53CD;&#x5C01;&#x88DD;&#x539F;&#x5247;&#x3002;</em></p>
<h3 id="Local-inner-class&#xFF1A;"><a href="#Local-inner-class&#xFF1A;" class="headerlink" title="Local inner class&#xFF1A;"></a>Local inner class&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OutterClass</span> </span>{</div><div class="line">	<span class="keyword">private</span> <span class="keyword">int</span>	x	= <span class="number">0</span>;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>{</div><div class="line">		<span class="keyword">final</span> <span class="keyword">int</span> y = <span class="number">10</span>;</div><div class="line">		<span class="class"><span class="keyword">class</span> <span class="title">InnerClass</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>{</div><div class="line">			<span class="meta">@Override</span></div><div class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line">				<span class="keyword">while</span> (<span class="keyword">true</span>) {</div><div class="line">					System.out.println(<span class="string">&quot;The value of x in OutterClass is &quot;</span> + x);</div><div class="line">					System.out.println(<span class="string">&quot;The value of y in print() is &quot;</span> + y);</div><div class="line"></div><div class="line">					<span class="keyword">try</span> {</div><div class="line">						Thread.sleep(<span class="number">1000</span>);</div><div class="line">					}</div><div class="line">					<span class="keyword">catch</span> (InterruptedException e) {</div><div class="line">						e.printStackTrace();</div><div class="line">					}</div><div class="line">				}</div><div class="line">			}</div><div class="line"></div><div class="line">		}</div><div class="line"></div><div class="line">		<span class="keyword">new</span> Thread(<span class="keyword">new</span> InnerClass()).start();</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</div><div class="line">		OutterClass outterClass = <span class="keyword">new</span> OutterClass();</div><div class="line">		outterClass.print();</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure>
</li>
<li><p><em>inner class&#x53EF;&#x4EE5;&#x81EA;&#x7531;&#x5B58;&#x53D6;outter class&#x7684;member&#x548C;method&#x3002;</em></p>
</li>
<li><em>inner class&#x8981;&#x5B58;&#x53D6;&#x6240;&#x5728;method&#x7684;&#x8B8A;&#x6578;&#xFF0C;&#x5FC5;&#x9808;&#x4F7F;&#x7528;final&#x4FEE;&#x98FE;&#x8A72;&#x8B8A;&#x6578;&#x3002;<br>&#x539F;&#x56E0;&#xFF1A;&#x4EE5;&#x4E0A;&#x8FF0;&#x4F8B;&#x5B50;&#x70BA;&#x4F8B;&#xFF0C;&#x7576;&#x547C;&#x53EB;&#x5230;outterClass.print()&#xFF0C;&#x8B8A;&#x6578;y&#x5C31;&#x5931;&#x53BB;&#x4F5C;&#x7528;&#x4E86;&#x3002;&#x7136;&#x800C;InnerClass&#x8981;&#x518D;&#x5B58;&#x53D6;y&#x5C31;&#x6703;&#x51FA;&#x932F;&#xFF0C;&#x6240;&#x4EE5;&#x624D;&#x6703;&#x4F7F;&#x7528;final&#x4FEE;&#x98FE;&#x8B8A;&#x6578;y&#x3002;&#x5373;&#x8907;&#x88FD;&#x4E00;&#x4EFD;&#x8B8A;&#x6578;y&#x7D66;InnerClass&#x4F7F;&#x7528;&#xFF0C;&#x4E14;&#x503C;&#x90FD;&#x4E0D;&#x6703;&#x518D;&#x6539;&#x8B8A;&#x3002;Java 8&#x6709;&#x652F;&#x63F4;<a href="http://www.codedata.com.tw/java/understanding-lambda-closure-2-what-is-closure-2" target="_blank" rel="external">Closure</a>&#x5C31;&#x53EF;&#x4EE5;&#x89E3;&#x6C7A;&#x6B64;&#x554F;&#x984C;&#x3002;</em><h3 id="Anonymous-inner-class&#xFF1A;"><a href="#Anonymous-inner-class&#xFF1A;" class="headerlink" title="Anonymous inner class&#xFF1A;"></a>Anonymous inner class&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</div><div class="line">	<span class="keyword">new</span> Runnable() {</div><div class="line">		<span class="meta">@Override</span></div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line">			System.out.println(<span class="string">&quot;I am a anonymous class&quot;</span>);</div><div class="line"></div><div class="line">		}</div><div class="line">	};</div><div class="line">}</div></pre></td></tr></table></figure>
</li>
</ol>
<p><em>&#x6027;&#x8CEA;&#x548C;local inner class&#x76F8;&#x540C;&#x3002;</em></p>
<hr>
<p><em>&#x5982;&#x679C;&#x591A;&#x500B;&#x8B8A;&#x6578;&#x70BA;&#x76F8;&#x540C;&#x540D;&#x7A31;&#x6642;&#xFF0C;&#x9810;&#x8A2D;&#x6703;&#x9078;&#x7528;&#x8DDD;&#x96E2;inner class&#x6700;&#x8FD1;&#x7684;&#x8B8A;&#x6578;&#x3002;&#x4E0D;&#x904E;&#x5BE6;&#x52D9;&#x4E0A;&#x958B;&#x767C;&#x8005;&#x5F88;&#x5C11;&#x6703;&#x628A;&#x8B8A;&#x6578;&#x540D;&#x7A31;&#x53D6;&#x70BA;&#x76F8;&#x540C;&#xFF0C;&#x6709;&#x53EF;&#x80FD;&#x6703;&#x8B93;&#x8B80;&#x8005;&#x56F0;&#x60D1;&#x3002;&#x8ACB;&#x53C3;&#x8003;<a href="http://docs.oracle.com/javase/tutorial/java/javaOO/nested.html#shadowing" target="_blank" rel="external">Shadowing</a>&#x3002;</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShadowTest</span> </span>{</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> x = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">FirstLevel</span> </span>{</div><div class="line"></div><div class="line">        <span class="keyword">public</span> <span class="keyword">int</span> x = <span class="number">1</span>;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">methodInFirstLevel</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{</div><div class="line">            System.out.println(<span class="string">&quot;x = &quot;</span> + x);</div><div class="line">            System.out.println(<span class="string">&quot;this.x = &quot;</span> + <span class="keyword">this</span>.x);</div><div class="line">            System.out.println(<span class="string">&quot;ShadowTest.this.x = &quot;</span> + ShadowTest.<span class="keyword">this</span>.x);</div><div class="line">        }</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String... args)</span> </span>{</div><div class="line">        ShadowTest st = <span class="keyword">new</span> ShadowTest();</div><div class="line">        ShadowTest.FirstLevel fl = st.new FirstLevel();</div><div class="line">        fl.methodInFirstLevel(<span class="number">23</span>);</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>&#x7D50;&#x679C;&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">x = <span class="number">23</span></div><div class="line"><span class="keyword">this</span>.x = <span class="number">1</span></div><div class="line">ShadowTest.<span class="keyword">this</span>.x = <span class="number">0</span></div></pre></td></tr></table></figure></p>
<h3 id="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</h3><ul>
<li><a href="http://www.programcreek.com/2009/02/4-inner-classes-tutorial-examples/" target="_blank" rel="external">4 types of Java inner classes </a></li>
<li><a href="http://www.codedata.com.tw/java/understanding-lambda-closure-2-what-is-closure-2" target="_blank" rel="external">&#x8A8D;&#x8B58; Lambda/Closure&#xFF08;2&#xFF09;&#x4EC0;&#x9EBC;&#x662F; Closure&#xFF1F;</a></li>
<li><a href="http://openhome.cc/Gossip/JavaGossip-V1/InnerClass.htm" target="_blank" rel="external">&#x5167;&#x90E8;&#x985E;&#x5225;&#xFF08;Inner class&#xFF09;</a></li>
<li><a href="http://docs.oracle.com/javase/tutorial/java/javaOO/nested.html#shadowing" target="_blank" rel="external">Shadowing</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java&amp;#x4E2D;&amp;#x6709;&amp;#x56DB;&amp;#x7A2E;inner class&amp;#xFF0C;&amp;#x5206;&amp;#x5225;&amp;#x662F;&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;static inner class&lt;/li&gt;
&lt;li&gt;member i
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>[Java] The SerialVersionUID</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-The-SerialVersionUID/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-The-SerialVersionUID/</id>
    <published>2016-12-09T09:24:00.000Z</published>
    <updated>2016-12-09T11:20:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x7576;&#x5BE6;&#x4F5C;&#x4E86;Serializable interface&#x6642;&#xFF0C;Eclipse&#x7E3D;&#x662F;&#x6703;&#x63D0;&#x9192;&#x4F60;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">The serializable <span class="class"><span class="keyword">class</span> <span class="title">xxx</span> <span class="title">does</span> <span class="title">not</span> <span class="title">declare</span> <span class="title">a</span> <span class="title">static</span> <span class="title">final</span> <span class="title">serialVersionUID</span> <span class="title">field</span> <span class="title">of</span> <span class="title">type</span> <span class="title">long</span></span></div></pre></td></tr></table></figure></p>
<p>serialVersionUID&#x76F8;&#x7576;&#x65BC;&#x9019;&#x500B;Object&#x7684;&#x7248;&#x672C;&#x63A7;&#x7BA1;&#xFF0C;&#x82E5;&#x4E0D;&#x5BA3;&#x544A;serialVersionUID&#xFF0C;JVM&#x6703;&#x5354;&#x52A9;&#x7522;&#x751F;&#x3002;&#x4F46;&#x662F;&#x56E0;&#x70BA;&#x6F14;&#x7B97;&#x6CD5;&#x5C0D;Object&#x5167;&#x5BB9;&#x6709;&#x76F8;&#x7576;&#x9AD8;&#x7684;&#x654F;&#x611F;&#x5EA6;&#x548C;&#x4E0D;&#x540C;&#x7684;JVM&#x6709;&#x4E0D;&#x540C;&#x7684;&#x5BE6;&#x4F5C;&#x65B9;&#x5F0F;&#xFF0C;&#x6240;&#x4EE5;&#x6709;&#x53EF;&#x80FD;Object&#x90FD;&#x4E00;&#x6A23;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x4E0D;&#x540C;JVM&#x4E0A;&#x7B97;&#x51FA;&#x7684;serialVersionUID&#x537B;&#x662F;&#x4E0D;&#x540C;&#xFF0C;&#x4E1F;&#x51FA;InvalidClassException&#x3002;</p>
<h3 id="&#x7BC4;&#x4F8B;&#xFF1A;"><a href="#&#x7BC4;&#x4F8B;&#xFF1A;" class="headerlink" title="&#x7BC4;&#x4F8B;&#xFF1A;"></a>&#x7BC4;&#x4F8B;&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>{</div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span>	serialVersionUID	= <span class="number">1L</span>;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> <span class="keyword">int</span> age;</div><div class="line">	</div><div class="line">	<span class="keyword">private</span> String addres;</div><div class="line">}</div></pre></td></tr></table></figure>
<p>&#x63A5;&#x6536;&#x65B9;&#x5C07;Person Object&#x5E8F;&#x5217;&#x5316;&#x5B58;&#x5230;&#x786C;&#x789F;&#x4E0A;&#x3002;</p>
<p>&#x4E4B;&#x5F8C;Person Object&#x505A;&#x4E86;&#x4FEE;&#x6539;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>{</div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span>	serialVersionUID	= <span class="number">2L</span>;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> String name;</div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>&#x6B64;&#x6642;&#xFF0C;&#x63A5;&#x6536;&#x65B9;&#x5617;&#x8A66;Person Object&#x53CD;&#x5E8F;&#x5217;&#x5316;&#xFF0C;&#x5C31;&#x6703;&#x4E1F;&#x51FA;InvalidClassException&#x3002;</p>
<p>&#x90A3;&#x4E9B;&#x60C5;&#x6CC1;&#x5C6C;&#x65BC;&#x4E0D;&#x53EF;&#x76F8;&#x5BB9;&#x7684;&#x6539;&#x8B8A;&#xFF0C;&#x8ACB;&#x53C3;&#x8003;&#xFF1A;<a href="http://docs.oracle.com/javase/7/docs/platform/serialization/spec/version.html#5172" target="_blank" rel="external">Incompatible Changes</a></p>
<p>&#x90A3;&#x4E9B;&#x60C5;&#x6CC1;&#x5C6C;&#x65BC;&#x53EF;&#x76F8;&#x5BB9;&#x7684;&#x6539;&#x8B8A;&#xFF0C;&#x8ACB;&#x53C3;&#x8003;&#xFF1A;<br><a href="http://docs.oracle.com/javase/7/docs/platform/serialization/spec/version.html#6754" target="_blank" rel="external">Compatible Changes</a></p>
<p>&#x7576;Object&#x5167;&#x5BB9;&#x6539;&#x8B8A;&#xFF0C;&#x53EF;&#x4EE5;&#x6839;&#x64DA;&#x4E0A;&#x8FF0;&#x9023;&#x7D50;&#x4F86;&#x5224;&#x5B9A;&#x5C6C;&#x65BC;&#x53EF;&#x76F8;&#x5BB9;&#x7684;&#x6539;&#x8B8A;&#x6216;&#x662F;&#x4E0D;&#x53EF;&#x76F8;&#x5BB9;&#x7684;&#x6539;&#x8B8A;&#x3002;&#x82E5;&#x662F;&#x4E0D;&#x53EF;&#x76F8;&#x5BB9;&#x7684;&#x6539;&#x8B8A;&#x5C31;&#x8981;&#x4FEE;&#x6B63;serialVersionUID&#x7684;&#x503C;&#x3002;</p>
<h3 id="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</h3><ul>
<li><a href="http://www.mkyong.com/java-best-practices/understand-the-serialversionuid/" target="_blank" rel="external">Understand The SerialVersionUID</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html" target="_blank" rel="external">Serializable (Java Platform SE 7)</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x7576;&amp;#x5BE6;&amp;#x4F5C;&amp;#x4E86;Serializable interface&amp;#x6642;&amp;#xFF0C;Eclipse&amp;#x7E3D;&amp;#x662F;&amp;#x6703;&amp;#x63D0;&amp;#x9192;&amp;#x4F60;&lt;br&gt;&lt;figure 
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>[Java] Enum in Java</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-Enum-in-Java/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-Enum-in-Java/</id>
    <published>2016-12-09T09:23:29.000Z</published>
    <updated>2016-12-13T07:25:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>enum&#x985E;&#x5225;&#x53EF;&#x4EE5;&#x55AE;&#x7368;&#x5BA3;&#x544A;&#x6216;&#x662F;&#x5BA3;&#x544A;&#x5728;&#x5176;&#x4ED6;&#x985E;&#x5225;&#x88E1;&#x9762;&#x3002;</p>
<h3 id="&#x55AE;&#x7368;&#x5BA3;&#x544A;&#xFF1A;"><a href="#&#x55AE;&#x7368;&#x5BA3;&#x544A;&#xFF1A;" class="headerlink" title="&#x55AE;&#x7368;&#x5BA3;&#x544A;&#xFF1A;"></a>&#x55AE;&#x7368;&#x5BA3;&#x544A;&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Direction {</div><div class="line">    EAST,WEST,SOUTH,NORTH;</div><div class="line">}</div></pre></td></tr></table></figure>
<p>&#x5728;&#x7DE8;&#x8B6F;&#x6642;&#x671F;compiler&#x6703;&#x81EA;&#x52D5;&#xFF1A;</p>
<ul>
<li><p>&#x52A0;&#x5165;final&#x4FEE;&#x98FE;enum&#x548C;&#x7E7C;&#x627F;Enum&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">enum</span> Direction extends Enum{</div><div class="line">    EAST,WEST,SOUTH,NORTH;</div><div class="line">}</div></pre></td></tr></table></figure>
</li>
<li><p>&#x52A0;&#x5165;private Constructor&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">enum</span> Direction extends Enum{</div><div class="line">    EAST,WEST,SOUTH,NORTH;</div><div class="line">    <span class="function"><span class="keyword">private</span>  <span class="title">Direction</span><span class="params">(String s, <span class="keyword">int</span> i)</span></span>{</div><div class="line">        <span class="keyword">super</span>(s, i);</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>
</li>
<li><p>&#x52A0;&#x5165;public static final&#x4FEE;&#x98FE;&#x5217;&#x8209;&#x5167;&#x5BB9;&#x503C;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">enum</span> Direction extends Enum{</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Direction EAST,</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Direction WEST,</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Direction SOUTH,</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Direction NORTH;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Direction</span><span class="params">(String s, <span class="keyword">int</span> i)</span></span>{</div><div class="line">        <span class="keyword">super</span>(s, i);</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>
</li>
<li><p>&#x521D;&#x59CB;&#x5316;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">enum</span> Direction extends Enum{</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Direction EAST,</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Direction WEST,</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Direction SOUTH,</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Direction NORTH;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Direction</span><span class="params">(String s, <span class="keyword">int</span> i)</span></span>{</div><div class="line">        <span class="keyword">super</span>(s, i);</div><div class="line">    }</div><div class="line">    </div><div class="line">    <span class="keyword">static</span>{</div><div class="line">        EAST = <span class="keyword">new</span> Direction(<span class="string">&quot;EAST&quot;</span>, <span class="number">0</span>);</div><div class="line">        WEST = <span class="keyword">new</span> Direction(<span class="string">&quot;WEST&quot;</span>, <span class="number">1</span>);</div><div class="line">        SOUTH = <span class="keyword">new</span> Direction(<span class="string">&quot;SOUTH&quot;</span>, <span class="number">2</span>);</div><div class="line">        NORTH = <span class="keyword">new</span> Direction(<span class="string">&quot;NORTH&quot;</span>, <span class="number">3</span>);</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>
</li>
<li><p>override Enum&#x7684;valueOf method&#x3002;</p>
</li>
<li>&#x7522;&#x751F;&#x4E00;&#x500B;values method&#xFF0C;&#x56DE;&#x50B3;&#x503C;&#x70BA;enum&#x985E;&#x5225;&#x5167;&#x5BB9;&#x503C;&#x7684;&#x9663;&#x5217;&#x3002;</li>
</ul>
<hr>
<h3 id="&#x5BA3;&#x544A;&#x5728;&#x5176;&#x4ED6;&#x985E;&#x5225;&#xFF1A;"><a href="#&#x5BA3;&#x544A;&#x5728;&#x5176;&#x4ED6;&#x985E;&#x5225;&#xFF1A;" class="headerlink" title="&#x5BA3;&#x544A;&#x5728;&#x5176;&#x4ED6;&#x985E;&#x5225;&#xFF1A;"></a>&#x5BA3;&#x544A;&#x5728;&#x5176;&#x4ED6;&#x985E;&#x5225;&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DirectionOutter</span> </span>{</div><div class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> Direction {</div><div class="line">        EAST,WEST,SOUTH,NORTH;</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>
<p>&#x5728;&#x7DE8;&#x8B6F;&#x6642;&#x671F;compiler&#x6703;&#x81EA;&#x52D5;&#xFF1A;</p>
<ul>
<li>&#x52A0;&#x5165;static final&#x4FEE;&#x98FE;enum&#x548C;&#x7E7C;&#x627F;Enum&#xFF1A;<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DirectionOutter</span> </span>{</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">enum</span> Direction extends Enum {</div><div class="line">        EAST,WEST,SOUTH,NORTH;</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>
</li>
</ul>
<p>&#x5176;&#x9918;&#x884C;&#x70BA;&#x548C;&#x55AE;&#x7368;&#x5BA3;&#x544A;&#x4E00;&#x6A23;&#x3002;</p>
<hr>
<p>&#x7576;&#x5BA3;&#x544A;&#x4E00;&#x500B;enum&#x985E;&#x5225;&#xFF0C;compiler&#x6703;&#x201D;&#x81EA;&#x52D5;&#x201D;&#x505A;&#x90A3;&#x9EBC;&#x591A;&#x4E8B;&#xFF0C;&#x6703;&#x6709;&#x4EE5;&#x4E0B;&#x7279;&#x6027;&#xFF1A;</p>
<ol>
<li>&#x81EA;&#x52D5;&#x7E7C;&#x627F;<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Enum.html" target="_blank" rel="external">Enum</a>&#x62BD;&#x8C61;&#x985E;&#x5225;&#xFF0C;&#x56E0;&#x70BA;Enum&#x62BD;&#x8C61;&#x985E;&#x5225;&#x5BE6;&#x505A;&#x4E86;<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Comparable.html" target="_blank" rel="external">Comparable</a>&#x548C;<a href="http://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html" target="_blank" rel="external">Serializable</a>&#xFF0C;&#x6240;&#x4EE5;enum&#x7269;&#x4EF6;&#x4E4B;&#x9593;&#x662F;&#x53EF;&#x4EE5;&#x6BD4;&#x8F03;&#x548C;enum&#x7269;&#x4EF6;&#x662F;&#x53EF;&#x4EE5;&#x5E8F;&#x5217;&#x5316;&#x3002;</li>
<li>enum&#x985E;&#x5225;&#x4E0D;&#x80FD;&#x7E7C;&#x627F;&#x5176;&#x4ED6;&#x985E;&#x5225;&#x6216;&#x88AB;&#x7E7C;&#x627F;&#x3002;</li>
<li>enum&#x7269;&#x4EF6;&#x70BA;<a href="http://en.wikipedia.org/wiki/Singleton_pattern" target="_blank" rel="external">Singleton</a>&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;==&#x6216;equals&#x9032;&#x884C;&#x6BD4;&#x8F03;&#x3002;</li>
<li>enum&#x7269;&#x4EF6;&#x70BA;immutable&#x7269;&#x4EF6;&#x3002;</li>
<li>&#x5EFA;&#x69CB;&#x5B50;&#x5B58;&#x53D6;&#x6B0A;&#x9650;&#x4E00;&#x5B9A;&#x662F;private&#x3002;</li>
</ol>
<p><em>&#x53EA;&#x6709;compiler&#x53EF;&#x4EE5;&#x7E7C;&#x627F;Enum&#x3002;</em></p>
<hr>
<h3 id="&#x589E;&#x52A0;&#x5C6C;&#x6027;&#xFF1A;"><a href="#&#x589E;&#x52A0;&#x5C6C;&#x6027;&#xFF1A;" class="headerlink" title="&#x589E;&#x52A0;&#x5C6C;&#x6027;&#xFF1A;"></a>&#x589E;&#x52A0;&#x5C6C;&#x6027;&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Direction {</div><div class="line">	WEST(<span class="number">180</span>),</div><div class="line">	EAST(<span class="number">0</span>),</div><div class="line">	NORTH(<span class="number">90</span>),</div><div class="line">	SOUTH(<span class="number">270</span>);</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="title">Direction</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> angle)</span> </span>{</div><div class="line">		<span class="keyword">this</span>.angle = angle;</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="keyword">private</span> <span class="keyword">int</span>	angle;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAngle</span><span class="params">()</span> </span>{</div><div class="line">		<span class="keyword">return</span> angle;</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure>
<p>&#x5EFA;&#x69CB;&#x5B50;&#x7684;&#x5B58;&#x53D6;&#x6B0A;&#x9650;&#x53EF;&#x4EE5;&#x4E0D;&#x52A0;(compiler&#x6703;&#x81EA;&#x52D5;&#x52A0;&#x5165;private)&#x6216;&#x662F;&#x52A0;&#x5165;privae&#x3002;</p>
<hr>
<h3 id="&#x5BE6;&#x4F5C;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#xFF1A;"><a href="#&#x5BE6;&#x4F5C;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#xFF1A;" class="headerlink" title="&#x5BE6;&#x4F5C;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#xFF1A;"></a>&#x5BE6;&#x4F5C;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Direction {</div><div class="line">	WEST(<span class="number">180</span>) {</div><div class="line">		<span class="meta">@Override</span></div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span> </span>{</div><div class="line">			System.out.println(<span class="string">&quot;WEST&quot;</span>);			</div><div class="line">		}</div><div class="line">	},</div><div class="line">	EAST(<span class="number">0</span>) {</div><div class="line">		<span class="meta">@Override</span></div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span> </span>{</div><div class="line">			System.out.println(<span class="string">&quot;EAST&quot;</span>);		</div><div class="line">		}</div><div class="line">	},</div><div class="line">	NORTH(<span class="number">90</span>) {</div><div class="line">		<span class="meta">@Override</span></div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span> </span>{</div><div class="line">			System.out.println(<span class="string">&quot;NORTH&quot;</span>);			</div><div class="line">		}</div><div class="line">	},</div><div class="line">	SOUTH(<span class="number">270</span>) {</div><div class="line">		<span class="meta">@Override</span></div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span> </span>{</div><div class="line">			System.out.println(<span class="string">&quot;SOUTH&quot;</span>);		</div><div class="line">		}</div><div class="line">	};</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">	Direction(<span class="keyword">final</span> <span class="keyword">int</span> angle) {</div><div class="line">		<span class="keyword">this</span>.angle = angle;</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="keyword">private</span> <span class="keyword">int</span>	angle;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAngle</span><span class="params">()</span> </span>{</div><div class="line">		<span class="keyword">return</span> angle;</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure>
<hr>
<h3 id="&#x5C07;&#x503C;&#x8F49;&#x63DB;&#x6210;enum"><a href="#&#x5C07;&#x503C;&#x8F49;&#x63DB;&#x6210;enum" class="headerlink" title="&#x5C07;&#x503C;&#x8F49;&#x63DB;&#x6210;enum"></a>&#x5C07;&#x503C;&#x8F49;&#x63DB;&#x6210;enum</h3><p>&#x6839;&#x64DA;&#x4F7F;&#x7528;&#x60C5;&#x5883;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;valueOf&#x8F49;&#x63DB;&#x6216;&#x662F;&#x81EA;&#x884C;&#x8A2D;&#x8A08;&#x8F49;&#x5316;&#x65B9;&#x5F0F;&#x3002;</p>
<ul>
<li><p>&#x82E5;&#x60F3;&#x5C07;&#x5B57;&#x4E32;WEST&#x8F49;&#x63DB;&#x6210;Direction.WEST&#xFF1A;<br>&#x4F7F;&#x7528;valueOf</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Direction.valueOf(<span class="string">&quot;WEST&quot;</span>);</div></pre></td></tr></table></figure>
</li>
<li><p>&#x7576;&#x4F7F;&#x7528;&#x8005;&#x8F38;&#x5165;180&#x5EA6;&#x6642;&#xFF0C;&#x8981;&#x8F49;&#x63DB;&#x6210;Direction.WEST&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Direction {</div><div class="line">	WEST(<span class="number">180</span>),EAST(<span class="number">0</span>),NORTH(<span class="number">90</span>),SOUTH(<span class="number">270</span>);</div><div class="line">    </div><div class="line">	Direction(<span class="keyword">final</span> <span class="keyword">int</span> angle) {</div><div class="line">		<span class="keyword">this</span>.angle = angle;</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="keyword">private</span> <span class="keyword">int</span>	angle;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAngle</span><span class="params">()</span> </span>{</div><div class="line">		<span class="keyword">return</span> angle;</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;Integer, Direction&gt;	lookup	= <span class="keyword">new</span> HashMap&lt;Integer, Direction&gt;();</div><div class="line"></div><div class="line">	<span class="keyword">static</span> {</div><div class="line">		<span class="keyword">for</span> (Direction s : Direction.values())</div><div class="line">			lookup.put(s.getAngle(), s);</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Direction <span class="title">get</span><span class="params">(<span class="keyword">int</span> angle)</span> </span>{</div><div class="line">		<span class="keyword">return</span> lookup.get(angle);</div><div class="line">	}</div></pre></td></tr></table></figure>
</li>
</ul>
<p>&#x900F;&#x904E;map&#x7269;&#x4EF6;&#x9032;&#x884C;&#x8F49;&#x63DB;&#x3002;</p>
<hr>
<h3 id="&#x5C07;enum&#x7269;&#x4EF6;&#x5B58;&#x653E;&#x5230;&#x5BB9;&#x5668;&#xFF1A;"><a href="#&#x5C07;enum&#x7269;&#x4EF6;&#x5B58;&#x653E;&#x5230;&#x5BB9;&#x5668;&#xFF1A;" class="headerlink" title="&#x5C07;enum&#x7269;&#x4EF6;&#x5B58;&#x653E;&#x5230;&#x5BB9;&#x5668;&#xFF1A;"></a>&#x5C07;enum&#x7269;&#x4EF6;&#x5B58;&#x653E;&#x5230;&#x5BB9;&#x5668;&#xFF1A;</h3><ul>
<li><p><a href="http://docs.oracle.com/javase/7/docs/api/java/util/EnumSet.html" target="_blank" rel="external">EumSet</a>&#xFF1A;</p>
<ol>
<li>&#x7528;EnumSet&#x4F86;&#x5B58;&#x653E;enum&#x7269;&#x4EF6;&#x7684;&#x6642;&#x9593;&#x548C;&#x7A7A;&#x9593;&#x6548;&#x80FD;&#x8F03;&#x597D;&#x3002;</li>
<li>&#x5728;&#x591A;&#x57F7;&#x884C;&#x7DD2;&#x5BE6;&#x884C;&#x4E0B;&#x662F;&#x4E0D;&#x5B89;&#x5168;&#x3002;</li>
<li>enum&#x7269;&#x4EF6;&#x5728;EnumSet&#x7684;&#x9806;&#x5E8F;&#x70BA;&#x5728;&#x5BA3;&#x544A;&#x6642;&#x5019;&#x7684;&#x9806;&#x5E8F;&#x3002;</li>
</ol>
</li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/util/EnumMap.html" target="_blank" rel="external">EnumMap</a>&#xFF1A;<ol>
<li>&#x7528;EnumSet&#x4F86;&#x5B58;&#x653E;enum&#x7269;&#x4EF6;&#x7684;&#x6642;&#x9593;&#x548C;&#x7A7A;&#x9593;&#x6548;&#x80FD;&#x8F03;&#x597D;&#x3002;</li>
<li>&#x5728;&#x591A;&#x57F7;&#x884C;&#x7DD2;&#x5BE6;&#x884C;&#x4E0B;&#x662F;&#x4E0D;&#x5B89;&#x5168;&#x3002;<h3 id="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</h3></li>
</ol>
</li>
<li><a href="http://howtodoinjava.com/2012/12/07/guide-for-understanding-enum-in-java/" target="_blank" rel="external">Guide for understanding enum in java</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;enum&amp;#x985E;&amp;#x5225;&amp;#x53EF;&amp;#x4EE5;&amp;#x55AE;&amp;#x7368;&amp;#x5BA3;&amp;#x544A;&amp;#x6216;&amp;#x662F;&amp;#x5BA3;&amp;#x544A;&amp;#x5728;&amp;#x5176;&amp;#x4ED6;&amp;#x985E;&amp;#x52
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>[Java] Heap space vs. Stack</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-Heap-space-vs-Stack/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-Heap-space-vs-Stack/</id>
    <published>2016-12-09T09:22:47.000Z</published>
    <updated>2016-12-13T07:25:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5728;&#x7406;&#x89E3;Java&#x662F;&#x5426;&#x70BA;Pass by Value(&#x53C3;&#x8003;<a href="http://pandaforme.ghost.io/java-is-call-by-value-and-not-call-by-reference/" target="_blank" rel="external">&#x9019;&#x7BC7;&#x6587;&#x7AE0;</a>)&#x4E4B;&#x524D;&#xFF0C;&#x5EFA;&#x8B70;&#x5148;&#x4E86;&#x89E3;heap&#x548C;stack&#x7684;&#x529F;&#x7528;&#x3002;</p>
<ul>
<li>Heap space&#xFF1A;<ol>
<li>&#x7576;&#x5EFA;&#x7ACB;&#x7269;&#x4EF6;&#x6642;&#xFF0C;&#x6703;&#x5728;heap space&#x5206;&#x914D;&#x4E00;&#x500B;&#x7A7A;&#x9593;&#x7D66;&#x7269;&#x4EF6;&#x4F7F;&#x7528;&#x3002;</li>
<li>&#x6240;&#x6709;&#x5728;heap space&#x4E0A;&#x7684;&#x7269;&#x4EF6;&#xFF0C;&#x90FD;&#x53EF;&#x4EE5;&#x88AB;&#x5176;&#x4ED6;&#x7684;thread&#x5B58;&#x53D6;&#x3002;</li>
<li>Garbage Collection&#x6703;&#x6E05;&#x9664;heap space&#x5167;&#x6C92;&#x6709;&#x88AB;&#x4F7F;&#x7528;&#x5230;&#x7684;&#x7269;&#x4EF6;&#x3002; </li>
<li>&#x53EF;&#x900F;&#x904E;-Xms&#x53C3;&#x6578;&#x8ABF;&#x6574;heap space&#x7684;&#x958B;&#x59CB;&#x5927;&#x5C0F;&#x3002;</li>
<li>&#x53EF;&#x900F;&#x904E;-Xmx&#x53C3;&#x6578;&#x8A2D;&#x5B9A;heap space&#x7684;&#x6700;&#x5927;&#x503C;&#x3002;</li>
<li>&#x5047;&#x5982;heap space&#x6EFF;&#x4E86;&#xFF0C;Java&#x6703;&#x4E1F;&#x51FA;<figure class="highlight plain"><figcaption><span>Java Heap Space```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">  </div><div class="line">* Stack&#xFF1A;</div><div class="line"> 1. &#x82E5;&#x8B8A;&#x6578;&#x662F;&#x57FA;&#x672C;&#x578B;&#x614B;&#xFF0C;&#x5C31;&#x5B58;&#x653E;&#x5B83;&#x7684;&#x503C;&#x3002;</div><div class="line"> 2. &#x82E5;&#x8B8A;&#x6578;&#x662F;&#x7269;&#x4EF6;&#xFF0C;&#x5C31;&#x5B58;&#x653E;&#x5B83;&#x5728;heap space&#x7684;&#x4F4D;&#x7F6E;&#x3002;</div><div class="line"> 3. stack&#x4E0D;&#x80FD;&#x88AB;&#x5176;&#x4ED6;thead&#x5B58;&#x53D6;&#x3002;</div><div class="line"> 4. &#x53EF;&#x900F;&#x904E;-Xss&#x53C3;&#x6578;&#x8ABF;&#x6574;stack&#x5927;&#x5C0F;&#x3002;</div><div class="line"> 5. &#x5047;&#x5982;stack&#x6EFF;&#x4E86;&#xFF0C;Java&#x6703;&#x4E1F;&#x51FA;```java java.lang.StackOverFlowError</div></pre></td></tr></table></figure></li>
</ol>
</li>
</ul>
<h3 id="&#x7BC4;&#x4F8B;&#xFF1A;"><a href="#&#x7BC4;&#x4F8B;&#xFF1A;" class="headerlink" title="&#x7BC4;&#x4F8B;&#xFF1A;"></a>&#x7BC4;&#x4F8B;&#xFF1A;</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Memory</span> </span>{</div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{ <span class="comment">// Line 1</span></div><div class="line">        <span class="keyword">int</span> i=<span class="number">1</span>; <span class="comment">// Line 2</span></div><div class="line">        Object obj = <span class="keyword">new</span> Object(); <span class="comment">// Line 3</span></div><div class="line">        Memory mem = <span class="keyword">new</span> Memory(); <span class="comment">// Line 4</span></div><div class="line">        mem.foo(obj); <span class="comment">// Line 5</span></div><div class="line">    } <span class="comment">// Line 9</span></div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">foo</span><span class="params">(Object param)</span> </span>{ <span class="comment">// Line 6</span></div><div class="line">        String str = param.toString(); <span class="comment">//// Line 7</span></div><div class="line">        System.out.println(str);</div><div class="line">    } <span class="comment">// Line 8</span></div><div class="line"> </div><div class="line">}</div></pre></td></tr></table></figure>
<p><img src="http://www.journaldev.com/wp-content/uploads/2014/08/Java-Heap-Stack-Memory.png" alt=""></p>
<ol>
<li>&#x7576;&#x958B;&#x59CB;&#x57F7;&#x884C;&#x7A0B;&#x5F0F;&#x6642;&#x5019;&#xFF0C;JVM&#x6703;&#x8F09;&#x5165;&#x76F8;&#x95DC;&#x7684;class&#x5230;heap space&#x3002;</li>
<li>&#x7522;&#x751F;main thread&#x4E26;&#x4E14;&#x5EFA;&#x7ACB;&#x5B83;&#x7684;stack&#x3002;</li>
<li>&#x57F7;&#x884C;Line2&#xFF0C;&#x56E0;&#x70BA;i&#x662F;&#x57FA;&#x672C;&#x578B;&#x614B;&#xFF0C;&#x6240;&#x4EE5;push&#x5176;&#x503C;&#x5230;stack&#x3002;</li>
<li>&#x57F7;&#x884C;Line3&#xFF0C;&#x56E0;&#x70BA;obj&#x662F;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;push&#x5B83;&#x5728;heap space&#x7684;&#x4F4D;&#x7F6E;&#x5230;stack&#x3002;</li>
<li>&#x57F7;&#x884C;Line4&#xFF0C;&#x56E0;&#x70BA;mem&#x662F;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;push&#x5B83;&#x5728;heap space&#x7684;&#x4F4D;&#x7F6E;&#x5230;stack&#x3002;</li>
<li>&#x57F7;&#x884C;Line6&#xFF0C;push obj&#x5728;heap space&#x7684;&#x4F4D;&#x7F6E;&#x5230;stack&#x3002;</li>
<li>&#x57F7;&#x884C;Line7&#xFF0C;push obj.toString()&#x5728;heap space&#x7684;&#x4F4D;&#x7F6E;&#x5230;stack&#x3002;</li>
<li>&#x57F7;&#x884C;Line8&#xFF0C;pop str&#x548C;param&#x3002;</li>
<li>&#x57F7;&#x884C;Line9&#xFF0C;pop mem&#x3001;obj&#x548C;i&#xFF0C;&#x7A0B;&#x5F0F;&#x57F7;&#x884C;&#x7D50;&#x675F;&#x3002;</li>
</ol>
<p><em>&#x5982;&#x4F55;&#x900F;&#x904E;pop&#x5C6C;&#x65BC;&#x9019;&#x500B;method&#x7684;&#x8B8A;&#x6578;&#xFF0C;&#x63A8;&#x6E2C;&#x5BE6;&#x4F5C;&#x65B9;&#x5F0F;&#x6216;&#x8A31;&#x662F;&#x985E;&#x4F3C;&#x65BC;&#x56DB;&#x5247;&#x904B;&#x7B97;&#x3002;</em></p>
<p>&#x4F8B;&#x5982;&#xFF1A;</p>
<ol>
<li>&#x57F7;&#x884C;Line1&#xFF0C;push &#x201C;{&#x201C;&#x3002;</li>
<li>&#x57F7;&#x884C;Line6&#xFF0C;push &#x201C;{&#x201C;&#x3002;</li>
<li>&#x57F7;&#x884C;Line8&#xFF0C;&#x4E00;&#x76F4;pop&#xFF0C;&#x76F4;&#x5230;&#x9047;&#x5230;&#x201D;{&#x201C;&#x505C;&#x6B62;&#x3002;</li>
<li>&#x57F7;&#x884C;Line9&#xFF0C;&#x4E00;&#x76F4;pop&#xFF0C;&#x76F4;&#x5230;&#x9047;&#x5230;&#x201D;{&#x201C;&#x505C;&#x6B62;&#x3002;</li>
</ol>
<h3 id="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"><a href="#&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;" class="headerlink" title="&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;"></a>&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</h3><ul>
<li><a href="http://www.journaldev.com/4098/java-heap-memory-vs-stack-memory-difference" target="_blank" rel="external">Java Heap Memory vs Stack Memory Difference</a></li>
<li><a href="http://java-success.blogspot.tw/2012/04/how-will-you-go-about-explaining.html" target="_blank" rel="external">How will you go about explaining the following Java concepts to a beginner?</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x5728;&amp;#x7406;&amp;#x89E3;Java&amp;#x662F;&amp;#x5426;&amp;#x70BA;Pass by Value(&amp;#x53C3;&amp;#x8003;&lt;a href=&quot;http://pandaforme.ghost.io/java-is-call-by-val
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Celebrity Problem</title>
    <link href="https://pandaforme.github.io/2016/12/09/Celebrity-Problem/"/>
    <id>https://pandaforme.github.io/2016/12/09/Celebrity-Problem/</id>
    <published>2016-12-09T09:22:05.000Z</published>
    <updated>2016-12-13T07:26:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5728;&#x9762;&#x8A66;&#x6642;&#x5019;&#x88AB;&#x554F;&#x5230;&#x9019;&#x500B;&#x554F;&#x984C;&#xFF0C;&#x90A3;&#x6642;&#x5019;&#x53EA;&#x6709;&#x60F3;&#x5230;&#x66B4;&#x529B;&#x89E3;&#x6CD5;&#x2026;</p>
<p>&#x4F86;&#x60F3;&#x770B;&#x770B;&#x9019;&#x500B;&#x554F;&#x984C;&#x7684;&#x6700;&#x4F73;&#x89E3;&#x61C9;&#x8A72;&#x8981;&#x600E;&#x9EBC;&#x505A;&#xFF1F;</p>
<p>Celebrity problem&#x540D;&#x4EBA;&#x554F;&#x984C;&#x7684;&#x63CF;&#x8FF0;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>&#x5728;&#x4E00;&#x500B;&#x623F;&#x9593;&#x88E1;&#x6709; N &#x500B;&#x4EBA;&#xFF0C;&#x5176;&#x4E2D;&#x4E00;&#x500B;&#x662F;&#x540D;&#x4EBA;&#xFF0C;&#x6240;&#x8B02;&#x540D;&#x4EBA;&#x5C31;&#x662F;&#x5927;&#x5BB6;&#x90FD;&#x8A8D;&#x8B58;&#x4ED6;&#xFF0C;&#x4F46;&#x662F;&#x4ED6;&#x4E0D;&#x8A8D;&#x8B58;&#x4EFB;&#x4F55;&#x4EBA;&#x3002;&#x5176;&#x5B83;&#x4EBA;&#x53EF;&#x80FD;&#x8A8D;&#x8B58;&#x623F;&#x9593;&#x88E1;&#x9762;&#x53E6;&#x5916;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x4EBA;&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x554F;&#x4EFB;&#x4F55;&#x4EBA;&#x554F;&#x984C;&#xFF0C;&#x4F46;&#x662F;&#x554F;&#x984C;&#x53EA;&#x80FD;&#x662F;&#xFF1A;&#x4F60;&#x8A8D;&#x8B58; X &#x55CE;&#xFF0C;&#x5C0D;&#x65B9;&#x56DE;&#x7B54; Yes or  No. &#x8ACB;&#x554F;&#x6700;&#x5C11;&#x8981;&#x554F;&#x591A;&#x5C11;&#x500B;&#x554F;&#x984C;&#x624D;&#x80FD;&#x628A;&#x540D;&#x4EBA;&#x627E;&#x51FA;&#x4F86;&#xFF1F;</code></pre>

<p>&#x66B4;&#x529B;&#x89E3;&#x7684;&#x505A;&#x6CD5;&#x5C31;&#x4E0D;&#x63D0;&#x4E86;&#xFF0C;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x662F;O(N^2)&#x3002;</p>
<p>&#x6700;&#x4F73;&#x89E3;&#x4F5C;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A;</p>
<p>&#x5148;&#x5C0D;N&#x500B;&#x4EBA;&#x4F5C;&#x7DE8;&#x865F;&#xFF0C;&#x5F9E;1&#x5230;N&#x3002;&#x5148;&#x5F9E;&#x7DE8;&#x865F;1&#x7684;&#x4EBA;&#x958B;&#x59CB;&#xFF0C;&#x554F;&#x4ED6;&#x8A8D;&#x4E0D;&#x8A8D;&#x8B58;&#x7DE8;&#x865F;2&#x7684;&#x4EBA;&#x3002;<br>&#x60C5;&#x6CC1;&#x6709;&#x5169;&#x7A2E;&#xFF1A;    </p>
<ol>
<li>&#x7DE8;&#x865F;1&#x8A8D;&#x8B58;&#x7DE8;&#x865F;2&#xFF1A;&#x90A3;&#x9EBC;&#x7DE8;&#x865F;1&#x4E00;&#x5B9A;&#x4E0D;&#x662F;&#x540D;&#x4EBA;&#xFF0C;&#x7DE8;&#x865F;2&#x6709;&#x53EF;&#x80FD;&#x662F;&#x540D;&#x4EBA;&#x3002;</li>
<li>&#x7DE8;&#x865F;1&#x4E0D;&#x8A8D;&#x8B58;&#x7DE8;&#x865F;2&#xFF1A;</li>
</ol>
<ul>
<li>&#x82E5;&#x7DE8;&#x865F;2&#x8A8D;&#x8B58;&#x7DE8;&#x865F;1&#xFF1A;&#x7DE8;&#x865F;2&#x4E00;&#x5B9A;&#x4E0D;&#x662F;&#x540D;&#x4EBA;&#xFF0C;&#x7DE8;&#x865F;1&#x6709;&#x53EF;&#x80FD;&#x662F;&#x540D;&#x4EBA;&#x3002;</li>
<li>&#x82E5;&#x7DE8;&#x865F;2&#x4E0D;&#x8A8D;&#x8B58;&#x7DE8;&#x865F;1&#xFF1A;&#x7DE8;&#x865F;1&#x548C;2&#x4E00;&#x5B9A;&#x4E0D;&#x662F;&#x540D;&#x4EBA;&#xFF0C;&#x56E0;&#x70BA;&#x540D;&#x4EBA;&#x8981;&#x6709;N-1&#x4EBA;&#x8A8D;&#x8B58;&#x4ED6;&#x3002;</li>
</ul>
<p>&#x6839;&#x64DA;&#x4EE5;&#x4E0A;&#x7D50;&#x679C;&#xFF0C;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x7D50;&#x8AD6;&#xFF1A;    </p>
<ol>
<li>&#x7DE8;&#x865F;1&#x8A8D;&#x8B58;&#x7DE8;&#x865F;2&#xFF1A;&#x90A3;&#x9EBC;&#x7DE8;&#x865F;1&#x4E00;&#x5B9A;&#x4E0D;&#x662F;&#x540D;&#x4EBA;&#xFF0C;&#x7DE8;&#x865F;2&#x6709;&#x53EF;&#x80FD;&#x662F;&#x540D;&#x4EBA;&#x3002;</li>
<li>&#x7DE8;&#x865F;1&#x4E0D;&#x8A8D;&#x8B58;&#x7DE8;&#x865F;2&#xFF1A;&#x7DE8;&#x865F;2&#x4E00;&#x5B9A;&#x4E0D;&#x662F;&#x540D;&#x4EBA;&#xFF0C;&#x7DE8;&#x865F;1&#x6709;&#x201D;&#x53EF;&#x80FD;&#x201D;&#x662F;&#x540D;&#x4EBA;&#x3002;</li>
</ol>
<p>&#x6BCF;&#x554F;&#x4E00;&#x4EBA;&#x5C31;&#x6703;&#x6DD8;&#x6C70;&#x6389;&#x4E00;&#x4EBA;&#xFF0C;&#x63A5;&#x8457;&#x7E7C;&#x7E8C;&#x554F;&#x53EF;&#x80FD;&#x662F;&#x540D;&#x4EBA;&#x7684;&#x4EBA;&#x9078;&#x548C;&#x4E0B;&#x4E00;&#x500B;&#x7DE8;&#x865F;&#x7684;&#x95DC;&#x4FC2;&#xFF0C;&#x76F4;&#x5230;&#x554F;&#x5B8C;N&#x500B;&#x4EBA;&#x5C31;&#x53EF;&#x4EE5;&#x627E;&#x51FA;&#x540D;&#x4EBA;&#x3002;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x662F;O(N)&#x3002;</p>
<p>####&#x53C3;&#x8003;&#x8CC7;&#x6599;&#xFF1A;</p>
<ol>
<li><a href="http://www.careercup.com/question?id=13167666" target="_blank" rel="external">Celebrity Problem</a></li>
<li><a href="http://blog.csdn.net/beiyeqingteng/article/details/7707485" target="_blank" rel="external">&#x540D;&#x4EBA;&#x554F;&#x984C; (Celebrity problem)</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x5728;&amp;#x9762;&amp;#x8A66;&amp;#x6642;&amp;#x5019;&amp;#x88AB;&amp;#x554F;&amp;#x5230;&amp;#x9019;&amp;#x500B;&amp;#x554F;&amp;#x984C;&amp;#xFF0C;&amp;#x90A3;&amp;#x6642;&amp;#x5019;&amp;#x53EA;&amp;
    
    </summary>
    
      <category term="Algorithm" scheme="https://pandaforme.github.io/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="https://pandaforme.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] Remove Duplicates from Sorted List</title>
    <link href="https://pandaforme.github.io/2016/12/09/LeetCode-Remove-Duplicates-from-Sorted-List/"/>
    <id>https://pandaforme.github.io/2016/12/09/LeetCode-Remove-Duplicates-from-Sorted-List/</id>
    <published>2016-12-09T09:21:23.000Z</published>
    <updated>2016-12-13T07:36:11.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="&#x984C;&#x76EE;&#xFF1A;"><a href="#&#x984C;&#x76EE;&#xFF1A;" class="headerlink" title="&#x984C;&#x76EE;&#xFF1A;"></a>&#x984C;&#x76EE;&#xFF1A;</h4><p><a href="https://oj.leetcode.com/problems/remove-duplicates-from-sorted-list/" target="_blank" rel="external">Remove Duplicates from Sorted List</a></p>
<p><pre><code><br>Given a sorted linked list, delete all duplicates such that each element appear only once.</code></pre></p>
<p>For example,<br>Given 1-&gt;1-&gt;2, return 1-&gt;2.<br>Given 1-&gt;1-&gt;2-&gt;3-&gt;3, return 1-&gt;2-&gt;3.<br></p>
<h4 id="&#x89E3;&#x6CD5;&#xFF1A;"><a href="#&#x89E3;&#x6CD5;&#xFF1A;" class="headerlink" title="&#x89E3;&#x6CD5;&#xFF1A;"></a>&#x89E3;&#x6CD5;&#xFF1A;</h4><p>&#x6709;&#x4E00;&#x500B;&#x6307;&#x6A19;&#x6307;&#x5411;head&#xFF0C;&#x7A31;&#x4E4B;unique&#xFF1B;&#x53E6;&#x5916;&#x6709;&#x4E00;&#x500B;&#x6307;&#x6A19;&#x6307;&#x5411;&#x4E0B;&#x4E00;&#x500B;node&#xFF0C;&#x7A31;&#x4E4B;current&#x3002;<br>&#x82E5;unique&#x548C;current&#x7684;&#x503C;&#x4E00;&#x6A23;&#xFF0C;&#x5247;current&#x7E7C;&#x7E8C;&#x7E7C;&#x7E8C;&#x6307;&#x5411;&#x4E0B;&#x4E00;&#x500B;node&#xFF0C;&#x76F4;&#x5230;current&#x548C;unique&#x7684;&#x503C;&#x4E0D;&#x4E00;&#x6A23;&#x3002;<br>uniqe&#x6307;&#x5411;&#x4E0B;&#x4E00;&#x500B;node&#xFF0C;uniqe&#x518D;&#x548C;current&#x7684;&#x503C;&#x4E92;&#x63DB;&#x3002;&#x76F4;&#x5230;current&#x70BA;null&#x3002;<br>&#x6700;&#x5F8C;&#x5C07;uniqe&#x6307;&#x5411;null&#xFF0C;&#x5C31;&#x6703;&#x5F97;&#x5230;&#x6BCF;&#x500B;&#x5143;&#x7D20;&#x90FD;&#x70BA;&#x552F;&#x4E00;&#x7684;List&#x3002;</p>
<p>&#x4F8B;&#x5982;&#xFF1A;<br>&#x6709;&#x4E00;&#x500B;&#x6392;&#x5E8F;&#x597D;&#x7684;list&#xFF1A;1 -&gt; 1 -&gt; 2 -&gt; 3 -&gt; 3 -&gt; null</p>
<p><pre><code><br>Step 1&#xFF1A;<br>1 -&gt; 1 -&gt; 2 -&gt; 3 -&gt; 3 -&gt; null<br>u         c</code></pre></p>
<p>Step 2&#xFF1A;<br>1 -&gt; 2 -&gt; 1 -&gt; 3 -&gt; 3 -&gt; null<br>     u         c</p>
<p>Step 3&#xFF1A;<br>1 -&gt; 2 -&gt; 3 -&gt; 1 -&gt; 3 -&gt; null<br>          u         c</p>
<p>Step 4&#xFF1A;<br>1 -&gt; 2 -&gt; 3 -&gt; null<br>          u<br></p>
<h4 id="&#x7A0B;&#x5F0F;&#x78BC;&#xFF1A;Remove-Duplicates-from-Sorted-List"><a href="#&#x7A0B;&#x5F0F;&#x78BC;&#xFF1A;Remove-Duplicates-from-Sorted-List" class="headerlink" title="&#x7A0B;&#x5F0F;&#x78BC;&#xFF1A;Remove Duplicates from Sorted List"></a>&#x7A0B;&#x5F0F;&#x78BC;&#xFF1A;<a href="https://github.com/pandaforme/LeetCode/blob/master/src/RemoveDuplicatesFromSortedList.java" target="_blank" rel="external">Remove Duplicates from Sorted List</a></h4>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;&amp;#x984C;&amp;#x76EE;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#&amp;#x984C;&amp;#x76EE;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x984C;&amp;#x76EE;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;&amp;#x984C;&amp;#x76E
    
    </summary>
    
      <category term="LeetCode" scheme="https://pandaforme.github.io/categories/LeetCode/"/>
    
    
      <category term="Algorithm" scheme="https://pandaforme.github.io/tags/Algorithm/"/>
    
      <category term="LeetCode" scheme="https://pandaforme.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>[Java] The details of Inheritance</title>
    <link href="https://pandaforme.github.io/2016/12/09/Java-The-details-of-Inheritance/"/>
    <id>https://pandaforme.github.io/2016/12/09/Java-The-details-of-Inheritance/</id>
    <published>2016-12-09T09:20:42.000Z</published>
    <updated>2016-12-13T07:24:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5728;Java&#x4F7F;&#x7528;&#x7E7C;&#x627F;&#x6642;&#x8981;&#x6CE8;&#x610F;&#x5E7E;&#x500B;&#x5C0F;&#x7D30;&#x7BC0;&#xFF0C;&#x4E0D;&#x7136;&#x5F88;&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x3002;</p>
<ul>
<li>&#x5EFA;&#x69CB;&#x5B50;&#x7684;&#x547C;&#x53EB;&#x9806;&#x5E8F;    </li>
<li>compiler&#x6703;&#x81EA;&#x52D5;&#x7522;&#x751F;&#x7121;&#x53C3;&#x6578;&#x7684;&#x5EFA;&#x69CB;&#x5B50;&#xFF0C;&#x6703;&#x81EA;&#x52D5;&#x521D;&#x59CB;&#x5316;field&#x8B8A;&#x6578;    </li>
</ul>
<p>&#x4F8B;&#x5982;&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Parent1</span></span>{</div><div class="line">  <span class="keyword">int</span> i;</div><div class="line">  String s;</div><div class="line">  <span class="comment">/* compiler&#x6703;&#x81EA;&#x52D5;&#x7522;&#x751F;&#x7121;&#x53C3;&#x6578;&#x7684;&#x5EFA;&#x69CB;&#x5B50;&#xFF0C;</span></div><div class="line">   * &#x4E26;&#x4E14;&#x521D;&#x59CB;&#x5316;field&#x8B8A;&#x6578;</div><div class="line">   * public Parent1() {</div><div class="line">   *   i = 0;</div><div class="line">   *   s = null;</div><div class="line">   * }</div><div class="line">   */</div><div class="line">}</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Parent2</span> <span class="title">extend</span> <span class="title">Parent1</span></span>{</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Parent2</span><span class="params">(<span class="keyword">int</span> i)</span></span>{</div><div class="line">    <span class="comment">//&#x56E0;&#x70BA;&#x6C92;&#x6709;&#x6307;&#x5B9A;&#x8981;&#x547C;&#x53EB;&#x7236;&#x985E;&#x5225;&#x7684;&#x54EA;&#x4E00;&#x500B;&#x5EFA;&#x69CB;&#x5B50;&#xFF0C;</span></div><div class="line">    <span class="comment">//compiler&#x6703;&#x81EA;&#x52D5;&#x547C;&#x53EB;super()</span></div><div class="line">  }</div><div class="line">}</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="title">extend</span> <span class="title">Parent2</span></span>{</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Son</span><span class="params">()</span></span>{</div><div class="line">    <span class="keyword">super</span>(<span class="number">1</span>);</div><div class="line">  } </div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>new Son()&#x7684;&#x6642;&#x5019;&#x6703;&#x547C;&#x53EB;Parent2&#x7684;&#x5EFA;&#x69CB;&#x5B50;(public Parent2(int i))&#xFF0C;Parent2&#x7684;&#x5EFA;&#x69CB;&#x5B50;&#x6703;&#x547C;&#x53EB;Parent1&#x7684;&#x5EFA;&#x69CB;&#x5B50;(public Parent1())&#x3002;</p>
<p><em>&#x6CE8;&#x610F;&#xFF1A;&#x7576;&#x6C92;&#x6709;&#x5BEB;&#x5EFA;&#x69CB;&#x5B50;&#xFF0C;compiler&#x6703;&#x81EA;&#x52D5;&#x7522;&#x751F;&#x4E00;&#x500B;&#x7121;&#x53C3;&#x6578;&#x7684;&#x5EFA;&#x69CB;&#x5B50;&#x3002;&#x5728;&#x7E7C;&#x627F;&#x904E;&#x7A0B;&#x4E2D;&#x82E5;&#x6C92;&#x6709;&#x7279;&#x5225;&#x6307;&#x5B9A;&#x8981;&#x547C;&#x53EB;&#x7236;&#x985E;&#x5225;&#x7684;&#x54EA;&#x4E00;&#x500B;&#x5EFA;&#x69CB;&#x5B50;&#xFF0C;compiler&#x6703;&#x81EA;&#x52D5;&#x547C;&#x53EB;super()&#x3002;</em></p>
<p>&#x4F86;&#x770B;&#x4E00;&#x500B;&#x4F8B;&#x5B50;&#xFF1A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Base</span> </span>{</div><div class="line">	<span class="keyword">int</span>	i;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Base</span><span class="params">()</span> </span>{</div><div class="line">		add(<span class="number">1</span>);</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> j)</span> </span>{</div><div class="line">		i += j;</div><div class="line">	}</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Extension</span> <span class="keyword">extends</span> <span class="title">Base</span> </span>{</div><div class="line">	<span class="keyword">int</span>	i	= <span class="number">3</span>;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Extension</span><span class="params">()</span> </span>{</div><div class="line">		add(<span class="number">2</span>);</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> j)</span> </span>{</div><div class="line">		i += j * <span class="number">2</span>;</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</div><div class="line">		exec(<span class="keyword">new</span> Extension());</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">exec</span><span class="params">(Extension base)</span> </span>{</div><div class="line">		base.add(<span class="number">8</span>);</div><div class="line">		System.out.println(base.i);</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>&#x6703;&#x5370;&#x51FA;&#x4EC0;&#x9EBC;&#x6A23;&#x7684;&#x7D50;&#x679C;&#x5462;&#xFF1F;</p>
<p>&#x5206;&#x6790;&#xFF1A;    </p>
<ol>
<li>new Extension()&#x7684;&#x6642;&#x5019;&#x6703;&#x547C;&#x53EB;Base&#x7684;&#x5EFA;&#x69CB;&#x5B50;(public Base())&#xFF0C;&#x547C;&#x53EB;add(2)&#x3002;</li>
<li>&#x56E0;&#x70BA;Extension&#x6709;&#x8986;&#x5BEB;(override)Base&#x7684;add function&#xFF0C;&#x6240;&#x4EE5;Base&#x5EFA;&#x69CB;&#x5B50;&#x6240;&#x547C;&#x53EB;&#x7684;add(1)&#x662F;&#x547C;&#x53EB;Extension&#x4E2D;&#x7684;add function&#x3002;</li>
<li>&#x56E0;&#x70BA;&#x591A;&#x578B;&#x7684;&#x95DC;&#x4FC2;&#xFF0C;&#x7576;Base&#x5EFA;&#x69CB;&#x5B50;&#x547C;&#x53EB;add(1)&#xFF0C;&#x88E1;&#x9762;&#x7684;i&#x662F;Extension&#x7684;i&#xFF0C;&#x4E26;&#x4E0D;&#x662F;Base&#x7684;i&#x3002;</li>
<li>&#x7576;Base&#x5EFA;&#x69CB;&#x5B50;&#x547C;&#x53EB;add(1)&#x5B8C;&#x7562;&#xFF0C;&#x6B64;&#x6642;Extension&#x7684;i&#x70BA;2&#x3002;</li>
<li>&#x63A5;&#x8457;&#x547C;&#x53EB;Extension&#x7684;&#x5EFA;&#x69CB;&#x5B50;&#xFF0C;&#x6B64;&#x6642;&#x6703;&#x5148;&#x521D;&#x59CB;&#x5316;field&#x8B8A;&#x6578;&#xFF0C;&#x6240;&#x4EE5;i&#x6703;&#x88AB;&#x91CD;&#x8A2D;&#x70BA;3&#x3002;</li>
<li>&#x4E4B;&#x5F8C;&#x662F;&#x547C;&#x53EB;add(2)&#xFF0C;&#x6B64;&#x6642;i&#x70BA;7&#x3002;Extension&#x7684;&#x521D;&#x59CB;&#x5316;&#x5B8C;&#x7562;&#x3002;</li>
<li>&#x547C;&#x53EB;add(8)&#x6642;&#xFF0C;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;i = 7 +16 = 23&#xFF0C;&#x6240;&#x4EE5;&#x5370;&#x51FA;23&#x3002;</li>
</ol>
<p>&#x5047;&#x5982;&#x5C07;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">exec</span><span class="params">(Extension base)</span></span></div></pre></td></tr></table></figure></p>
<p>&#x6539;&#x6210;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">exec</span><span class="params">(Base base)</span></span></div></pre></td></tr></table></figure></p>
<p>&#x7D50;&#x679C;&#x9084;&#x662F;&#x4E00;&#x6A23;&#x55CE;&#xFF1F;<br>&#x7D50;&#x679C;&#x662F;0&#xFF0C;&#x56E0;&#x70BA;&#x6B64;&#x6642;&#x7684;i&#x6307;&#x7684;&#x662F;Base&#x7684;i&#x3002;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x5728;Java&amp;#x4F7F;&amp;#x7528;&amp;#x7E7C;&amp;#x627F;&amp;#x6642;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x5E7E;&amp;#x500B;&amp;#x5C0F;&amp;#x7D30;&amp;#x7BC0;&amp;#xFF0C;&amp;#x4E0D;&amp;#x71
    
    </summary>
    
      <category term="Java" scheme="https://pandaforme.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://pandaforme.github.io/tags/Java/"/>
    
  </entry>
  
</feed>
